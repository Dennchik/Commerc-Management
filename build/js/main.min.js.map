{"version":3,"file":"main.min.js","mappings":"+GAsdA,MAAMA,EAA8B,oBAAXC,OAGnBC,EAAMF,EAAYC,OAAS,KAG3BE,EAAMH,EAAYI,SAAW,KAK7BC,EACI,EADJA,EAEO,EAFPA,EAGC,EAHDA,EAIO,EAJPA,EAKK,EAILC,EACI,EADJA,EAEE,EAFFA,EAGG,EAHHA,EAIK,EAILC,EACE,EADFA,EAEE,EAFFA,EAGG,EAIHC,EAAmB,CACvBC,QAAS,EACTC,KAAM,EACNC,MAAO,GAKHC,EAA2BC,SAC3BC,EAAcD,SACdE,EAAcF,SACdG,EAAmBH,SAEnBI,GADoBJ,SACAA,UAIpBK,EAAW,MACXC,EAAW,KACXC,EAAI,IAKJC,EAAc,GACdC,EAAgC,MACpC,MAAMC,EAAM,IAAIC,IAIhB,OAHAD,EAAIE,IAAI,IAAK,cACbF,EAAIE,IAAI,IAAK,cACbF,EAAIE,IAAI,IAAK,cACNF,CACR,EANqC,GAQhCG,EAAkB,CACtB,aACA,aACA,aACA,SACA,UACA,UACA,UACA,QACA,SACA,SACA,SACA,OACA,QACA,QACA,cACA,SACA,YAGIC,EAA0CD,EAAgBE,QAAO,CAACC,EAAGC,KAAM,IAAKD,EAAG,CAACC,GAAIA,EAAI,OAAO,CAAC,GAKpGC,KAAO,OAIPC,EAAa,iDACbC,EAAa,8CACbC,EAAc,uEACdC,EAAa,oFACbC,EAAc,6GAEdC,EAAuB,gCAEvBC,EAAe,8CACfC,EAAe,kBACfC,EAAoB,qBACpBC,EAAwB,eAMxBC,EAAW,CACfC,GAAI,KACJC,UAAW,KACXC,aAAc,KACdC,aAAc,EACdC,UAhEa,IAiEbC,KAAM,EACNC,UAAU,EACVC,WAAW,EACXC,UAAU,EACVC,SAAUhC,EACViC,MAAO,EACPC,UAAW,EACXC,KAAM,SACNC,YAAahD,EAAiBC,QAC9BgD,SAAU3B,GAAKA,EACf4B,QAAS3B,KACT4B,eAAgB5B,KAChB6B,SAAU7B,KACV8B,OAAQ9B,KACR+B,QAAS/B,KACTgC,WAAYhC,KACZiC,SAAUjC,MAGNkC,EAAQ,CAEZC,QAAS,KAETC,KAAMhE,GAGFiE,EAAU,CAEd1B,WAEA2B,UAAW,EAEXC,UAAW,EAEXC,cAAe,KAGXC,EAAiB,CAAEC,QAAS,QAASC,OAAQ,MAE/C1E,IACGE,EAAIyE,UAASzE,EAAIyE,QAAU,IAChCzE,EAAIyE,QAAQC,KAAKJ,IASnB,MAAMK,YAAcC,GAAOA,EAAIrE,QAAQ8B,EAAc,SAASsC,cAQxDE,iBAAmB,CAACD,EAAKE,IAA6B,IAArBF,EAAIG,QAAQD,GAI7CE,EAAMC,KAAKD,IAIXE,EAAQC,MAAMC,QAEdC,MAAQ1D,GAAKA,GAAKA,EAAE2D,cAAgBC,OAEpCC,MAAQ7D,GAAkB,iBAANA,IAAmB8D,MAAM9D,GAE7C+D,MAAQ/D,GAAkB,iBAANA,EAEpBgE,MAAQhE,GAAkB,mBAANA,EAEpBiE,MAAQjE,QAAkB,IAANA,EAEpBkE,MAAQlE,GAAKiE,MAAMjE,IAAY,OAANA,EAEzBmE,MAAQnE,GAAK7B,GAAa6B,aAAaoE,WAEvCC,MAAQrE,GAAKG,EAAWmE,KAAKtE,GAE7BuE,MAAQvE,GAAKkD,iBAAiBlD,EAAG,OAEjCwE,MAAQxE,GAAKkD,iBAAiBlD,EAAG,OAIjCyE,MAAQzE,IAAMuC,EAAQ1B,SAAS6D,eAAe1E,GAQ9C2E,YAAc1B,GAAOc,MAAMd,GAC/B2B,WAAgC,GACX,EAIjBC,EAAMC,KAAKD,IACXE,EAAOD,KAAKC,KACZC,EAAMF,KAAKE,IACXC,EAAMH,KAAKG,IACXC,EAAMJ,KAAKI,IAEXC,GADML,KAAKM,IACJN,KAAKK,MACZE,EAAQP,KAAKO,MACbC,EAAOR,KAAKQ,KACZC,EAAMT,KAAKS,IAEXC,GADQV,KAAKW,MACRX,KAAKU,IACVE,GAASZ,KAAKa,MAQdC,MAAQ,CAAC3F,EAAG4F,EAAKN,IAAQtF,EAAI4F,EAAMA,EAAM5F,EAAIsF,EAAMA,EAAMtF,EAEzD6F,GAAW,CAAC,EAOZH,MAAQ,CAAC1F,EAAG8F,KAChB,GAAIA,EAAgB,EAAG,OAAO9F,EAC9B,IAAK8F,EAAe,OAAOL,GAAOzF,GAClC,IAAI+F,EAAIF,GAASC,GAEjB,OADKC,IAAGA,EAAIF,GAASC,GAAiB,IAAMA,GACrCL,GAAOzF,EAAI+F,GAAKA,CAAC,EAQpBC,KAAO,CAAChG,EAAGiG,IAAc3C,EAAM2C,GAAaA,EAAUnG,QAAO,CAACoG,EAASC,IAAQlB,EAAIkB,EAAKnG,GAAKiF,EAAIiB,EAAUlG,GAAKmG,EAAKD,IAAYD,EAAYR,GAAOzF,EAAIiG,GAAaA,EAAYjG,EAQjLoG,YAAc,CAACC,EAAOC,EAAKC,IAAaF,GAASC,EAAMD,GAASE,EAQhEC,OAAS,CAACZ,EAAKN,EAAKQ,KAAoB,MAAMW,EAAI,KAAOX,GAAiB,GAAI,OAAOV,GAAOP,KAAK2B,UAAYlB,EAAMM,EAAO,EAAIa,GAAMb,GAAOa,GAAKA,GAOhJC,QAAUC,IACd,IAAsBC,EAAGC,EAArBJ,EAAIE,EAAMG,OACd,KAAOL,GAAKI,EAAIL,OAAO,IAAKC,GAAIG,EAAID,EAAMF,GAAIE,EAAMF,GAAKE,EAAME,GAAIF,EAAME,GAAKD,EAC9E,OAAOD,CAAK,EAORI,cAAgB/G,GAAKA,IAAMgH,IAAW3H,EAAWW,KAAOgH,KAAY,KAAOhH,EAM3EiH,cAAgBjH,GAAKA,GAAKZ,EAAWA,EAAW2H,cAAcrB,MAAM1F,EAAG,KASvEkH,WAAanH,GAAKuD,EAAMvD,GAAK,IAAKA,GAAMA,EAWxCoH,aAAe,CAACC,EAAIC,KACxB,MAAMC,EAA6B,IAAMF,GACzC,IAAK,IAAIrB,KAAKsB,EAAI,CAChB,MAAME,EAA0B,EAAKxB,GACrCuB,EAAOvB,GAAK/B,MAAMuD,GAA2B,EAAKxB,GAAKwB,CACzD,CAAG,OAAOD,CAAM,EAaZE,gBAAkB,CAACC,EAAQC,EAAUC,EAASC,EAAW,QAASC,EAAW,WACjF,IAAIC,EAAOL,EAAOM,MACdC,EAAmBH,EAKvB,IAJIF,IACFG,EAAOL,EAAOQ,MACdD,EAAmBJ,GAEdE,GAAM,CACX,MAAMI,EAAcJ,EAAKE,GACzBN,EAASI,GACTA,EAAOI,CACT,GAUIC,YAAc,CAACV,EAAQW,EAAOR,EAAW,QAASC,EAAW,WACjE,MAAMQ,EAAOD,EAAMR,GACbE,EAAOM,EAAMP,GACnBQ,EAAOA,EAAKR,GAAYC,EAAOL,EAAOM,MAAQD,EAC9CA,EAAOA,EAAKF,GAAYS,EAAOZ,EAAOQ,MAAQI,EAC9CD,EAAMR,GAAY,KAClBQ,EAAMP,GAAY,IAAI,EAWlBS,SAAW,CAACb,EAAQW,EAAOG,EAAYX,EAAW,QAASC,EAAW,WAC1E,IAAIQ,EAAOZ,EAAOQ,MAClB,KAAOI,GAAQE,GAAcA,EAAWF,EAAMD,IAAQC,EAAOA,EAAKT,GAClE,MAAME,EAAOO,EAAOA,EAAKR,GAAYJ,EAAOM,MAC5CM,EAAOA,EAAKR,GAAYO,EAAQX,EAAOM,MAAQK,EAC/CN,EAAOA,EAAKF,GAAYQ,EAAQX,EAAOQ,MAAQG,EAC/CA,EAAMR,GAAYS,EAClBD,EAAMP,GAAYC,CAAI,EAOlBU,kBAAoB9E,IAExB,IAAI+E,EACJ,MAAO,IAAIC,KACT,IAAIC,EAAkBC,EAA0BzH,EAAUC,EACtDqH,IACFE,EAAmBF,EAAQE,iBAC3BC,EAA2BH,EAAQI,kBACnC1H,EAAWsH,EAAQtH,SACnBC,EAAYqH,EAAQK,WACpBL,EAAQM,UAEV,MAAMC,EAAUtF,KAAegF,GAM/B,OALIM,IAAYjF,MAAMiF,IAAYA,EAAQD,SAAQN,EAAUO,GACvDhF,MAAM4E,KACc,EAAUD,iBAAmBA,EAC7B,EAAUE,mBAAqBzH,GAAcuH,EAAmB,GAAiBxH,EAAWA,GAAY,EAAIyH,EAA2BA,GAEzJI,GAAW/I,IAAI,CACxB,EAOF,MAAMgJ,MAGJ,WAAAvF,CAAYwF,EAAW,GAErBC,KAAKC,UAAY,EAEjBD,KAAKE,aAAeH,EAEpBC,KAAKG,aAAeJ,EAEpBC,KAAKI,WAAaL,EAElBC,KAAKK,UAAYN,EAEjBC,KAAKM,eAAiB,EAEtBN,KAAKO,eAAiBhE,MAAMpG,EA/XjB,IA+X6B,GAExC6J,KAAKQ,KAjYM,IAmYXR,KAAKS,OAAS,EAEdT,KAAKU,cAAe,EAEpBV,KAAKpB,MAAQ,KAEboB,KAAKlB,MAAQ,IACf,CAEA,OAAI6B,GACF,OAAOX,KAAKQ,IACd,CAEA,OAAIG,CAAI7I,GACN,MAAM8I,EAAwBZ,KAAKO,eAC7BM,GAAM/I,EACN6I,EAAME,EAAK5K,EAAWA,EAAW4K,EACjCC,EAAgBvE,MAAMpG,EAAIwK,EAAK,GACrCX,KAAKQ,KAAOG,EACZX,KAAKO,eAAiBO,EACtBd,KAAKM,gBAAkBQ,EAAgBF,CACzC,CAEA,SAAIG,GACF,OAAOf,KAAKS,MACd,CAEA,SAAIM,CAAMlJ,GACR,MAAMmJ,GAAOnJ,EACbmI,KAAKS,OAASO,EAAM/K,EAAWA,EAAW+K,CAC5C,CAMA,WAAAC,CAAYC,GACV,MAAMC,EAAgBnB,KAAKM,eACrBc,EAAcpB,KAAKG,aAKzB,GAJAH,KAAKG,cAAiBe,EAAOE,EAIzBA,EAAcD,EAAe,OAAO7L,EACxC,MAAMwL,EAAgBd,KAAKO,eACrBc,EAAaD,EAAcD,EAIjC,OADAnB,KAAKM,gBAAkBe,EAAaP,EAAgBA,EAAgBO,EAC7D/L,CACT,CAMA,gBAAAgM,CAAiBJ,GACf,MAAMK,EAAQL,EAAOlB,KAAKK,UAG1B,OAFAL,KAAKC,UAAYsB,EACjBvB,KAAKK,UAAYa,EACVK,CACT,EAeF,MAAMC,OAAS,CAACC,EAAUP,EAAMQ,EAAeC,EAAgBC,KAE7D,MAAMtD,EAASmD,EAASnD,OAClBnG,EAAWsJ,EAAStJ,SACpB0J,EAAYJ,EAASI,UACrBC,EAAoBL,EAASK,kBAC7BC,EAAiBN,EAASM,eAC1BC,EAAoBP,EAASO,kBAC7BC,EAAaR,EAASQ,WACtBC,EAAYT,EAASS,UACrBvC,EAAa8B,EAAS9B,WACtBe,EAAee,EAASf,aACxByB,EAAgBV,EAASW,OACzBC,EAA2BZ,EAASvB,aAEpCoC,EAAkBH,EAAgBL,EAClCS,EAAuBrB,EAAOiB,EAC9BK,EAAmBhG,MAAM6F,GAA2BF,EAAehK,GACnEsK,EAAsBjG,MAAM+F,GAAuBJ,EAAehK,GAClE8H,EAAYsC,EAAuBF,EACnCK,EAAyBD,EAAsB,EAC/CE,EAAoCF,GAAuBtK,EAC3DyK,EAAWzK,GAAYlC,EACvB4M,EAAajB,IAAatM,EAEhC,IAAIwN,EAAQ,EACRC,EAAuBR,EAGvBS,EAAc,EAGlB,GAAIjB,EAAiB,EAAG,CAEtB,MAAMvC,KAAsBiD,GAAuBX,GAAqBa,EAAoC,EAAIV,KAChHR,EAASO,kBAAoBxF,MAAMgD,EAAkB,EAAGuC,GAEpDY,GAAmClB,EAASO,oBAChDc,EAAQrB,EAASO,kBAAoB,EACrCe,EAAuBN,GAAuBX,EAAoBG,IAAe,CACnF,CAGA,MAAMgB,EAAaf,GAAavC,GAAcmD,GACxCI,EAAiC,EAAWA,MAClD,IAAIC,EAAgBR,EAAoCM,EAAa,EAAI9K,EAAW8K,EAAanB,EAAoBiB,EAAuBA,EACxIG,IAAOC,EAAgBrB,EAAoBoB,EAAMC,EAAgBrB,IAAsB,GAC3F,MAAMsB,GAAsB9E,EAASA,EAAO+E,UAAYd,EAAuBF,IAA6BY,IAAeA,EAqB3H,GAnBAxB,EAASvB,aAAeqC,EACxBd,EAAS6B,eAAiBH,EAC1B1B,EAAS4B,UAAYD,EAEjBV,IAA2BjB,EAAS8B,OACtC9B,EAAS8B,OAAQ,EACZ7B,GAAmBpD,IAAW8E,IAAuB9E,EAAOiF,QAC/D9B,EAAShJ,QAAuC,IAEzC8J,GAAwB,IACjCd,EAAS8B,OAAQ,GAKd7B,GAAkBhB,IAAgBgC,GAA0BjB,EAASO,oBAAsBA,GAC9FP,EAAS7I,OAAsC,GAI/CiK,GACAjB,IAAatM,IACX4L,GAAQiB,GAAiBjB,GAAQoB,GACjCpB,GAAQiB,GAAiBK,EAAmBL,GAC5CjB,GAAQoB,GAAmBE,IAAqBrK,IAElDgL,GAAiBb,GAAmBE,IAAqBrK,GACzDgL,GAAiBhB,GAAiBK,EAAmB,GACrDtB,GAAQsB,GAAoBA,IAAqBrK,GAAY0J,GAC7Dc,IAAsCd,GAAae,EACnD,CASA,GAPIF,IAEFjB,EAASH,iBAAiBkB,GACrBd,GAAeD,EAAS/I,eAA8C,KAIxEgI,EAAc,CAGjB,MAAM8C,EAAeX,IAAeO,GAAkC,EAAbnD,EAAiBA,IAAc9G,EAAQG,cAC1FmK,EAAehC,EAASiC,SAAWpF,EAASA,EAAOoF,QAAU,GAAKvB,EAAgBgB,EAGxF,IACIQ,EACAC,EACAC,EACAC,EAJAC,EAAuD,EAAgB,MAKvEC,EAA4B,EAEhC,KAAOD,GAAO,CAEZ,MAAME,EAAmBF,EAAMG,aACzBC,EAAmBJ,EAAM7D,aACzBkE,EAAsBL,EAAMM,gBAC5BC,EAAkBP,EAAMQ,mBAAqBR,EAAMM,gBACnDG,EAAeT,EAAMU,SACrBC,EAAeX,EAAMY,SACrBC,EAAsBX,IAAqB1O,EAAiBE,KAElE,IAAK+N,IACAW,IAAqBC,GAAuBX,GAAgBa,GAAmBE,EAAeA,EAAapC,OAAS,MAC/F,IAArB+B,GAA0BV,GAAgBM,EAAMQ,wBAC3CK,IACLb,EAAMc,iBACLd,EAAMe,eAAiBrB,GAAgBa,MACvCE,GAAiBA,EAAaK,eAAiBpB,GAAgBe,EAAaD,uBAC5EG,GAAiBA,EAAaG,eAAkBpB,GAAiBiB,EAAaH,mBAAqBG,EAAaL,gBAAmBN,EAAM3B,SAE7I,CAEA,MAAM2C,EAAehB,EAAM7D,aAAe1D,MAAM2G,EAAgBY,EAAM3D,WAAY,EAAGgE,GAC/EY,EAAgBjB,EAAMb,MAAM6B,EAAehB,EAAMkB,iBACjDC,EAAgBnB,EAAMoB,UACtBC,EAAiBrB,EAAMsB,WACvBC,EAAYvB,EAAMwB,WAClBC,EAAgBF,IAAclQ,EAC9BqQ,EAAgBL,IAAmB/P,EAEnCqQ,EAAkBD,GAAiBD,GAAoC,IAAlBR,GAAyC,IAAlBA,GAAuB,EAAI7L,EAAQC,UAIrH,IAAIuM,EAEAC,EAEJ,GAAIH,EACFE,EAAQC,EAA+BV,EAAc3I,MAAMU,YAAY8G,EAAM8B,YAAa9B,EAAM+B,UAAYd,GAAgBU,SACvH,GAAIN,IAAmB/P,EAE5BuQ,EAA+BV,EAAc3I,MAAMU,YAAY8G,EAAM8B,YAAa9B,EAAM+B,UAAYd,GAAgBU,IACpHC,EAAQ,GAAGC,IAAS7B,EAAMgC,aACrB,GAAIX,IAAmB/P,EAAkB,CAC9C,MAAM2Q,EAAKjC,EAAMkC,aACXC,EAAKnC,EAAMoC,WACXC,EAAI7J,MAAMC,MAA4B0I,EAAcjI,YAAY+I,EAAG,GAAIE,EAAG,GAAIlB,IAAkB,EAAG,KAAM,GACzGqB,EAAI9J,MAAMC,MAA4B0I,EAAcjI,YAAY+I,EAAG,GAAIE,EAAG,GAAIlB,IAAkB,EAAG,KAAM,GACzGsB,EAAI/J,MAAMC,MAA4B0I,EAAcjI,YAAY+I,EAAG,GAAIE,EAAG,GAAIlB,IAAkB,EAAG,KAAM,GACzGpO,EAAI4F,MAA4B0I,EAAc3I,MAAMU,YAAY+I,EAAG,GAAIE,EAAG,GAAIlB,GAAgBU,IAAmB,EAAG,GAE1H,GADAC,EAAQ,QAAQS,KAAKC,KAAKC,KAAK1P,KAC3BgO,EAAqB,CACvB,MAAM2B,EAAKxC,EAAMyC,SACjBD,EAAG,GAAKH,EACRG,EAAG,GAAKF,EACRE,EAAG,GAAKD,EACRC,EAAG,GAAK3P,CACV,CACF,MAAO,GAAIwO,IAAmB/P,EAAoB,CAChDsQ,EAAQ5B,EAAM0C,SAAS,GACvB,IAAK,IAAIC,EAAI,EAAGC,EAAI5C,EAAMoC,WAAWxI,OAAQ+I,EAAIC,EAAGD,IAAK,CACvD,MAAME,EAA0B1B,EAAc3I,MAAMU,YAAY8G,EAAMkC,aAAaS,GAAI3C,EAAMoC,WAAWO,GAAI1B,GAAgBU,IACtHmB,EAAI9C,EAAM0C,SAASC,EAAI,GAC7Bf,GAAS,GAAGkB,EAAID,EAAIC,EAAID,IACpBhC,IACFb,EAAMyC,SAASE,GAAKE,EAExB,CACF,CAOA,GAJIhC,IACFb,EAAM+C,QAAUlB,GAGbjE,GAAkBsC,IAAqB1O,EAAiBG,MA8B3DqO,EAAMgD,OAASpB,MA9BmD,CAElE,MAAMqB,EAAgBjD,EAAMkD,SAC5BtD,EAAcI,EAAMmD,OAEhB1B,EACF7B,EAAYqD,GAAiBrB,EACpBL,IAAclQ,EACC,EAAc+R,aAAaH,EAAoC,IAEvFpD,EAAqC,EAAcwD,MAC/C9B,IAAclQ,GACZuO,IAAgBE,IAClBA,EAAwBF,EAExBG,EAAkCH,EAAY5N,IAEhD+N,EAAgCkD,GAAiBrB,EACjD3B,EAA4B,GACnBsB,IAAclQ,EACvBwO,EAAWoD,GAAiBrB,EACnBL,IAAclQ,GACvBwO,EAAWyD,YAAYL,EAAmC,IAI1DtE,IAAwBM,EAAc,EAE5C,CAKF,CAIA,GAAIgB,GAA6BD,EAAMuD,kBAAmB,CACxD,IAAIzN,EAAMzD,EACV,IAAK,IAAImR,KAAOzD,EACdjK,GAAO,GAAGnD,EAA0B6Q,KAAOzD,EAAgCyD,OAE7E3D,EAAW4D,UAAY3N,EACvBmK,EAA4B,CAC9B,CAEAD,EAAQA,EAAM0D,KAChB,EAEK/F,GAAiBsB,GACM,EAAWjK,SAAmC,EAE5E,EAEK2I,GAAiBgB,GACpBjB,EAAS9I,SAAwC,EAGrD,CAoCA,OA/BI2F,GAAUsE,GACPlB,IACFpD,EAAOiF,QAAUH,GAAsBb,GAAwBpK,IAAa0J,GAC5EuB,GAAsBb,GAAwBtM,GAAY4L,KAE3DJ,EAAS3I,WAA0C,GACnD2I,EAASI,WAAauB,GAGfV,GAA0BC,EAC/BZ,IAAmBlE,IAErB4D,EAASrB,YAAcqB,EAAStJ,SACvBsJ,EAASO,mBAAqBD,EAAiB,IAExDN,EAASiG,QAAS,EACb7F,GAAcnB,IAEjBe,EAASI,WAAY,EAChBH,GAAmBpD,IAAW8E,IAAuB9E,EAAOiF,SAC/D9B,EAAS3I,WAA0C,GACnD2I,EAASkG,SAAwC,MAMvDlG,EAASI,WAAY,EAIhBmB,CAAW,EAWd4E,KAAO,CAACnG,EAAUP,EAAMQ,EAAeC,EAAgBC,KAC3D,MAAMI,EAAoBP,EAASO,kBAEnC,GADAR,OAAOC,EAAUP,EAAMQ,EAAeC,EAAgBC,GAClDH,EAASf,aAAc,CACzB,MAAMmH,EAA4B,EAC5BC,EAAuBD,EAAGxE,UAC1B0E,EAAiBpG,EAAiBT,EAAO2G,EAAGvE,eAC5C0E,EAAoB/N,IAE1B,IAAIgO,EAAwB,EACxBC,GAA0B,EAG9B,IAAKvG,GAAkBkG,EAAG7F,oBAAsBA,EAAmB,CACjE,MAAMmG,EAAsBN,EAAG/F,kBAC/BzD,gBAAgBwJ,GAA+B5I,IAC7C,GAAK6I,EAQE,CACL,MAAMM,EAAgBnJ,EAAM9G,SACtBkQ,EAAiBpJ,EAAMyE,QAAUzE,EAAMmD,OAGxCV,KAAiB0G,GAAiBnS,IAAcoS,GAFhCA,EAAiBD,IAEkDD,GACtFlJ,EAAMnG,WAAWmG,EAErB,MAdOA,EAAM4C,YAAc5C,EAAMoE,WAAapE,EAAMiB,aAAejB,EAAM6C,mBACrEN,OAAOvC,EAAOkJ,EAAqBzG,EAAe,EAAGpM,GAGvD2J,EAAMsE,OAAQ,EACdtE,EAAM4C,WAAY,CASpB,IAEGH,GAAemG,EAAGjP,OAAsC,EAC/D,CAEAyF,gBAAgBwJ,GAA+B5I,IAC7C,MAAMqJ,EAAY/L,OAAOwL,EAAiB9I,EAAMyE,SAAWzE,EAAMwB,OAAQ,IACnE8H,EAAgBtJ,EAAMuB,KAAOqH,EAAGrH,KAAOvB,EAAMgC,YAAY+G,GAAqBpG,EACpFqG,GAAyBzG,OAAOvC,EAAOqJ,EAAW5G,EAAeC,EAAgB4G,IAC5EtJ,EAAM4C,WAAaqG,IAAyBA,GAA0B,EAAK,GAC/EJ,IAGEpG,GAAiBuG,GAAuBJ,EAAG9O,SAAwC,GAGpFmP,GAA2BL,EAAG3H,cAAgB2H,EAAG1P,WAEnD0P,EAAGH,QAAS,EACPG,EAAGhG,YACNgG,EAAGhG,WAAY,EACVH,IACHmG,EAAG/O,WAA0C,GAC7C+O,EAAGF,SAAwC,KAInD,GAMIa,GAAW,CACfC,UAAW,KACXC,OAAQ5R,MA0DJ6R,GAAiC,KAAO5T,EAAY6T,sBAAwBC,aAA3C,GACjCC,GAAmC,KAAO/T,EAAYgU,qBAAuBC,eAA1C,GAEzC,MAAMC,eAAenJ,MAGnB,WAAAvF,CAAYwF,GACVmJ,MAAMnJ,GACNC,KAAKmJ,oBAAqB,EAC1BnJ,KAAKoJ,uBAAwB,EAE7BpJ,KAAKvI,SAAWA,EAChBuI,KAAK0H,UAAS3S,IAAaG,EAAImU,QAE/BrJ,KAAKsJ,MAAQ,IACf,CAEA,MAAAZ,GACE,MAAMxH,EAAOlB,KAAKE,aAAejG,IACjC,GAAI+F,KAAKiB,YAAYC,GAAO,CAC1BlB,KAAKsB,iBAAiBJ,GACtB,MAAMqI,EAAcvJ,KAAKS,OACnB+I,EAAYxJ,KAAKQ,KACvB,IAAIiJ,EAAyCzJ,KAAU,MACvD,KAAOyJ,GAAgB,CACrB,MAAMC,EAAeD,EAAehC,MAC/BgC,EAAe/B,QASlB1I,YAAYgB,KAAMyJ,GAClBzJ,KAAKU,eAAiBV,KAAKlB,MAC3B2K,EAAeE,UAAW,EACtBF,EAAe5H,YAAc4H,EAAeG,YAC9CH,EAAeI,UAZjBjC,KACE6B,GACCvI,EAAOuI,EAAerJ,YAAcqJ,EAAehJ,OAAS8I,EAC7D,EACA,EACAE,EAAejJ,KAAOgJ,EAAYC,EAAexI,YAAYC,GAAQ5L,GAUzEmU,EAAiBC,CACnB,CACAlB,GAASE,QACX,CACF,CAEA,IAAAoB,GAIE,OAHI9J,KAAKmJ,oBAAuBnJ,KAAKsJ,OAAUtJ,KAAK0H,SAClD1H,KAAKsJ,MAAQX,GAAiBoB,aAEzB/J,IACT,CAEA,KAAAgK,GAEE,OADAhK,KAAK0H,QAAS,EACPuC,YACT,CAEA,MAAAC,GACE,GAAKlK,KAAK0H,OAGV,OAFA1H,KAAK0H,QAAS,EACdrJ,gBAAgB2B,MAA8Bf,GAAUA,EAAMkL,cACvDnK,KAAK8J,MACd,CAGA,SAAI/I,GACF,OAAOf,KAAKS,QAAgC,IAAtBtH,EAAQE,UAAkB,EAAIlD,EACtD,CAEA,SAAI4K,CAAMlJ,GACRmI,KAAKS,OAAS5I,EAAesB,EAAQE,UACrCgF,gBAAgB2B,MAA8Bf,GAAUA,EAAM8B,MAAQ9B,EAAMwB,QAC9E,CAGA,YAAI2J,GACF,OAA6B,IAAtBjR,EAAQE,UAAkB,KAAO,GAC1C,CAEA,YAAI+Q,CAASC,GACX,MACMC,EAAoB,MAATD,EACXE,EAAWD,EAFI,KAEsB,EAC3C,GAAInR,EAAQE,YAAckR,EAAU,CAClCpR,EAAQE,UAAYkR,EACpBpR,EAAQG,cAAgB,IAAMiR,EAC9B,MAAMC,EAAcF,EAND,KAM2BnU,EAE7C6J,KAAKvI,SAAiB,UAAK+S,EAC5BxK,KAAKS,QAAU+J,CACjB,CACF,CAGA,aAAIpR,GACF,OAAOD,EAAQC,SACjB,CAEA,aAAIA,CAAUA,GACZD,EAAQC,UAAYA,CACtB,EAGF,MAAMK,GAAsB,MAC1B,MAAMA,EAAS,IAAIwP,OAAOhP,KAQ1B,OAPIlF,IACFwE,EAAeE,OAASA,EACxBvE,EAAIuV,iBAAiB,oBAAoB,KAClChR,EAAO2P,wBACZlU,EAAImU,OAAS5P,EAAOuQ,QAAUvQ,EAAOyQ,SAAQ,KAG1CzQ,CACR,EAV2B,GAatBsQ,WAAa,KACbtQ,GAAOmF,OACTnF,GAAO6P,MAAQX,GAAiBoB,YAChCtQ,GAAOiP,UAEPjP,GAAO6P,MAAQ,CACjB,EAGIW,WAAa,KACjBnB,GAA4DrP,GAAY,OACxEA,GAAO6P,MAAQ,EACR7P,IA2CT,SAASiR,YAAY7T,GACnB,MAAM+P,EAAIjM,MAAM9D,GAAKmC,EAAME,KAAKyR,iBAAiB9T,GAAKA,EACtD,GAAI+P,aAAagE,UAAYhE,aAAaiE,eAAgB,OAAOjE,CACnE,CAiBA,SAASkE,aAAaC,GACpB,GAAIjQ,MAAMiQ,GAAU,MAAkC,GACtD,GAAI5Q,EAAM4Q,GAAU,CAClB,MAAMC,EAAYD,EAAQE,KAAKpN,KAEzBqN,EAAS,GACf,IAAK,IAAIxN,EAAI,EAAGiJ,EAAIqE,EAAUrN,OAAQD,EAAIiJ,EAAGjJ,IAAK,CAChD,MAAMyN,EAAOH,EAAUtN,GACvB,IAAK5C,MAAMqQ,GAAO,CAChB,MAAMC,EAAWV,YAAYS,GAC7B,GAAIC,EACF,IAAK,IAAI1E,EAAI,EAAG2E,EAAKD,EAASzN,OAAQ+I,EAAI2E,EAAI3E,IAAK,CACjD,MAAM4E,EAAUF,EAAS1E,GACzB,IAAK5L,MAAMwQ,GAAU,CACnB,IAAIC,GAAc,EAClB,IAAK,IAAIC,EAAI,EAAGC,EAAKP,EAAOvN,OAAQ6N,EAAIC,EAAID,IAC1C,GAAIN,EAAOM,KAAOF,EAAS,CACzBC,GAAc,EACd,KACF,CAEGA,GACHL,EAAOvR,KAAK2R,EAEhB,CACF,KACK,CACL,IAAIC,GAAc,EAClB,IAAK,IAAI7E,EAAI,EAAG2E,EAAKH,EAAOvN,OAAQ+I,EAAI2E,EAAI3E,IAC1C,GAAIwE,EAAOxE,KAAOyE,EAAM,CACtBI,GAAc,EACd,KACF,CAEGA,GACHL,EAAOvR,KAAKwR,EAEhB,CACF,CACF,CACA,OAAOD,CACT,CACA,IAAKnW,EAAW,MAAoC,CAAEgW,GACtD,MAAMK,EAAWV,YAAYK,GAC7B,OAAIK,EAAgDhR,MAAMsR,KAAKN,GAC7B,CAAEL,EACtC,CAiBA,SAASY,gBAAgBZ,GACvB,MAAMa,EAAqBd,aAAaC,GAClCc,EAAsBD,EAAmBjO,OAC/C,GAAIkO,EACF,IAAK,IAAInO,EAAI,EAAGA,EAAImO,EAAqBnO,IAAK,CAC5C,MAAMwJ,EAAS0E,EAAmBlO,GAClC,IAAKwJ,EAAOvR,GAA2B,CACrCuR,EAAOvR,IAA4B,EACnC,MAAMmW,EAAY/Q,MAAMmM,IACc,EAAS6E,UAAYD,KAEzD5E,EAAOrR,IAAe,EACtBqR,EAAOpR,GAAegW,EACtB5E,EAAOnR,GAAoB,CAAC,EAEhC,CACF,CAEF,OAAO6V,CACT,CASA,MAwMMI,GAAwB,CAAC,UAAW,SAAU,WAAY,SAmE1DC,QAAU,CAACrP,EAAGsP,EAAGzO,KACjBA,EAAI,IAAGA,GAAK,GACZA,EAAI,IAAGA,GAAK,GACTA,EAAI,EAAI,EAAIb,EAAc,GAATsP,EAAItP,GAASa,EAC9BA,EAAI,GAAQyO,EACZzO,EAAI,EAAI,EAAIb,GAAKsP,EAAItP,IAAM,EAAI,EAAIa,GAAK,EACxCb,GAgCHuP,oCAAsCC,GACnCjR,MAAMiR,GAxEGC,KAChB,MAAMC,EAAOtV,EAAWuV,KAAKF,IAAapV,EAAYsV,KAAKF,GACrDzV,EAAKiE,MAAMyR,EAAK,IAAiB,GAAVA,EAAK,GAClC,MAAO,EACJA,EAAK,IACLA,EAAK,IACLA,EAAK,GACN1V,EACF,EAgE4B4V,CAAUJ,GAC/BnR,MAAMmR,GAzDGK,KAChB,MAAMC,EAAYD,EAAS9O,OACrBgP,EAAwB,IAAdD,GAAiC,IAAdA,EACnC,MAAO,GACH,KAAOD,EAAS,GAAKA,EAASE,EAAU,EAAI,MAC5C,KAAOF,EAASE,EAAU,EAAI,GAAKF,EAASE,EAAU,EAAI,MAC1D,KAAOF,EAASE,EAAU,EAAI,GAAKF,EAASE,EAAU,EAAI,IAC5C,IAAdD,GAAiC,IAAdA,MAAuB,KAAOD,EAASE,EAAU,EAAI,GAAKF,EAASE,EAAU,EAAI,IAAM,KAAKC,QAAQ,GAAK,EAChI,EAiD4BC,CAAUT,GAC/BhR,MAAMgR,GA3BGU,KAChB,MAAMC,EAAO7V,EAAWqV,KAAKO,IAAa3V,EAAYoV,KAAKO,GACrDE,GAAKD,EAAK,GAAK,IACflG,GAAKkG,EAAK,GAAK,IACfpG,GAAKoG,EAAK,GAAK,IACfnW,EAAKiE,MAAMkS,EAAK,IAAiB,GAAVA,EAAK,GAClC,IAAI3G,EAAGC,EAAGC,EACV,GAAU,IAANO,EACFT,EAAIC,EAAIC,EAAIK,MACP,CACL,MAAMuF,EAAIvF,EAAI,GAAKA,GAAK,EAAIE,GAAKF,EAAIE,EAAIF,EAAIE,EACvCjK,EAAI,EAAI+J,EAAIuF,EAClB9F,EAAI7J,MAAiC,IAA3B0P,QAAQrP,EAAGsP,EAAGc,EAAI,EAAI,GAAU,GAC1C3G,EAAI9J,MAAyB,IAAnB0P,QAAQrP,EAAGsP,EAAGc,GAAU,GAClC1G,EAAI/J,MAAiC,IAA3B0P,QAAQrP,EAAGsP,EAAGc,EAAI,EAAI,GAAU,EAC5C,CACA,MAAO,CAAC5G,EAAGC,EAAGC,EAAG1P,EAAE,EAWSqW,CAAUb,GAC/B,CAAC,EAAG,EAAG,EAAG,GAYbc,SAAW,CAACC,EAAaC,IACtBvS,MAAMsS,GAAeC,EAAeD,EAWvCE,iBAAmB,CAAC1H,EAAOuB,EAAQoG,EAAOC,EAAOC,KACrD,GAAI5S,MAAM+K,GAAQ,CAChB,MAAM8H,KAAO,KACX,MAAMC,EAAkC,EAAQxG,EAAQoG,EAAOC,GAE/D,OAAQ7S,OAAOgT,GAAwBA,GAAY,GAAvBA,CAAwB,EAKtD,OAHIF,IACFA,EAAMC,KAAOA,MAERA,MACT,CACE,OAAO9H,CACT,EAQIgI,aAAe,CAACzG,EAAQ0G,IACpB1G,EAAOrR,GAEbqR,EAAOpR,IAtJiB,EAAC+X,EAAIC,KAE/B,GAAI9B,GAAsB+B,SAASD,GAAe,OAAO,EACzD,GAAID,EAAGG,aAAaF,IAAiBA,KAAgBD,EAAI,CACvD,GAAqB,UAAjBC,EAA0B,CAC5B,MAAMG,EAAyE,EAAe,WAE9F,OAAOA,GAAyC,WAAzBA,EAAaC,OACtC,CACA,OAAO,CACT,GA4IyBC,CAAoBjH,EAAQ0G,GAAQxY,EAE3DqB,EAAgBsX,SAASH,IAASvX,EAAgB+X,IAAIR,GAAQxY,EAE9D0E,iBAAiB8T,EAAM,MAAQxY,EAE/BwY,KAAgC,EAASxG,MAAQhS,EAEjDwY,KAAQ1G,EAAS9R,EACjBA,EAX4BA,EAoB1BiZ,YAAc,CAACnH,EAAQoH,EAAUC,KACrC,MAAMC,EAAetH,EAAOE,MAAMkH,GAC9BE,GAAgBD,IAClBA,EAAsBD,GAAYE,GAEpC,MAAM7I,EAAQ6I,GAAgBC,iBAAiBvH,EAAOlR,IAAsBkR,GAAQwH,iBAAiBJ,GACrG,MAAiB,SAAV3I,EAAmB,IAAMA,CAAK,EAUjCgJ,2BAA6B,CAACzH,EAAQoH,EAAUhJ,EAAWiJ,KAC/D,MAAMK,EAAQ/T,MAAMyK,GAAyBqI,aAAazG,EAAQoH,GAAjChJ,EACjC,OAAOsJ,IAASxZ,EAAoB8R,EAAOoH,IAAa,EACjDM,IAASxZ,EAA+C,EAAS4Y,aAAaM,GAC9EM,IAASxZ,EAzhBY,EAAC8R,EAAQoH,EAAUC,KAC/C,MAAMM,EAAmB3H,EAAOE,MAAMI,UACtC,IAAIsH,EACJ,GAAID,EAAkB,CACpB,MAAME,EAAmB7H,EAAOnR,GAChC,IAAI0H,EAAG,KAAOA,EAAIlG,EAAkBgV,KAAKsC,IAAmB,CAC1D,MAAMG,EAAqBvR,EAAE,GAEvBwR,EAAsBxR,EAAE,GAAGyR,MAAM,GAAI,GAC3CH,EAAiBC,GAAsBC,EACnCD,IAAuBV,IACzBQ,EAA6BG,EAEzBV,IACFA,EAAsBD,GAAYW,GAGxC,CACF,CACA,OAAOJ,IAAqBhU,MAAMiU,GAA8BA,EAC9DhV,iBAAiBwU,EAAU,SAAW,IACtCxU,iBAAiBwU,EAAU,WAAaxU,iBAAiBwU,EAAU,QAAU,OAAS,KAAK,EAogBtDa,CAA8C,EAAUb,EAAUC,GAClGK,IAASxZ,EAAqBiZ,YAAoC,EAAUC,EAAUC,GAAuBa,YAC7Gf,YAAoC,EAAUC,EAAUC,EAAsB,EASjFc,iBAAmB,CAACC,EAAGC,EAAGC,IACV,MAAbA,EAAmBF,EAAIC,EACV,MAAbC,EAAmBF,EAAIC,EACvBD,EAAIC,EAIPE,kCAAoC,KACjC,CAELhS,EAAGpI,EACHuR,EAAG,EACH8I,EAAG,KACHC,EAAG,KACHC,EAAG,KACH/I,EAAG,OASDgJ,kBAAoB,CAACC,EAAUC,KAQnC,GANAA,EAAatS,EAAIpI,EACjB0a,EAAanJ,EAAI,EACjBmJ,EAAaL,EAAI,KACjBK,EAAaJ,EAAI,KACjBI,EAAaH,EAAI,KACjBG,EAAalJ,EAAI,MACZiJ,EAAU,OAAOC,EACtB,MAAMC,GAAOF,EACb,GAAKpV,MAAMsV,GAIJ,CAEL,IAAInW,EAA2B,EAEhB,MAAXA,EAAI,KACNkW,EAAaJ,EAAI9V,EAAI,GACrBA,EAAMA,EAAIqV,MAAM,IAGlB,MAAMe,GAAYpW,EAAIkU,SAAS,MAAe1W,EAAakV,KAAK1S,GAChE,GAAIoW,EAKF,OAHAF,EAAatS,EAAIpI,EACjB0a,EAAanJ,GAAKqJ,EAAU,GAC5BF,EAAaL,EAAIO,EAAU,GACpBF,EACF,GAAIA,EAAaJ,EAGtB,OADAI,EAAanJ,GAAK/M,EACXkW,EACF,GA17CQ9U,MAALrE,EA07COiD,IA17CUsB,MAAMvE,IAAMwE,MAAMxE,GA87C3C,OAFAmZ,EAAatS,EAAIpI,EACjB0a,EAAaH,EAAIzD,oCAAoCtS,GAC9CkW,EACF,CAEL,MAAMG,EAAiBrW,EAAIsW,MAAM/Y,GAIjC,OAHA2Y,EAAatS,EAAIpI,EACjB0a,EAAaH,EAAIM,EAAiBA,EAAe5Z,IAAI8Z,QAAU,GAC/DL,EAAalJ,EAAIhN,EAAIwW,MAAMjZ,IAAyB,GAC7C2Y,CACT,CACF,CAlCE,OADAA,EAAanJ,EAAIoJ,EACVD,EAr6CGnZ,KAu8CZ,EAQI0Z,oBAAsB,CAACvM,EAAOgM,KAClCA,EAAatS,EAAIsG,EAAMsB,WACvB0K,EAAanJ,EAAI7C,EAAM+B,UACvBiK,EAAaL,EAAI3L,EAAMgC,MACvBgK,EAAaJ,EAAI,KACjBI,EAAaH,EAAI7R,WAAWgG,EAAMoC,YAClC4J,EAAalJ,EAAI9I,WAAWgG,EAAM0C,UAC3BsJ,GAGHQ,GAA0Bd,oCAK1Be,GAAU,CAEdC,KAAM,IAAIC,QAEVC,KAAM,IAAIpa,KASNqa,iBAAmB,CAAC1J,EAAQD,EAAU4J,EAAS,UACnD,MAAMC,EAAYN,GAAQK,GAC1B,IAAIE,EAAeD,EAAU1C,IAAIlH,GAKjC,OAJK6J,IACHA,EAAe,CAAC,EAChBD,EAAUta,IAAI0Q,EAAQ6J,IAEjBA,EAAa9J,GAAY8J,EAAa9J,GAAY8J,EAAa9J,GAAY,CAChFrI,MAAO,KACPE,MAAO,KACT,EAQIkS,mBAAqB,CAACpU,EAAGqU,IACtBrU,EAAEiI,eAAiBjI,EAAE2H,mBAAqB0M,EAAE1M,mBAM/C2M,cAAgBnN,IACpBA,EAAMe,cAAgB,EACtBf,EAAMc,cAAgB,EACtBd,EAAMM,gBAAkBpO,EACxB8N,EAAM7D,aAAejK,CAAQ,EAQzBkb,aAAe,CAACpN,EAAOqN,KAE3B,MAAMC,EAAuBtN,EAAMG,aAInC,GAAImN,IAAyB9b,EAAiBC,QAAS,CAErD,MAAM8b,EAAoBvN,EAAMQ,mBAEhCpF,SAASiS,EAAUrN,EAAOiN,mBAAoB,WAAY,YAE1D,MAAMO,EAAcxN,EAAMY,SAI1B,GAAI4M,EAAa,CAEf,MAAMC,EAAaD,EAAYjT,OACzBmT,EAAiBF,EAAYhN,mBAAqBgN,EAAYlN,gBAIpE,GAEEN,EAAMzF,OAAO5G,KAAO8Z,EAAW9Z,IAE/B8Z,EAAWzP,eAAgB,GAE3B0P,GAAkBD,EAAWrZ,SAAWqZ,EAAW1P,mBAAqBwP,EACxE,CAGAJ,cAAcK,GAEd,IAAIG,EAAkBH,EAAY5M,SAGlC,KAAO+M,GAAmBA,EAAgBpT,OAAO5G,KAAO8Z,EAAW9Z,IACjEwZ,cAAcQ,GACdA,EAAkBA,EAAgB/M,QAGtC,CAEA,MAAMgN,EAA0BL,EAAoBvN,EAAM3B,OAE1D,GAAIqP,EAAiBE,EAAyB,CAE5C,MAAMC,EAAsBL,EAAYnR,WAClCyR,EAAeJ,GAAkBG,EAAsBL,EAAYtM,iBAEzEsM,EAAYlN,gBAAkBsN,EAA0BE,EAAeD,EACvEL,EAAYrR,aAAeqR,EAAYlN,gBACvCkN,EAAYzM,cAAgB,EAExByM,EAAYlN,gBAAkBpO,GAChCib,cAAcK,EAElB,CAIA,IAAIO,GAA2B,EAM/B,GAJAzT,gBAAgBmT,GAA+B/T,IACxCA,EAAEqH,gBAAegN,GAA2B,EAAK,IAGpDA,EAA0B,CAC5B,MAAMC,EAAeP,EAAWlT,OAChC,GAAIyT,EAAc,CAChB,IAAIC,GAAoB,EACxB3T,gBAAgB0T,GAAuCnb,IACjDA,IAAM4a,GACRnT,gBAAgBzH,GAAsB6G,IAC/BA,EAAEqH,gBAAekN,GAAoB,EAAK,GAEnD,IAEEA,GACFD,EAAalI,QAEjB,MACE2H,EAAW3H,QAQf,CAEF,CAuBF,MAAO,GAAIwH,IAAyB9b,EAAiBG,MAAO,CAE1D,MAAMuc,EAAwBrB,iBAAiB7M,EAAMmD,OAAQnD,EAAMkD,SAAU,QACvEiL,EAr+BmB1B,KAC3B,IAAI/H,EAAYD,GAASC,UAsCzB,OArCKA,IACHA,EAAY,CACVtQ,SAAUlC,EACVqL,iBAAkBxK,KAClB4M,QAAS,EACTtB,OAAQ,EACRxD,MAAO,KACPE,MAAO,MAET0J,GAASC,UAAYA,EACrBD,GAASE,OAAS,KAChB8H,EAAQ2B,SAAQC,IACd,IAAK,IAAItE,KAAgBsE,EAAmB,CAC1C,MAAMC,EAASD,EAAkBtE,GAC3BwE,EAAcD,EAAOzT,MAC3B,GAAI0T,EAAa,CACf,MAAMC,EAAYD,EAAYjN,WACxBmN,EAAiBD,IAAcld,GAAsBkd,IAAcld,EAAmB0I,WAAWuU,EAAYrM,cAAgB,KACnI,IAAIwM,EAAgBH,EAAYzM,YAC5B9B,EAAQsO,EAAOvT,MACnB,KAAOiF,GAASA,IAAUuO,GAAa,CACrC,GAAIE,EACF,IAAK,IAAI9U,EAAI,EAAGiJ,EAAI5C,EAAMyC,SAAS7I,OAAQD,EAAIiJ,EAAGjJ,IAAK8U,EAAe9U,IAAMqG,EAAMyC,SAAS9I,QAE3F+U,GAAiB1O,EAAM+C,QAEzB/C,EAAQA,EAAM2O,QAChB,CACAJ,EAAYxM,UAAY2M,EACxBH,EAAYnM,WAAaqM,CAC3B,CACF,KAGFhR,OAAOiH,EAAW,EAAG,EAAG,EAAGnT,EAAgB,GAGxCmT,CAAS,EA87BYkK,CAAqBnC,GAAQG,MAEvD,IAAI2B,EAAcL,EAAsBrT,MAEnC0T,IACHA,EAAc,IAAKvO,GACnBuO,EAAYpO,aAAe3O,EAAiBC,QAC5C8c,EAAYrN,gBAAkBhP,EAC9Bqc,EAAYlS,WAAa,EACzBkS,EAAY9L,SAAWzI,WAAWgG,EAAMkC,cACxCqM,EAAYxL,QAAU,EACtBwL,EAAY7K,MAAQ,KACpB6K,EAAYM,MAAQ,KACpBzT,SAAS8S,EAAuBK,GAChCnT,SAAS+S,EAAmBI,IAK9B,MAAMO,EAAW9O,EAAM+B,UAOvB,GANA/B,EAAM8B,YAAcyM,EAAYzM,YAAcgN,EAC9C9O,EAAM+B,UAAY,EAClB/B,EAAMyC,SAAWzI,WAAWgG,EAAMkC,cAClClC,EAAM+C,QAAU,EAChBwL,EAAYzM,YAAcgN,EAEtB9O,EAAMoC,WAAY,CACpB,MAAM2M,EAAY/U,WAAWgG,EAAMoC,YAC/B2M,GACFA,EAAUX,SAAQ,CAACxM,EAAOjI,KACxBqG,EAAMkC,aAAavI,GAAK4U,EAAYrM,aAAavI,GAAKiI,EACtD5B,EAAMoC,WAAWzI,GAAK,CAAC,IAG3B4U,EAAYrM,aAAe6M,CAC7B,CAEA3T,SAAS8S,EAAuBlO,EAAO,KAAM,WAAY,WAE3D,CAEA,OAAOA,CAAK,EAQRgP,qBAAuBhP,IAC3B,MAAME,EAAmBF,EAAMG,aAC/B,GAAID,IAAqB1O,EAAiBE,KAAM,CAC9C,MAAMkO,EAAcI,EAAMmD,OACpBF,EAAgBjD,EAAMkD,SAGtB+L,EAFsBxC,GAAQC,KACWrC,IAAIzK,GACHqD,GAEhD,GADAhI,YAAYgU,EAAsBjP,EAAO,WAAY,YACjDE,IAAqB1O,EAAiBG,MAAO,CAC/C,MAAMud,EAAkBzC,GAAQG,KAC1BuC,EAAiBD,EAAgB7E,IAAIzK,GAC3C,IAAKuP,EAAgB,OACrB,MAAMjB,EAAwBiB,EAAelM,GACvCkL,EAAoB1J,GAASC,UACnCzJ,YAAYiT,EAAuBlO,EAAO,WAAY,YAEtD,MAAMuO,EAAcL,EAAsBrT,MAC1C,GAAI0T,GAAeA,IAAgBL,EAAsBnT,MAAO,CAC9DE,YAAYiT,EAAuBK,EAAa,WAAY,YAC5DtT,YAAYkT,EAAmBI,GAC/B,IAAIa,GAAc,EAClB,IAAK,IAAIvF,KAAQsF,EACf,GAAIA,EAAetF,GAAMhP,MAAO,CAC9BuU,GAAc,EACd,KACF,CAEEA,GACFF,EAAgBG,OAAOzP,EAE3B,CACF,CACF,CACA,OAAOI,CAAK,EAURsP,qBAAuBC,IAC3BA,EAAM5L,QAAS,EACf4L,EAAM/P,OAAQ,EACd+P,EAAMzR,WAAY,EACXyR,GAOHC,YAAcD,GACbA,EAAM1J,YACP0J,EAAM5S,aACRrC,gBAAgBiV,EAAOC,aAEvBlV,gBAAgBiV,GAAiCvP,IAC3CA,EAAMG,eAAiB3O,EAAiBE,MAC1C0b,aAAapN,EAAO6M,iBAAiB7M,EAAMmD,OAAQnD,EAAMkD,UAC3D,IAGJqM,EAAM1J,WAAa,EACZ0J,GAXuBA,EAchC,IAAIE,GAAU,EAKd,MAAMC,cAAc3T,MAMlB,WAAAvF,CAAYmZ,EAAa,CAAC,EAAGpV,EAAS,KAAMqV,EAAiB,GAE3DzK,MAAM,GAEN,MAAM,GACJxR,EAAE,MACFU,EAAK,SACLD,EAAQ,SACRH,EAAQ,UACRC,EAAS,KACTF,EAAI,UACJM,EAAS,SACTH,EAAQ,UACRJ,EAAS,aACTD,EAAY,WACZiB,EAAU,OACVF,EAAM,QACNC,EAAO,QACPJ,EAAO,eACPC,EAAc,SACdC,GACE+a,EAEA1a,EAAMC,SAASD,EAAMC,QAAQ2a,SAAS5T,MAE1C,MAAM6T,EAAgBvV,EAAS,EAAI7E,GAAO0G,aACpC2T,EAAgBxV,EAASA,EAAO7G,SAAW0B,EAAQ1B,SACnDsc,EAAmCnZ,MAAMxC,IAAUyC,MAAMzC,GAAS0b,EAAc1b,OAASA,EACzF4b,EAAgBpZ,MAAMzC,IAAa0C,MAAM1C,GAAY0F,KAAY1F,EACjE8b,EAAY/G,SAASnV,EAAM+b,EAAc/b,MACzCmc,EAAiBhH,SAAS7U,EAAWyb,EAAczb,WACnD8b,GAAoC,IAAdF,GACAA,IAAcpW,KACO,EAAc,EAAIA,IAClB,EAAc,EAE/D,IAAIuW,EAAiB,EAErB,GAAI9V,EACF8V,EAAiBT,MACZ,CACL,IAAIU,EAAYpa,IAEZR,GAAOiO,SACTjO,GAAOwH,YAAYoT,GACnBA,EAAY5a,GAAO0G,cAErBiU,EAAiBC,EAAY5a,GAAO2G,UACtC,CAGAJ,KAAKtI,GAAMmD,MAAMnD,KAAa8b,GAAP9b,EAEvBsI,KAAK1B,OAASA,EAEd0B,KAAK7H,SAAWyF,eAAgBoW,EAAgBE,GAAkBC,EAAuBD,IAAmBje,EAE5G+J,KAAKqD,WAAY,EAEjBrD,KAAK0H,QAAS,EAEd1H,KAAKuD,OAAQ,EAEbvD,KAAK6B,WAAY,EAEjB7B,KAAKvH,QAAUA,GAAWqb,EAAcrb,QAExCuH,KAAKtH,eAAiBA,GAAkBob,EAAcpb,eAEtDsH,KAAKrH,SAAWA,GAAYmb,EAAcnb,SAE1CqH,KAAKpH,OAASA,GAAUkb,EAAclb,OAEtCoH,KAAKnH,QAAUA,GAAWib,EAAcjb,QAExCmH,KAAKlH,WAAaA,GAAcgb,EAAchb,WAE9CkH,KAAK8B,kBAAoBkS,EAEzBhU,KAAK+B,eAAiBoS,EAEtBnU,KAAKsU,WAAYhW,GAAiB4O,SAAShV,EAAU4b,EAAc5b,UAEnE8H,KAAK0D,QAAU0Q,EAEfpU,KAAKoC,OAAS2R,EAEd/T,KAAKiC,WAAaiS,EAElBlU,KAAKsD,eAAiB,EAEtBtD,KAAKgC,kBAAoB,EAEzBhC,KAAK2H,SAAW7Q,KAEhBkJ,KAAK2J,UAAW,EAEhB3J,KAAKkC,WAAagL,SAASlV,EAAU8b,EAAc9b,UAEnDgI,KAAKuU,SAAWvU,KAAKkC,UAErBlC,KAAK4J,WAAa,EAElB5J,KAAKL,WAAauN,SAASjV,EAAW6b,EAAc7b,WAEpD+H,KAAK4S,MAAQ,KAEb5S,KAAKyH,MAAQ,KAIbzH,KAAKG,aAAe0T,EAEpB7T,KAAKI,WAAayT,EAElB7T,KAAKK,UAAYwT,EAEjB7T,KAAKQ,KAAO0M,SAASpV,EAAWgc,EAAchc,WAE9CkI,KAAKS,OAASyM,SAASrV,EAAcic,EAAcjc,aACrD,CAEA,aAAI2c,GACF,QAASxU,KAAK4J,UAChB,CAGA,aAAI4K,CAAUA,GACZA,EAAYxU,KAAK6J,SAAW7J,KAAKyU,MAAM,GAAGC,MAC5C,CAEA,eAAIC,GACF,OAAOnY,MAAMD,MAAMyD,KAAKE,aAAc/G,EAAQC,YAAa4G,KAAKoC,OAAQpC,KAAK7H,SAC/E,CAGA,eAAIwc,CAAYzT,GACd,MAAMwG,EAAS1H,KAAK0H,OAEpB1H,KAAKgK,QAAQ4K,MAAM1T,GACdwG,GAAQ1H,KAAKkK,QACpB,CAEA,wBAAI2K,GACF,OAAOtY,MAAMyD,KAAKsD,eAAgBnK,EAAQC,UAC5C,CAGA,wBAAIyb,CAAqB3T,GACvBlB,KAAK2U,YAAe3U,KAAK8B,kBAAoB9B,KAAKgC,kBAAqBd,CACzE,CAEA,YAAI9D,GACF,OAAOZ,MAAMD,MAAMyD,KAAKE,aAAeF,KAAK7H,SAAU,IAAK,EAAG,EAChE,CAGA,YAAIiF,CAASA,GACX4C,KAAK2U,YAAc3U,KAAK7H,SAAWiF,CACrC,CAEA,qBAAIsC,GACF,OAAOlD,MAAMD,MAAMyD,KAAKsD,eAAiBtD,KAAK8B,kBAAmB,IAAK,EAAG,EAC3E,CAGA,qBAAIpC,CAAkBtC,GACpB,MAAM0E,EAAoB9B,KAAK8B,kBAC/B9B,KAAK2U,YAAe7S,EAAoB9B,KAAKgC,kBAAsBF,EAAoB1E,CACzF,CAEA,oBAAIoC,GACF,OAAOQ,KAAKgC,iBACd,CAGA,oBAAIxC,CAAiBuC,GACnB/B,KAAK2U,YAAe3U,KAAK8B,kBAAoBtF,OAAOuF,EAAgB,EAAG/B,KAAK+B,eAAiB,EAC/F,CAEA,YAAI/J,GACF,QAASgI,KAAKkC,SAChB,CAGA,YAAIlK,CAASwG,GACXA,EAAUwB,KAAKxB,UAAYwB,KAAK0U,MAClC,CAEA,SAAI3T,GACF,OAAOmI,MAAMnI,KACf,CAGA,SAAIA,CAAMlJ,GACRqR,MAAMnI,MAAQlJ,EACdmI,KAAKmK,WACP,CAMA,KAAAsK,CAAM9S,EAAiB,GAgBrB,OAdA4R,YAAYvT,MACRA,KAAKkC,YAAclC,KAAKuU,WAAUvU,KAAKhI,UAAW,GAItDgI,KAAKsD,eAAiBtD,KAAK8B,kBAE3B8F,KAAK5H,KAAM,EAAG,EAAG2B,EAAgBrM,GAEjC+d,qBAAqBrT,MAEjBA,KAAKU,cACPrC,gBAAgB2B,KAAMqT,sBAEjBrT,IACT,CAMA,IAAA8U,CAAKnT,EAAiB,GACpB3B,KAAKW,IAAMX,KAAKQ,KAChBR,KAAKe,MAAQf,KAAKS,QAGbkB,GAAkB3B,KAAKU,cAC1BkH,KAAK5H,KAAMA,KAAK7H,SAAU,EAAGwJ,EAAgBrM,GAE/C0K,KAAKyU,MAAM9S,GAEX,MAAMzJ,EAAW8H,KAAKsU,UAMtB,OALiB,IAAbpc,EACF8H,KAAKkK,SACIhS,IAAa2C,MAAmC,EAAWka,SACvC,EAAWC,KAAKhV,MAExCA,IACT,CAGA,SAAAmK,GACE,MAAM9Q,EAAY,GAAK2G,KAAKS,OAAShH,GAAOgH,QAE5C,OADAT,KAAKI,WAAanG,KAAS+F,KAAKE,aAAeF,KAAKoC,QAAU/I,EACvD2G,IACT,CAGA,KAAAgK,GACE,OAAIhK,KAAK0H,SACT1H,KAAK0H,QAAS,EACd1H,KAAKnH,QAAQmH,OAFWA,IAI1B,CAGA,MAAAkK,GACE,OAAKlK,KAAK0H,QACV1H,KAAK0H,QAAS,EAEV1H,KAAK7H,UAAYlC,IAAa+J,KAAKU,aACrCkH,KAAK5H,KAAM/J,EAAU,EAAG,EAAGX,IAEtB0K,KAAK2J,WACRxK,SAAS1F,GAAQuG,MACjBvG,GAAOiH,cAAe,EACtBV,KAAK2J,UAAW,GAElB3J,KAAKmK,YAELnK,KAAKI,YAAc,GACnB3G,GAAOqQ,QAEF9J,MAhBkBA,IAiB3B,CAGA,OAAAiV,GACE,OAAOjV,KAAKyU,MAAM,GAAGvK,QACvB,CAQA,IAAA0K,CAAK1T,EAAMQ,EAAgB,EAAGC,EAAiB,GAE7C4R,YAAYvT,MAEZA,KAAK6B,WAAY,EACjB,MAAMqT,EAAWlV,KAAK0H,OAItB,OAHA1H,KAAK0H,QAAS,EAEdE,KAAK5H,KAAMkB,EAAOlB,KAAKoC,SAAUV,IAAiBC,EAAgBrM,GAC3D4f,EAAWlV,KAAOA,KAAKkK,QAChC,CAGA,SAAAjS,GACE,MAAMD,EAAWgI,KAAKkC,UAChBiT,EAAQnV,KAAK+B,eACb5J,EAAW6H,KAAK8B,kBAEhBsT,EAAaD,IAAUtX,IAAW5B,EAAM/F,EAAWiC,GAAYgd,EASrE,OARAnV,KAAKkC,aAAclC,KAAKL,YAAgByV,EAAa,GAAiBpd,EAAZA,GACtDmd,IAAUtX,IAEZmC,KAAKN,kBAAoBM,KAAKkC,UAAY,EAAIlC,KAAKN,kBAAoBM,KAAKN,kBAE5EM,KAAK4U,KAAMzc,EAAWid,EAAcpV,KAAKE,cAE3CF,KAAKmK,YACEnK,IACT,CAGA,IAAA0U,GAEE,OADI1U,KAAKkC,WAAWlC,KAAK/H,YAClB+H,KAAKkK,QACd,CAGA,OAAA1L,GAEE,OADKwB,KAAKkC,WAAWlC,KAAK/H,YACnB+H,KAAKkK,QACd,CAKA,MAAAL,GAQE,OAPI7J,KAAKU,aACPrC,gBAAgB2B,MAAgCf,GAAUA,EAAM4K,WAAU,GAE1ExL,gBAAgB2B,KAAM+S,sBAExB/S,KAAK4J,WAAa,EAEX5J,KAAKgK,OACd,CAMA,OAAAqL,CAAQC,GACN,MAAMC,EAAkBvV,KAAK7H,SACvBqd,EAAoB1X,cAAcwX,GACxC,GAAIC,IAAoBC,EAAmB,OAAOxV,KAClD,MAAM3G,EAAYic,EAAcC,EAC1B3S,EAAW0S,GAAerf,EAMhC,OALA+J,KAAK7H,SAAWyK,EAAW3M,EAAWuf,EACtCxV,KAAK8B,kBAAoBc,EAAW3M,EAAW6H,cAAckC,KAAK8B,kBAAoBzI,GACtF2G,KAAK0D,SAAWrK,EAChB2G,KAAKoC,QAAU/I,EACf2G,KAAKiC,YAAc5I,EACZ2G,IACT,CAMA,MAAAJ,GACEgI,KAAK5H,KAAM,EAAG,EAAG,EAAG1K,GACpB,MAAMmgB,EAAmCzV,KAAc,UAEvD,OADIyV,GAAMA,EAAGV,QAAUU,EAAGV,SAAW/U,MAAMyV,EAAG7V,SACvCI,KAAK6J,QACd,CAMA,QAAA6L,GACE,OAAO1V,KAAK4U,KAAK5U,KAAK7H,UAAU0R,QAClC,CAMA,IAAA8L,CAAKpX,EAAWzH,MACd,MAAM6e,EAAO3V,KAAK2V,KACZC,UAAY,KAGhB5V,KAAK2V,KAAO,KACZpX,EAASyB,MACTA,KAAK2V,KAAOA,EACZ3V,KAAK2H,SAAW7Q,IAAI,EAEtB,OAAO,IAAI+e,SAAQzP,IACjBpG,KAAK2H,SAAW,IAAMvB,EAAEwP,aAEpB5V,KAAK6B,WAAW7B,KAAK2H,WAClB3H,OAEX,EASF,MAMMvK,KAAOgI,GAAKA,EAUZqY,WAAa,CAACC,EAAIC,EAAKC,OAAW,EAAI,EAAIA,EAAM,EAAID,GAAOD,GAAM,EAAIE,EAAM,EAAID,IAAQD,EAAM,EAAIC,GAAQD,EA8BzGG,YAAc,CAACC,EAAM,GAAKC,EAAM,EAAKC,EAAM,GAAKC,EAAM,IAASH,IAAQC,GAAOC,IAAQC,EAAO7gB,KACjGgI,GAAW,IAANA,GAAiB,IAANA,EAAUA,EAC1BqY,WAxBsB,EAACS,EAAIJ,EAAKE,KAChC,IAAoBG,EAAUC,EAA1BC,EAAK,EAAGC,EAAK,EAAuBjZ,EAAI,EAC5C,GACE+Y,EAAWC,GAAMC,EAAKD,GAAM,EAC5BF,EAAWV,WAAWW,EAAUN,EAAKE,GAAOE,EACxCC,EAAW,EACbG,EAAKF,EAELC,EAAKD,QAEA3a,EAAI0a,GAAY,QAAc9Y,EAAI,KAC3C,OAAO+Y,CAAQ,EAaJG,CAAgBnZ,EAAG0Y,EAAKE,GAAMD,EAAKE,GAS1CO,MAAQ,CAACA,EAAQ,GAAIC,KACzB,MAAMC,EAAcD,EAAY/a,EAAOE,EACvC,OAAOwB,GAAKsZ,EAAYva,MAAMiB,EAAG,EAAG,GAAKoZ,IAAU,EAAIA,EAAM,EASzDG,OAAS,IAAIzX,KACjB,MAAM0X,EAAa1X,EAAK5B,OACxB,IAAKsZ,EAAY,OAAOxhB,KACxB,MAAMyhB,EAAcD,EAAa,EAC3BE,EAAW5X,EAAK,GAChB6X,EAAU7X,EAAK2X,GACfG,EAAU,CAAC,GACXC,EAAU,CAAC/b,YAAY4b,IAC7B,IAAK,IAAIzZ,EAAI,EAAGA,EAAIwZ,EAAaxZ,IAAK,CACpC,MAAM6Z,EAAMhY,EAAK7B,GACX8Z,EAAa7c,MAAM4c,GACJ,EAAME,OAAOpH,MAAM,KACxC,CAACkH,GACK5R,EAAQ6R,EAAW,GACnBE,EAAUF,EAAW,GAC3BH,EAAQ1d,KAAMkB,MAAM6c,GAAwCha,EAAIwZ,EAAjC3b,YAAYmc,GAAW,KACtDJ,EAAQ3d,KAAK4B,YAAYoK,GAC3B,CAGA,OAFA2R,EAAQ3d,KAAK4B,YAAY6b,IACzBC,EAAQ1d,KAAK,GACN,SAASge,WAAWla,GACzB,IAAK,IAAIC,EAAI,EAAGiJ,EAAI0Q,EAAQ1Z,OAAQD,EAAIiJ,EAAGjJ,IAAK,CAC9C,MAAM8Y,EAAWa,EAAQ3Z,GACzB,GAAID,GAAK+Y,EAAU,CACjB,MAAMoB,EAAQP,EAAQ3Z,EAAI,GACpBma,EAAQP,EAAQ5Z,EAAI,GAC1B,OAAOma,GAASP,EAAQ5Z,GAAKma,IAAUpa,EAAIma,IAAUpB,EAAWoB,EAClE,CACF,CACA,OAAON,EAAQA,EAAQ3Z,OAAS,EAClC,GASIma,UAAY,CAACna,EAAS,GAAIoa,EAAa,KAC3C,MAAMC,EAAS,CAAC,GACVzK,EAAQ5P,EAAS,EACvB,IAAK,IAAID,EAAI,EAAGA,EAAI6P,EAAO7P,IAAK,CAC9B,MAAMua,EAAgBD,EAAOta,EAAI,GAC3Bwa,EAAUxa,EAAI6P,EAId4K,EAAcD,GAAW,EAAIH,IAFXG,IADJxa,EAAI,GAAK6P,EACmB2K,GAAWxc,KAAK2B,UAEG0a,EACnEC,EAAOre,KAAK6C,MAAM2b,EAAaF,EAAe,GAChD,CAEA,OADAD,EAAOre,KAAK,GACLqd,UAAUgB,EAAO,EAiCpBI,GAAShc,EAAK,EACdic,GAAgB,EAALjc,EAEXkc,YAAc,CAAC1b,EAAI,OAASa,GAAKhC,EAAIgC,GAAIb,GAGzC2b,GAAkB,CACtB,CAACniB,GAAckiB,YACfE,KAAMF,YAAY,GAClBG,MAAOH,YAAY,GACnBI,MAAOJ,YAAY,GACnBK,MAAOL,YAAY,GAEnBM,KAAMnb,GAAK,EAAI5B,EAAI4B,EAAI2a,IAEvBS,KAAMpb,GAAK,EAAI9B,EAAK,EAAI8B,EAAIA,GAE5Bqb,KAAMrb,GAAKA,EAAIhC,EAAI,EAAG,GAAKgC,EAAI,IAAM,EAErCsb,OAAQtb,IACN,IAAIub,EAAM1S,EAAI,EACd,KAAO7I,IAAMub,EAAOvd,EAAI,IAAK6K,IAAM,GAAK,KACxC,OAAO,EAAI7K,EAAI,EAAG,EAAI6K,GAAK,OAAS7K,GAAY,EAAPud,EAAW,GAAK,GAAKvb,EAAG,EAAE,EAGrEwb,KAAM,CAACC,EAAY,UAAYzb,KAAOyb,EAAY,GAAKzb,EAAIA,EAAIA,GAAKyb,EAAYzb,EAAIA,EAEpF0b,QAAS,CAACC,EAAY,EAAGC,EAAS,MAChC,MAAMziB,EAAI4F,OAAO4c,EAAW,EAAG,IACzBxc,EAAIJ,OAAO6c,EAAQpjB,EAAU,GAC7B4Q,EAAKjK,EAAIyb,GAAYnc,EAAK,EAAItF,GAC9B0iB,EAAIjB,GAAWzb,EACrB,OAAOa,GAAW,IAANA,GAAiB,IAANA,EAAUA,GAAK7G,EAAI6E,EAAI,GAAI,IAAM,EAAIgC,IAAM7B,GAAM,EAAI6B,EAAKoJ,GAAKyS,EAAE,GAWtFC,GAAY,CAChBC,GAAIC,GAAUhc,GAAKgc,EAAOhc,GAC1Bic,IAAKD,GAAUhc,GAAK,EAAIgc,EAAO,EAAIhc,GACnCkc,MAAOF,GAAUhc,GAAKA,EAAI,GAAKgc,EAAW,EAAJhc,GAAS,EAAI,EAAIgc,GAAY,EAALhc,EAAS,GAAK,EAC5Emc,MAAOH,GAAUhc,GAAKA,EAAI,IAAM,EAAIgc,EAAO,EAAQ,EAAJhc,IAAU,GAAKgc,EAAW,EAAJhc,EAAQ,GAAK,GAAK,GASnFoc,gBAAkB,CAACC,EAAQC,EAAgBC,KAC/C,GAAIA,EAAaF,GAAS,OAAOE,EAAaF,GAC9C,GAAIA,EAAO9f,QAAQ,OAAS,EAAG,CAC7B,MACMigB,EADYV,GAAUO,IAAWA,EAAO/L,SAAS,SAAW+L,EAAO/L,SAAS,WACKgM,EAAeD,KAAaC,EAAeD,GAClI,OAAOG,EAAWD,EAAaF,GAAUG,EAAWxkB,IACtD,CAAO,CACL,MAAM4a,EAAQyJ,EAAO5K,MAAM,GAAI,GAAGmB,MAAM,KAClC4J,EAAuCF,EAAe1J,EAAM,IAClE,OAAO4J,EAAWD,EAAaF,GAAUG,KAAY5J,EAAM,GAAGA,MAAM,MAAQ5a,IAC9E,GAuDIykB,GAAuB,MAC3B,MAAMC,EAAO,CAAEnD,OAAQc,UAAWjB,MAAOX,aACzC,IAAK,IAAItH,KAAQ2K,GACf,IAAK,IAAIa,KAAQ7B,GAAiB,CAChC,MAAMkB,EAASlB,GAAgB6B,GACzBC,EAAWd,GAAU3K,GAC3BuL,EAAKvL,EAAOwL,GACVA,IAAShkB,GAAwB,SAATgkB,GAA4B,YAATA,EAC3C,CAACxjB,EAAG0P,IAAM+T,EAAoC,EAASzjB,EAAG0P,IAC1D+T,EAAsC,EAE1C,CAEF,OAAoC,CACrC,EAda,GAiBRC,GAAiB,CAAEtD,OAAQvhB,MAM3B8kB,aAAejiB,GAAQsC,MAAMtC,GAAQA,EACzCqC,MAAMrC,GAAQuhB,gBAAqC,EAAQK,GAAOI,IAClE7kB,KAKI+kB,GAAqB,CAAC,EAQtBC,qBAAuB,CAAC3M,EAAc5G,EAAQ5B,KAClD,GAAIA,IAAclQ,EAAsB,CACtC,MAAMqI,EAAIpH,EAAgB+X,IAAIN,GAC9B,OAAOrQ,GAAQqQ,CACjB,CAAO,GACLxI,IAAclQ,GAGbkQ,IAAclQ,GAAyB2F,MAAMmM,IAAW4G,KAAwC,EAAS1G,MAC1G,CACA,MAAMsT,EAAqBF,GAAmB1M,GAC9C,GAAI4M,EACF,OAAOA,EACF,CACL,MAAMC,EAAgB7M,EAAelU,YAAYkU,GAAgBA,EAEjE,OADA0M,GAAmB1M,GAAgB6M,EAC5BA,CACT,CACF,CACE,OAAO7M,CACT,EAMI8M,GAAgB,CAAE,IAAO,EAAG,IAAO,IAAMxe,EAAI,KAAQ,KACrDye,GAAuB,CAAC,EASxBC,iBAAmB,CAACjN,EAAIkN,EAAiB1Q,EAAM2Q,GAAQ,KAC3D,MAAMC,EAAcF,EAAgBrL,EAC9BwL,EAAgBH,EAAgBnU,EACtC,GAAImU,EAAgBtd,IAAMpI,GAAmB4lB,IAAgB5Q,EAC3D,OAAO0Q,EAET,MAAMI,EAAYD,EAAgBD,EAAc5Q,EAC1C+Q,EAASP,GAAqBM,GACpC,GAAKtgB,MAAMugB,IAAYJ,EAEhB,CACL,IAAIK,EACJ,GAAIJ,KAAeL,GACjBS,EAAiBH,EAAgBN,GAAcK,GAAeL,GAAcvQ,OACvE,CACL,MAAMiR,EAAW,IACXC,EAAkC1N,EAAG2N,YACrCC,EAAa5N,EAAG4N,WAChBC,EAAYD,GAAeA,IAAevmB,EAAQumB,EAAavmB,EAAIymB,KACzED,EAASE,YAAYL,GACrB,MAAMM,EAAUN,EAAOnU,MACvByU,EAAQC,MAAQR,EAAWL,EAC3B,MAAMc,EAA6C,EAASC,aAAeV,EAC3EO,EAAQC,MAAQR,EAAWjR,EAC3B,MACM4R,EAASF,GADgC,EAASC,aAAeV,GAEvEI,EAAS1c,YAAYuc,GACrBF,EAAiBY,EAASf,CAC5B,CACAH,EAAgBnU,EAAIyU,EACpBR,GAAqBM,GAAaE,CACpC,MAtBEN,EAAgBnU,EAAIwU,EAyBtB,OAFAL,EAAgBtd,EAChBsd,EAAgBrL,EAAIrF,EACb0Q,CAAe,EAWlBmB,kBAAoBC,IAExB,GAAIA,EAAWzb,aACbrC,gBAAgB8d,EAAYD,mBAAmB,OAC1C,CACL,MAAMzT,EAAsC,EAC5CA,EAAUuB,QACV3L,gBAAgBoK,GAAgC1E,IAC9C,MAAMiD,EAAgBjD,EAAMkD,SACtBtD,EAAcI,EAAMmD,OAC1B,GAAIvD,EAAY9N,GAAc,CAC5B,MAAMumB,EAAsC,EAAchV,MACpDiV,EAAuB5T,EAAU6T,cAActV,GACrD,GAAIjD,EAAMwB,aAAenQ,EAAsB,CAC7C,MAAM2Z,EAAmBpL,EAAY5N,GAMrC,GALI8E,MAAMwhB,IAAyBA,IAAyBjmB,SACnD2Y,EAAiB/H,GAExB+H,EAAiB/H,GAAiBqV,EAEhCtY,EAAMuD,kBACR,GAAK9M,OAAO+hB,KAAKxN,GAAkBpR,OAE5B,CACL,IAAI9D,EAAMzD,EACV,IAAK,IAAImR,KAAOwH,EACdlV,GAAOnD,EAA0B6Q,GAAOwH,EAAiBxH,GAAO,KAElE6U,EAAY5U,UAAY3N,CAC1B,MAPEuiB,EAAYI,eAAe,YASjC,MACM3hB,MAAMwhB,IAAyBA,IAAyBjmB,EAC1DgmB,EAAYI,eAAexV,GAE3BoV,EAAYpV,GAAiBqV,EAG7B5T,EAAU3J,QAAUiF,GACtB0E,EAAUsC,QAAQoH,SAAQ1U,IACpBA,EAAEuQ,cAAgBvQ,EAAEuQ,aAAa,WAAa5X,GAChDqH,EAAEgf,gBAAgB,QACpB,GAEN,IAEJ,CACA,OAAON,CAAU,EAKbO,GAAmBjN,oCACnBkN,GAAiBlN,oCACjBmN,GAAkB,CAAEnP,KAAM,MAC1BoP,GAAuB,CAAC,MACxBC,GAAqB,CAAC,KAAM,MAE5BC,GAAkB,CAAEC,GAAI,MAE9B,IACIrlB,GAEA4P,GAHA0V,GAAU,EA6Fd,MAAMC,oBAAoBzJ,MAUxB,WAAAlZ,CACEwQ,EACA2I,EACApV,EACAqV,EACAwJ,GAAU,EACV7P,EAAQ,EACR3P,EAAS,GAGTuL,MAAgD,EAAc5K,EAAQqV,GAEtE,MAAMyJ,EAAgBzR,gBAAgBZ,GAChCsS,EAAgBD,EAAczf,OAI9B2f,EAAyC,EAAa3lB,UACtD4lB,EAAwCD,EAAWtf,aA/GnC,EAACrG,EAAW+b,KAEpC,MAAM8J,EAAa,CAAC,EACpB,GAAIrjB,EAAMxC,GAAY,CACpB,MAAM8lB,EAAgB,GAAGC,UAA0C,EAAYpnB,KAAIiR,GAAO/M,OAAO+hB,KAAKhV,MAAOoW,OAAOtiB,OACpH,IAAK,IAAIqC,EAAI,EAAGiJ,EAAI8W,EAAc9f,OAAQD,EAAIiJ,EAAGjJ,IAAK,CACpD,MAAM4Q,EAAWmP,EAAc/f,GACzBkgB,EAA4C,EAAYtnB,KAAIiR,IAEhE,MAAMsW,EAAS,CAAC,EAChB,IAAK,IAAIjhB,KAAK2K,EAAK,CACjB,MAAMuW,EAAyCvW,EAAI3K,GAC/CvB,MAAMuB,GACJA,IAAM0R,IACRuP,EAAOb,GAAKc,GAGdD,EAAOjhB,GAAKkhB,CAEhB,CACA,OAAOD,CAAM,IAEfL,EAAWlP,GAA2C,CACxD,CAEF,KAAO,CACL,MAAMyP,EAAsC7Q,SAASwG,EAAWvb,SAAUgB,EAAQ1B,SAASU,UACrFokB,EAAO/hB,OAAO+hB,KAAK5kB,GACxBrB,KAAIiR,IAAgB,CAACoI,EAAGnU,WAAW+L,GAAO,IAAK3K,EAAGjF,EAAU4P,OAC5DyW,MAAK,CAACpnB,EAAG0P,IAAM1P,EAAE+Y,EAAIrJ,EAAEqJ,IACxB4M,EAAKpK,SAAQ5K,IACX,MAAM0W,EAAS1W,EAAIoI,EACb/B,EAAOrG,EAAI3K,EACjB,IAAK,IAAIwd,KAAQxM,EACf,GAAIvS,MAAM+e,GAAO,CACf,IAAIwD,EAAiCJ,EAAWpD,GAC3CwD,IAAWA,EAAYJ,EAAWpD,GAAQ,IAC/C,MAAMjiB,EAAW8lB,EAASF,EAC1B,IAAIpgB,EAASigB,EAAUjgB,OACnBugB,EAAUN,EAAUjgB,EAAS,GACjC,MAAMwgB,EAAS,CAAEnB,GAAIpP,EAAKwM,IAC1B,IAAIgE,EAAc,EAClB,IAAK,IAAI1gB,EAAI,EAAGA,EAAIC,EAAQD,IAC1B0gB,GAAeR,EAAUlgB,GAAGvF,SAEf,IAAXwF,IACFwgB,EAAOzS,KAAOwS,EAAQlB,IAEpBpP,EAAKtV,OACP6lB,EAAO7lB,KAAOsV,EAAKtV,MAErB6lB,EAAOhmB,SAAWA,GAAYwF,EAASygB,EAAc,GACrDR,EAAUjkB,KAAKwkB,EACjB,CAEF,OAAO5W,CAAG,IAGZ,IAAK,IAAI6S,KAAQoD,EAAY,CAC3B,MAAMI,EAAiCJ,EAAWpD,GAClD,IAAIiE,EAEJ,IAAK,IAAI3gB,EAAI,EAAGiJ,EAAIiX,EAAUjgB,OAAQD,EAAIiJ,EAAGjJ,IAAK,CAChD,MAAMkQ,EAAOgQ,EAAUlgB,GAEjB4gB,EAAc1Q,EAAKtV,KACzBsV,EAAKtV,KAAO+lB,QAAsBE,EAClCF,EAAWC,CAKb,CACKV,EAAU,GAAGzlB,UAChBylB,EAAUY,OAEd,CAEF,CAEA,OAAOhB,CAAU,EA+BuDiB,CAAkD,EAAY/K,GAAaA,GAAcA,GAEzJ,MACJtb,EAAK,SACLD,EAAQ,KACRG,EAAI,aACJV,EAAY,SACZY,EAAQ,YACRD,EAAW,SACXQ,GACEwkB,EAEEmB,EAAepgB,EAASA,EAAO7G,SAAW0B,EAAQ1B,SAClDknB,EAAoBzR,SAAStV,EAAc8mB,EAAa9mB,cACxDgnB,EAAWD,EAAoBpE,aAAaoE,GAAqB,KACjEE,GAAahkB,MAAMvC,KAAUuC,MAA2B,EAAOvC,MAC/DwmB,EAAUD,EAAiC,EAAOvmB,KAAO4U,SAAS5U,EAAMsmB,EAAW,SAAWF,EAAapmB,MAC3GymB,EAAYF,EAAiC,EAAO1mB,SAAW+U,SAAS/U,EAAUumB,EAAavmB,UAC/F6mB,EAAS9R,SAAS9U,EAAOsmB,EAAatmB,OACtC6mB,EAAYzmB,GAAYkmB,EAAalmB,SAErC0mB,EAAerkB,MAAMtC,IAAgB8kB,GAAiBlnB,EAAIZ,EAAiBE,KAAQoF,MAAMtC,GAA6BmmB,EAAanmB,YAA3BA,EAExG4mB,EAAmB,CAAC,EAEpBC,EAAqBpf,KAAK0D,SAAWpF,EAASA,EAAOoF,QAAU,GAErE,IAAI5B,EAAoBud,IACpBC,EAAiBD,IACjBE,EAA2B,EAC3BC,EAAsB,EAE1B,IAAK,IAAIC,EAAc,EAAGA,EAAcpC,EAAeoC,IAAe,CAEpE,MAAMvY,EAASkW,EAAcqC,GACvBC,EAAKpS,GAASmS,EACd5X,EAAKlK,GAAU0f,EAErB,IAAIsC,EAA0BN,IAC1BO,EAA2BP,IAE/B,IAAK,IAAIziB,KAAK2gB,EAEZ,GAAIliB,MAAMuB,GAAI,CAEZ,MAAM0I,EAAYqI,aAAazG,EAAQtK,GAEjC0R,EAAWmM,qBAAqB7d,EAAGsK,EAAQ5B,GAEjD,IAAIua,EAAYtC,EAAO3gB,GAEvB,MAAMkjB,EAAmB3lB,EAAM0lB,GAY/B,GAVI1C,IAAY2C,IACdhD,GAAmB,GAAK+C,EACxB/C,GAAmB,GAAK+C,EACxBA,EAAY/C,IAOVgD,EAAkB,CACpB,MAAMC,EAAkC,EAAYpiB,OAC9CqiB,GAAoB1lB,MAAMulB,EAAU,IAEtB,IAAhBE,GAAqBC,GACvBjD,GAAgBC,GAAmC,EACnDH,GAAqB,GAAKE,GAC1BplB,GAAYklB,IAEHkD,EAAc,GAAKC,GAC5BroB,GAAY,GACiB,EAAYwa,SAAQ,CAACtb,EAAG6G,KAC9CA,EAEY,IAANA,GACTof,GAAmB,GAAKjmB,EACxBc,GAAUgC,KAAKmjB,KAEfnlB,GAAUgC,KAAK9C,GALfimB,GAAmB,GAAKjmB,CAM1B,KAGFc,GAAgD,CAEpD,MACEklB,GAAqB,GAAKgD,EAC1BloB,GAAYklB,GAGd,IAAIzL,EAAW,KACX6O,EAAY,KACZC,EAA4Bb,IAC5Bc,EAAyB,EACzBC,EAAa,EAEjB,IAAK,IAAIzZ,EAAIhP,GAAUgG,OAAQyiB,EAAazZ,EAAGyZ,IAAc,CAE3D,MAAMC,EAAW1oB,GAAUyoB,GAEvB9lB,MAAM+lB,GACR9Y,GAAM8Y,GAENtD,GAAgBC,GAAmC,EACnDzV,GAAMwV,IAGRH,GAAgBnP,KAAO,KAEvB,MAAM6S,EAAkBjT,iBAAiB9F,GAAIyV,GAAI9V,EAAQwY,EAAI7X,EAAI+U,IAEjE,IAAI2D,EAEAjmB,MAAMgmB,KAAqBzlB,MAAMylB,EAAgBtD,KACnDzV,GAAM+Y,EACNC,EAAeD,EAAgBtD,IAE/BuD,EAAeD,EAEjB,MAAME,EAAiBnT,iBAAiB9F,GAAImE,KAAMxE,EAAQwY,EAAI7X,GACxD4Y,EAAYlZ,GAAIjP,KAChBumB,GAAahkB,MAAM4lB,KAAe5lB,MAA2B,EAAYvC,MAEzEooB,EAAc7B,EAAiC,EAAYvmB,KAAOmoB,GAAa3B,EAE/E6B,EAAgB9B,EAAiC,EAAY1mB,SAAWkV,iBAAiBH,SAAS3F,GAAIpP,SAAWwO,EAAI,EAAI0G,iBAAiB0R,EAAW7X,EAAQwY,EAAI7X,GAAMlB,EAAIoY,GAAa7X,EAAQwY,EAAI7X,GAEpM+Y,EAAavT,iBAAiBH,SAAS3F,GAAInP,MAASgoB,EAAsB,EAATpB,GAAc9X,EAAQwY,EAAI7X,GAC3FgZ,EAAsBxT,iBAAiBH,SAAS3F,GAAIhP,YAAa2mB,GAAehY,EAAQwY,EAAI7X,GAC5F5D,EAAmBxJ,MAAMomB,GAAuBA,EAAsBtrB,EAAiBsrB,GAEvF3b,EAAgBqC,GAAI/O,UAAYymB,EAChC6B,GAAgBjmB,MAAM2lB,GACtBO,GAAclmB,MAAM0lB,GACpBS,EAAgB7mB,EAAMomB,GACtBU,EAAgBD,GAAkBF,GAAgBC,EAClDG,EAAiBjB,EAAYE,EAAyBS,EAAaA,EACnEO,EAAoB/B,EAAqB8B,EAG1C1B,IAAwBsB,IAAgBE,IAAgBxB,EAAsB,GAEnF,IAAIjO,EAAc0O,EAElB,GAAIhc,IAAqB1O,EAAiBE,KAAM,CACzC2b,IAAUA,EAAWR,iBAAiB1J,EAAQoH,IACnD,IAAI8S,EAAchQ,EAASxS,MAE3B,KAAOwiB,IAAgBA,EAAYvc,eAAiBuc,EAAY7c,oBAAsB4c,GAIpF,GAHA5P,EAAc6P,EACdA,EAAcA,EAAY3c,SAEtB2c,GAAeA,EAAY7c,oBAAsB4c,EACnD,KAAOC,GACLlQ,cAAckQ,GAEdA,EAAcA,EAAY3c,QAIlC,CAiEA,GA9DIwc,GACFpR,kBAAkBmR,EAAgB3T,iBAAiBkT,EAAa,GAAIrZ,EAAQwY,EAAI7X,GAAM2Y,EAAgB9D,IACtG7M,kBAAkBmR,EAAgB3T,iBAAiBkT,EAAa,GAAIrZ,EAAQwY,EAAI7X,EAAI+U,IAAmB2D,EAAc5D,IACjHD,GAAiBjf,IAAMpI,IACrBkc,EACEA,EAAYlM,aAAehQ,IAC7BqnB,GAAiBjf,EAAIpI,EACrBqnB,GAAiBhN,EAAI6B,EAAYxL,QAGnC8J,kBACElB,2BAA2BzH,EAAQoH,EAAUhJ,EAAW6Z,GACxD5O,IAEEA,GAAwB9S,IAAMpI,IAChCqnB,GAAiBjf,EAAIpI,EACrBqnB,GAAiBhN,EAAIa,GAAwBb,OAK/CqR,EACFlR,kBAAkB0Q,EAAc5D,IAE5BsD,EACF3P,oBAAoB2P,EAAWtD,IAG/B9M,kBAAkBvR,GAAUiT,GAAeA,EAAYjT,OAAOA,SAAWA,EAASiT,EAAYxK,OAC9F4H,2BAA2BzH,EAAQoH,EAAUhJ,EAAW6Z,GAAmBxC,IAG3EmE,EACFjR,kBAAkB2Q,EAAgB9D,IAE9BuD,EACF3P,oBAAoB2P,EAAWvD,IAE/B7M,kBAAkBvR,GAAUiT,GAAeA,EAAYjT,OAAOA,SAAWA,EAASiT,EAAYxK,OAE9F4H,2BAA2BzH,EAAQoH,EAAUhJ,EAAW6Z,GAAmBzC,KAM7EA,GAAiB/M,IACnB+M,GAAiB9V,EAAIyI,iBAClBkC,EAGKA,EAAYzL,UAHH+J,kBACblB,2BAA2BzH,EAAQoH,EAAUhJ,EAAW6Z,GACxD5O,IACA3J,EACF8V,GAAiB9V,EACjB8V,GAAiB/M,IAIjBgN,GAAehN,IACjBgN,GAAe/V,EAAIyI,iBAAiBqN,GAAiB9V,EAAG+V,GAAe/V,EAAG+V,GAAehN,IAIvF+M,GAAiBjf,IAAMkf,GAAelf,EACxC,GAAIif,GAAiBjf,IAAMpI,GAAsBsnB,GAAelf,IAAMpI,EAAoB,CACxF,MAAMgsB,EAAe3E,GAAiBjf,IAAMpI,EAAqBqnB,GAAmBC,GAC9E2E,EAAkB5E,GAAiBjf,IAAMpI,EAAqBsnB,GAAiBD,GACrF4E,EAAgB7jB,EAAIpI,EACpBisB,EAAgBza,EAAI9I,WAAWsjB,EAAaxa,GAC5Cya,EAAgB1R,EAAIyR,EAAazR,EAAEtZ,KAAI,IAAMgrB,EAAgB1a,GAC/D,MAAO,GAAI8V,GAAiBjf,IAAMpI,GAAmBsnB,GAAelf,IAAMpI,EAAiB,CACzF,MAAMksB,EAAY7E,GAAiBjf,IAAMpI,EAAkBqnB,GAAmBC,GACxE6E,EAAe9E,GAAiBjf,IAAMpI,EAAkBsnB,GAAiBD,GAC/E8E,EAAa/jB,EAAIpI,EACjBmsB,EAAa9R,EAAI6R,EAAU7R,CAC7B,MAAO,GAAIgN,GAAiBjf,IAAMpI,GAAoBsnB,GAAelf,IAAMpI,EAAkB,CAC3F,MAAMosB,EAAa/E,GAAiBjf,IAAMpI,EAAmBqnB,GAAmBC,GAC1E+E,EAAgBhF,GAAiBjf,IAAMpI,EAAmBsnB,GAAiBD,GACjFgF,EAAcjkB,EAAIpI,EAClBqsB,EAAc7a,EAAI4a,EAAW5a,EAC7B6a,EAAc9R,EAAI,CAAC,EAAG,EAAG,EAAG,EAC9B,CAIF,GAAI8M,GAAiBhN,IAAMiN,GAAejN,EAAG,CAC3C,IAAIiS,EAAiBhF,GAAejN,EAAIgN,GAAmBC,GAC3DgF,EAAiB7G,iBAAyC,EAAU6G,EAAgBhF,GAAejN,EAAIiN,GAAejN,EAAIgN,GAAiBhN,GAAG,EAGhJ,CAGA,GAAIiN,GAAe/M,GAAK8M,GAAiB9M,GAAM+M,GAAe/M,EAAEjS,SAAW+e,GAAiB9M,EAAEjS,OAAS,CACrG,MAAMikB,EAAelF,GAAiB9M,EAAEjS,OAASgf,GAAe/M,EAAEjS,OAAS+e,GAAmBC,GACxFkF,EAAgBD,IAAiBlF,GAAmBC,GAAiBD,GAE3EmF,EAAcjS,EAAIgS,EAAahS,EAAEtZ,KAAI,CAACwrB,EAAGpkB,IAAM7C,MAAMgnB,EAAcjS,EAAElS,IAAM,EAAImkB,EAAcjS,EAAElS,KAC/FmkB,EAAchb,EAAI9I,WAAW6jB,EAAa/a,EAC5C,CAKA,MAAMkb,EAAsBxlB,OAAOokB,GAAiB1qB,EAAU,IAGxD8N,EAAQ,CACZzF,OAAQ0B,KACRtI,GAAIulB,KACJhW,SAAUqH,EACVpH,OAAQA,EACRH,OAAQ,KACRib,MAAOpF,GAAgBnP,KACvBvK,MAAOqX,aAAamG,GACpBza,aAAclI,WAAW2e,GAAiB9M,GAC1CzJ,WAAYpI,WAAW4e,GAAe/M,GACtCnJ,SAAU1I,WAAW4e,GAAe9V,GACpChB,YAAa6W,GAAiB9V,EAC9Bd,UAAW6W,GAAe/V,EAC1BJ,SAAUzI,WAAW2e,GAAiB9M,GACtC9I,QAAS4V,GAAiB9V,EAC1Bb,MAAO4W,GAAejN,EACtBvK,UAAWD,EACXhF,aAAc,EACdE,WAAY8gB,EACZ9e,QAASwe,EACT3b,gBAAiB8c,EACjB1d,gBAAiB0d,EACjBxd,mBAAoB4c,EAEpB5b,WAAYD,EACZD,WAAYsX,GAAelf,EAC3ByG,aAAcD,EACda,cAAe,EACfD,cAAe,EACfyC,kBAAmB,EACnB3C,SAAU,KACVF,SAAU,KACViO,SAAU,KACVuP,SAAU,KACVrP,MAAO,KACPnL,MAAO,MAGLxD,IAAqB1O,EAAiBE,MACxC0b,aAAapN,EAAOqN,GAGlB1W,MAAMwlB,KACRA,EAA4Bnc,EAAM3D,YAGpC+f,EAAyB5jB,MAAM2kB,EAAiBa,EAAqB,IACrE9B,EAAYlc,EACZwb,IAEApgB,SAASa,KAAM+D,EAEjB,EAIIrJ,MAAM4kB,IAAmBY,EAA4BZ,KACvDA,EAAiBY,IAGfxlB,MAAMoH,IAAsBqe,EAAyBre,KACvDA,EAAoBqe,GAIlB7a,IAAclQ,IAChBuqB,EAA0BJ,EAA2Ba,EACrDR,EAA2BL,EAG/B,CAKF,IAAK7kB,MAAMilB,GAA0B,CACnC,IAAIjiB,EAAI,EACRW,gBAAgB2B,MAA2B+D,IACrCrG,GAAKiiB,GAA2BjiB,EAAIkiB,IACtC7b,EAAMuD,kBAAoB,EACtBvD,EAAMG,eAAiB3O,EAAiBG,OAC1C2I,gBAAgBmK,GAASC,WAAgCyZ,IACnDA,EAAcxqB,KAAOqM,EAAMrM,KAC7BwqB,EAAc5a,kBAAoB,EACpC,KAIN5J,GAAG,GAEP,CAEF,CAEK2f,GACH8E,QAAQC,KAAK,iHAGX9C,GACFjhB,gBAAgB2B,MAA2B+D,IAEnCA,EAAM3D,WAAa2D,EAAM3B,SAC7B2B,EAAM3B,QAAUkd,GAElBvb,EAAM3D,YAAckf,CAAc,IAEpCxd,GAAqBwd,GAErBA,EAAiB,EAKdxd,IACHA,EAAoB7L,EACpB+J,KAAK+B,eAAiB,GAGxB/B,KAAK+K,QAAUqS,EAEfpd,KAAK7H,SAAW2J,IAAsB7L,EAAWA,EAAW2H,eAAgBkE,EAAoB9B,KAAKiC,YAAcjC,KAAK+B,eAAkB/B,KAAKiC,aAAehM,EAE9J+J,KAAKjH,SAAWA,GAAY2lB,EAAa3lB,SAEzCiH,KAAKkD,MAAQ0b,EAEb5e,KAAKoC,OAASkd,EAKdtf,KAAK8B,kBAAoBA,EAEzB9B,KAAKsc,cAAgB6C,GAEhBnf,KAAKsU,WAAakL,GAAqBxf,KAAKjH,SAASiH,KAC5D,CAMA,OAAAqV,CAAQC,GACN,MAAMC,EAAkBvV,KAAK7H,SAC7B,GAAIod,IAAoBzX,cAAcwX,GAAc,OAAOtV,KAC3D,MAAM3G,EAAYic,EAAcC,EAUhC,OARAlX,gBAAgB2B,MAA2B+D,IAEzCA,EAAMkB,gBAAkBnH,cAAciG,EAAMkB,gBAAkB5L,GAC9D0K,EAAMM,gBAAkBvG,cAAciG,EAAMM,gBAAkBhL,GAC9D0K,EAAM7D,cAAgB7G,EACtB0K,EAAM3D,YAAc/G,EACpB0K,EAAMQ,oBAAsBlL,CAAS,IAEhC6P,MAAMmM,QAAQC,EACvB,CAKA,OAAA+M,GAcE,OAbAhkB,gBAAgB2B,MAA2B+D,IACzC,MAAMue,EAAYve,EAAMie,MACxB,GAAIM,EAAW,CACb,MAAMC,EAAU5T,2BAA2B5K,EAAMmD,OAAQnD,EAAMkD,SAAUlD,EAAMwB,YAC/EsK,kBAAkB0S,EAAShS,IAC3BV,kBAAkByS,IAAa3F,IAC/B5Y,EAAMkC,aAAelI,WAAWwS,GAAwBX,GACxD7L,EAAM8B,YAAc0K,GAAwB3J,EAC5C7C,EAAMoC,WAAapI,WAAW4e,GAAe/M,GAC7C7L,EAAM0C,SAAW1I,WAAW4e,GAAe9V,GAC3C9C,EAAM+B,UAAY6W,GAAe/V,CACnC,KAEK5G,IACT,CAMA,MAAAJ,GAEE,OADAsJ,MAAMtJ,SACCsc,kBAAkBlc,KAC3B,CAMA,IAAA2V,CAAKpX,GACH,OAAO2K,MAAMyM,KAAKpX,EACpB,EASF,MAAMikB,QAAU,CAACzX,EAAS2I,IAAe,IAAIwJ,YAAYnS,EAAS2I,EAAY,KAAM,GAAG,GAAOoB,OA6GxF2N,GAAuB,CAAC,IAAK,IAAK,KAqBxC,MAAMC,GAAyB,CAC7B9jB,MAAO,KACPE,MAAO,MAQH6jB,qBAAuB,CAACC,EAAK3b,EAAU3I,KAC3C,IAAIukB,EAAaH,GAAuB9jB,MACxC,KAAOikB,GAAY,CACjB,MAAMlkB,EAAOkkB,EAAWpb,MAClBqb,EAAcD,EAAWD,MAAQA,EACjCG,GAAiB9b,GAAY4b,EAAW5b,WAAaA,EACrD+b,GAAe1kB,GAAUukB,EAAWvkB,SAAWA,EACrD,GAAIwkB,GAAeC,GAAiBC,EAAa,CAC/C,MAAMC,EAAOJ,EAAWpa,UACxB,IAAMwa,EAAKC,cAAgB,CAAE,MAAO,CAAOD,EAAKpZ,SAChD7K,YAAY0jB,GAAwBG,GACpC,MAAMM,EAAeN,EAAWvkB,OAC5B6kB,IACFA,EAAaC,aACTD,EAAaE,WAAW1lB,SAAWwlB,EAAaC,aAClDD,EAAathB,WAAY,EACpBshB,EAAazhB,gBAChByhB,EAAazb,QAAS,EACtByb,EAAarqB,WAAWqqB,GACxBA,EAAaxb,SAASwb,KAI9B,CACAN,EAAalkB,CACf,GAkXF,MAiBM2kB,KAAO,CAAC/kB,EAAWzH,OAChB,IAAI2c,MAAM,CAAEtb,SAAU,EAAIgB,EAAQE,UAAWP,WAAYyF,GAAY,KAAM,GAAG2L,SA8BvF,SAASqZ,eAAeC,EAAgBlV,EAAUjE,GAChD,MAAMU,EAAUY,gBAAgB6X,GAChC,IAAKzY,EAAQpN,OAAQ,OACrB,MAAQuJ,GAAW6D,EACbzF,EAAYqI,aAAazG,EAAQoH,GACjCmV,EAAoBhJ,qBAAqBnM,EAAUpH,EAAQ5B,GACjE,IAAIoe,EAAgB/U,2BAA2BzH,EAAQuc,GACvD,GAAI5oB,MAAMwP,GACR,OAAOqZ,EAGP,GADA7T,kBAAkB6T,EAAenT,IAC7BA,GAAwB9S,IAAMpI,GAAqBkb,GAAwB9S,IAAMpI,EAAiB,CACpG,IAAa,IAATgV,EACF,OAAOkG,GAAwB3J,EAC1B,CACL,MAAMyU,EAAiBP,iBAAyC,EAAUvK,GAA8C,GAAQ,GAChI,MAAO,GAAGhU,MAAM8e,EAAezU,EAAGzN,EAAQC,aAAaiiB,EAAe3L,GACxE,CACF,CAEJ,CAOA,MAAMiU,gBAAkB,CAAC5Y,EAAS2I,KAChC,IAAI7Y,MAAM6Y,GAKV,OAJAA,EAAWvb,SAAWlC,EAEtByd,EAAWnb,YAAc2U,SAASwG,EAAWnb,YAAahD,EAAiBE,MAEpE,IAAIynB,YAAYnS,EAAS2I,EAAY,KAAM,GAAG,GAAMxJ,QAAQ,EAS/D0Z,2BAA6B,CAACC,EAAcpb,EAAWqF,KAC3D,IAAIgW,GAAuB,EAwB3B,OAvBAzlB,gBAAgBoK,GAA+B1E,IAC7C,MAAMJ,EAAcI,EAAMmD,OAC1B,GAAI2c,EAAa9V,SAASpK,GAAc,CACtC,MAAMogB,EAAYhgB,EAAMkD,SAClB3B,EAAYvB,EAAMwB,WAClBke,EAAoBhJ,qBAAqB3M,EAAcnK,EAAa2B,KACrEme,GAAqBA,GAAqBA,IAAsBM,KAE/DhgB,EAAMzF,OAAOQ,QAAUiF,GACvBA,EAAMwB,aAAenQ,GACrB2O,EAAM6O,OACN7O,EAAM6O,MAAMrN,aAAenQ,IAE7B2O,EAAM6O,MAAMtL,kBAAoB,GAGlCtI,YAAYyJ,EAAW1E,GAEvBgP,qBAAqBhP,GACrB+f,GAAuB,EAE3B,KACC,GACIA,CAAoB,EASvBE,OAAS,CAACjZ,EAASoR,EAAYrO,KACnC,MAAM+V,EAAe/Y,aAAaC,GAC5BzM,EAAkD6d,GAA0B1iB,GAC5EwqB,EAAiB9H,GAA2C,EAAa+H,kBAAiD,EAChI,IAAK,IAAIxmB,EAAI,EAAGiJ,EAAIkd,EAAalmB,OAAQD,EAAIiJ,EAAGjJ,IAAK,CACnD,MAAMklB,EAAgCiB,EAAanmB,GACnDilB,qBAAqBC,EAAK9U,EAAcmW,EAC1C,CACA,IAAIE,EACJ,GAAI7lB,EAAOoC,aAAc,CACvB,IAAIoB,EAAoB,EACxBzD,gBAAgBC,GAAkCW,IAChD,IAAKA,EAAMyB,aAGT,GAFAyjB,EAAgBP,2BAA2BC,EAAwC,EAAS/V,GAExFqW,IAAkBllB,EAAML,MAC1BK,EAAM4K,SACN7K,YAAYV,EAAQW,OACf,CAEL,MACMmlB,EADgBnlB,EAAMyE,QAAUzE,EAAMmD,OACXnD,EAAM9G,SACnCisB,EAAWtiB,IACbA,EAAoBsiB,EAExB,CAIEnlB,EAAML,MACRolB,OAAOjZ,EAAS9L,EAAO6O,GAEvB7O,EAAMyB,cAAe,CACvB,IACC,GAEE7F,MAA+B,EAASiH,qBAClB,EAASA,kBAAoBA,EAE1D,MACEqiB,EAAgBP,2BACdC,EAC0B,EAC1B/V,GAWJ,OAPIqW,IAAkB7lB,EAAOM,QAC3BN,EAAOoC,cAAe,EAGO,EAASmJ,QAAiC,EAASA,UAG3Ega,CAAY,EAsDfQ,SAAW,CAAC1e,EAAO2e,EAAOC,EAAQC,EAAQC,IAAYD,GAAW7e,EAAQ2e,IAAUC,EAASD,IAAWG,EAAUD,GAsBjHE,KAAO,CAACxnB,EAAOC,EAAKwnB,EAAQxI,KAChC,IAAIyI,EAAKzuB,EAAIgD,EAAQ1B,SAASK,UAC9B,IAAmB,IAAfqkB,EAAsB,CACxB,MAAM0I,EACS,GACCprB,GAAOiH,cAAgBjH,GACnCorB,GAAUA,EAAO5kB,YACnB2kB,EAAKC,EAAO5kB,UAEhB,CACA,MAAMxC,EAAI,EAAI/B,KAAKM,KAAK2oB,EAASC,EAAK,IACtC,OAAQD,EAA4B,IAAXA,EAAexnB,GAAO,EAAIM,GAAKP,EAAQO,EAAIN,EAAnDD,CAAsD,EAoBnE4nB,MAAQ9e,GACJ,IAAIzG,KACV,MAAMwlB,EAAS/e,KAAMzG,GACrB,OAAO,IAAIylB,MAAMluB,KAAM,CACrBmuB,MAAO,CAACnD,EAAGoD,GAAKruB,KAAOkuB,EAAOluB,GAC9BuX,IAAK,CAAC0T,EAAGlU,IAASkX,OAA8C,IAAIK,KAClE,MAAMC,EAAaC,GAAMzX,MAASuX,GAClC,OAAmCtuB,GAAMuuB,EAAWL,EAAOluB,GAAG,KAEhE,EASAyuB,cAAgB,CAACtf,EAAIuf,EAAQ,IAAM,IAAIhmB,KAAUA,EAAK5B,OAASqI,EAAGrI,OAASmnB,MAxBnE,EAAC9e,EAAIwf,EAAO,IAAM,IAAIjmB,IAASimB,EAAO3uB,GAAKmP,KAAMzG,EAAM1I,GAAKA,GAAKmP,EAAGnP,KAAM0I,GAwBDkmB,CAAMzf,EAAIuf,IAAUvf,MAAOzG,GAyE5G8lB,GAAQ,CACZK,EAAG/Z,gBACHyC,IAAKmV,eACL/sB,IAAKmtB,gBACLK,OACA9H,kBACA7e,OACAsoB,WAhMiBnoB,GAASA,EAAMH,OAAO,EAAGG,EAAMG,OAAS,IAiMzDJ,QACAmnB,KACApB,KACAsC,SA1MevmB,kBA2Mf7C,MAAkD8oB,cAAc9oB,OAChED,MAAkD+oB,cAAc/oB,OAChEM,KAA+CyoB,cAAczoB,MAC7DgpB,KAA+CP,eAzKpC,CAACzuB,EAAG4F,EAAKN,MAAWtF,EAAI4F,IAAQN,EAAMM,IAAQN,EAAMM,KAASN,EAAMM,GAAQA,IA0KtFQ,YAAoEqoB,cAAcroB,YAAa,GAC/FonB,SAA2DiB,cAAcjB,UACzEyB,SAA2DR,eApM5C,CAACzuB,EAAG8F,MAAoB9F,GAAG+V,QAAQjQ,KAqMlDopB,SAA2DT,eA7L5C,CAACzuB,EAAGmvB,EAAaC,IAAc,GAAGpvB,IAAIkvB,SAASC,EAAaC,KA8L3EC,OAAqDZ,eAtLxC,CAACzuB,EAAGmvB,EAAaC,IAAc,GAAGpvB,IAAIqvB,OAAOF,EAAaC,KAuLvEE,SAA2Db,eA/J5Cc,GAAWA,EAAUhqB,EAAK,MAgKzCiqB,SAA2Df,eA1J5CgB,GAAqB,IAAVA,EAAgBlqB,KAwLtCmqB,sBAAwB,CAACC,EAAUC,KACvC,IAAIC,EAAaF,EAAS1kB,kBAE1B,GADI4kB,IAAezwB,IAAUywB,EAAa,GACtC7rB,MAAM4rB,GAAe,OAAOC,EAChC,GAAIjsB,OAAOgsB,GAAe,OAAQA,EAClC,MAAME,EAAkC,EAClCC,EAAWJ,EAAWA,EAASK,OAAS,KACxCC,GAAahsB,MAAM8rB,GACnBG,EAtBmB,EAACP,EAAUC,KACpC,GAAI3sB,iBAAiB2sB,EAAc,KAAM,CACvC,MAAMO,EAA8C,MAApBP,EAAa,GACvCQ,EAAwCT,EAAc,MACtDO,EAAaE,EAAgBA,EAAcvjB,QAAUujB,EAAc7kB,OAAS,EAClF,OAAO4kB,EAA0BD,EAAaA,EAAaE,EAAc9uB,QAC3E,GAgBmB+uB,CAAmBV,EAAUG,GAC1CQ,GAActsB,MAAMksB,GACpBK,EAA0B5vB,EAAsB+U,KAAKoa,GAC3D,GAAIS,EAAyB,CAC3B,MAAMC,EAAeD,EAAwB,GACvC/W,EAAQsW,EAAWtW,MAAMgX,GACzBC,EAAcR,GAAazW,EAAM,GAAKuW,EAASvW,EAAM,IAAMqW,EAC3Da,EAAeJ,EAAaJ,EAAaD,EAAYQ,EAAcZ,EACnEc,GAAyBnX,EAAM,GACrC,OAAOhB,iBAAiBkY,EAAcC,EAAuBH,EAAa,GAC5E,CACE,OAAOF,EAAaJ,EACbD,EAAajsB,MAAM+rB,EAASD,IAC5BD,EAD2CE,EAASD,GACvCD,CACtB,EAkCF,SAASe,WAAWC,EAAa7f,EAAI4e,EAAc1b,EAASuC,EAAO3P,GACjE,MAEMgqB,EAFWltB,MAAMitB,EAAYvvB,WAAmCuvB,EAAoB,UAAKzxB,EAE3DwwB,EAAexwB,EAAWwwB,EAC9D7e,KAAKC,EAAI8f,EAAkB,EAAG,EAAGryB,GACjC,MAAMsyB,EAAU7c,EACd,IAAImS,YAAYnS,EAAsC,EAAelD,EAAI8f,GAAkB,EAAOra,EAAO3P,GACzG,IAAI8V,MAAgC,EAAe5L,EAAI8f,GAUzD,OATAC,EAAQ9S,KAAK,GAEb3V,SAAS0I,EAAI+f,GACbvpB,gBAAgBwJ,GAA8B5I,IAC5C,MACMmlB,EADgBnlB,EAAMyE,QAAUzE,EAAMmD,OACXnD,EAAM9G,SACnCisB,EAAWvc,EAAG/F,oBAAmB+F,EAAG/F,kBAAoBsiB,EAAQ,IAEtEvc,EAAG1P,SA3CL,SAAS0vB,yBAAyBhgB,GAChC,OAAOjK,eAAgBiK,EAAG/F,kBAAoB+F,EAAG5F,YAAc4F,EAAG9F,eAAkB8F,EAAG5F,aAAehM,CACxG,CAyCgB4xB,CAAyBhgB,GAChCA,CACT,CAEA,MAAMigB,iBAAiBrU,MAKrB,WAAAlZ,CAAYmZ,EAAa,CAAC,GACxBxK,MAA+C,EAAc,KAAM,GAEnElJ,KAAK7H,SAAW,EAEhB6H,KAAK6mB,OAAS,CAAC,EACf,MAAMkB,EAAiBrU,EAAWjc,SAC5BuwB,EAAiB7uB,EAAQ1B,SAE/BuI,KAAKvI,SAAWswB,EAAiB/pB,aAAa+pB,EAAgBC,GAAkBA,EAEhFhoB,KAAKjH,SAAW2a,EAAW3a,UAAYivB,EAAejvB,SACtD,MAAMkvB,EAAiB/a,SAASwG,EAAW9b,aAAcowB,EAAepwB,cACxEoI,KAAKkD,MAAQ+kB,EAAiB1N,aAAa0N,GAAkB,KAE7DjoB,KAAK8B,kBAAoB,CAC3B,CAkBA,GAAAomB,CAAIC,EAAIC,EAAIC,GACV,MAAMC,EAAShuB,MAAM8tB,GACfG,EAAUjuB,MAAM6tB,GACtB,GAAIG,GAAUC,EAAS,CAErB,GADAvoB,KAAKU,cAAe,EAChB4nB,EAAQ,CACV,MAAMZ,EAA4C,EAElD,GAAI9sB,MAAMytB,GAAK,CACb,MAAMG,EAA2C,EAC3C5c,EAAqBd,aAAwC,GAE7D4b,EAAa1mB,KAAK7H,SAElBgQ,EAAsBnI,KAAK8B,kBAE3BpK,EAAKgwB,EAAYhwB,GACvB,IAAIgG,EAAI,EACR,MAAM+qB,EAAe7c,EAAmBjO,OACxCiO,EAAmBuG,SAA8BjL,IAE/C,MAAMwhB,EAAuB,IAAKhB,GAElC1nB,KAAK7H,SAAWuuB,EAChB1mB,KAAK8B,kBAAoBqG,EACpBtN,MAAMnD,KAAKgxB,EAAqBhxB,GAAKA,EAAK,IAAMgG,GACrD+pB,WACEiB,EACA1oB,KACAwoB,EAAkBthB,EAAQxJ,EAAG+qB,EAAczoB,MAC3CkH,EACAxJ,EACA+qB,GAEF/qB,GAAG,GAEP,MACE+pB,WACEC,EACA1nB,KACAumB,sBAAsBvmB,KAAMqoB,GACD,EAGjC,MAEEZ,WAC0B,EACxBznB,KACAumB,sBAAsBvmB,KAA8B,IAGxD,OAAOA,KAAK8U,KAAK,EACnB,CACF,CAqBA,IAAAwO,CAAKqF,EAAQC,GACX,GAAI/tB,MAAM8tB,IAAWA,GAAU9tB,MAAM8tB,EAAO3e,OAAQ,OAAOhK,KAC3D2oB,EAAO3e,QACP,MAAM7R,IAAgD,EAAS0wB,OAA4C,EAASA,OAAOC,YAAY3wB,SAAkC,EAASA,UAClL,OAAO6H,KAAKkoB,IAAIS,EAAQ,CAAEhU,YAAa,CAAC,EAAGxc,GAAWA,WAAUG,KAAM,UAAYswB,EACpF,CAQA,GAAApyB,CAAIuU,EAAS2I,EAAYkV,GACvB,OAAI/tB,MAAM6Y,GAAoB1T,MAC9B0T,EAAWvb,SAAWlC,EACtByd,EAAWnb,YAAchD,EAAiBC,QACnCwK,KAAKkoB,IAAInd,EAAS2I,EAAYkV,GACvC,CAOA,IAAAG,CAAKxqB,EAAUqqB,GACb,OAAI/tB,MAAM0D,IAAaA,IAAa3D,MAAM2D,GAAkByB,KACrDA,KAAKkoB,IAAI,CAAE/vB,SAAU,EAAGW,WAAY,IAAMyF,EAASyB,OAAS4oB,EACrE,CAQA,KAAAI,CAAMC,EAAWL,GACf,OAAI/tB,MAAMouB,IAAcA,IAActuB,MAAMsuB,KAC5CjpB,KAAK6mB,OAAOoC,GAAa1C,sBAAsBvmB,KAA8B,IADdA,IAGjE,CAOA,MAAAgkB,CAAOjZ,EAAS+C,GAEd,OADAkW,OAAOjZ,EAAS/K,KAAM8N,GACf9N,IACT,CAMA,OAAAqV,CAAQC,GACN,MAAMC,EAAkBvV,KAAK7H,SAC7B,GAAIod,IAAoBzX,cAAcwX,GAAc,OAAOtV,KAC3D,MAAM3G,EAAYic,EAAcC,EAC1BsR,EAAS7mB,KAAK6mB,OACpBxoB,gBAAgB2B,MAAiCf,GAAUA,EAAMoW,QAAQpW,EAAM9G,SAAWkB,KAC1F,IAAK,IAAI4vB,KAAapC,EAAQA,EAAOoC,IAAc5vB,EACnD,OAAO6P,MAAMmM,QAAQC,EACvB,CAKA,OAAA+M,GAIE,OAHAhkB,gBAAgB2B,MAAiCf,IAC3CA,EAAMojB,SAASpjB,EAAMojB,SAAS,IAE7BriB,IACT,CAKA,MAAAJ,GAGE,OAFAsJ,MAAMtJ,SACNvB,gBAAgB2B,MAAiCf,GAAUA,EAAMW,SAAQ,GAClEsc,kBAAkBlc,KAC3B,CAMA,IAAA2V,CAAKpX,GACH,OAAO2K,MAAMyM,KAAKpX,EACpB,EAOF,MAAM2qB,eAAiBxV,GAAc,IAAIoU,SAASpU,GAAYoB,OAg4C9D,MAAMqU,MAEJ,WAAA5uB,CAAYmZ,EAAa,CAAC,GACpB1a,EAAMC,SAASD,EAAMC,QAAQ2a,SAAS5T,MAC1C,MAAMopB,EAAY1V,EAAWxa,KAE7B,IAAIA,EAAOhE,EACPk0B,IACFlwB,EAA8B,EAAYD,SACV,EAAYowB,eACrCve,aAA6C,GAAa,IAC1D5V,GAET,MAAMo0B,EAAgB5V,EAAWjc,SAC3B8xB,EAAgBpwB,EAAQ1B,SACxB+xB,EAAe9V,EAAW8V,aA6BhC,GA3BAxpB,KAAKvI,SAAW6xB,EAAgBtrB,aAAasrB,EAAeC,GAAiBA,EAE7EvpB,KAAK9G,KAAOA,EAEZ8G,KAAKypB,aAAe,GAEpBzpB,KAAK0pB,mBAAqB,GAE1B1pB,KAAK2pB,YAAc,GAEnB3pB,KAAK4pB,iBAAmB,GAExB5pB,KAAK6pB,uBAAyB,GAE9B7pB,KAAK8pB,gBAAkB,GAEvB9pB,KAAK+pB,MAAO,EAEZ/pB,KAAKgqB,UAAY,EAEjBhqB,KAAKiqB,QAAU,CAAC,EAEhBjqB,KAAKkqB,QAAU,CAAC,EAEhBlqB,KAAKmqB,gBAAkB,CAAC,EAExBnqB,KAAKoqB,KAAO,CAAC,EACTZ,EACF,IAAK,IAAIa,KAAMb,EAAc,CAC3B,MAAMc,EAAMr1B,EAAIs1B,WAAWf,EAAaa,IACxCrqB,KAAKmqB,gBAAgBE,GAAMC,EAC3BA,EAAI7f,iBAAiB,SAAUzK,KACjC,CAEJ,CAKA,QAAA4T,CAAS4W,IACOxqB,KAAK+pB,KAAO/pB,KAAK8pB,gBAAkB9pB,KAAK2pB,aAChDhwB,KAAK6wB,EACb,CAOA,OAAAC,CAAQC,GACN,IAAIC,EAAc3xB,EAAMC,QACpB2xB,EAAa5xB,EAAME,KACnB2xB,EAAiB1xB,EAAQ1B,SAC7BuB,EAAMC,QAAU+G,KAChBhH,EAAME,KAAO8G,KAAK9G,KAClBC,EAAQ1B,SAAWuI,KAAKvI,SACxB,MAAMqzB,EAAM9qB,KAAKmqB,gBACjB,IAAK,IAAIE,KAAMS,EAAK9qB,KAAKkqB,QAAQG,GAAMS,EAAIT,GAAIH,QAC/C,MAAMa,EAAWL,EAAG1qB,MAIpB,OAHAhH,EAAMC,QAAU0xB,EAChB3xB,EAAME,KAAO0xB,EACbzxB,EAAQ1B,SAAWozB,EACZE,CACT,CAKA,OAAA1I,GAgBE,OAfAriB,KAAKgqB,UAAY,EACjBhqB,KAAKyqB,SAAQ,KACX,IAAI/sB,EAAIsC,KAAK2pB,YAAYhsB,OACrB4R,EAAIvP,KAAK0pB,mBAAmB/rB,OAChC,KAAOD,KAAKsC,KAAK2pB,YAAYjsB,GAAGkC,SAChC,KAAO2P,KAAKvP,KAAK0pB,mBAAmBna,GAAGvP,MACvCA,KAAK2pB,YAAYhsB,OAAS,EAC1BqC,KAAK0pB,mBAAmB/rB,OAAS,EACjCqC,KAAKypB,aAAatX,SAAgD5X,IAChE,MAAMywB,EAAoBzwB,EAAYyF,MAClCpF,MAAMowB,IACRhrB,KAAK0pB,mBAAmB/vB,KAAKqxB,EAC/B,GACA,IAEGhrB,IACT,CAeA,GAAAkoB,CAAIC,EAAIC,GAEN,GADApoB,KAAK+pB,MAAO,EACRnvB,MAAMutB,GAAK,CACb,MAAM5tB,EAAqD,EAC3DyF,KAAKypB,aAAa9vB,KAAKY,GACvByF,KAAKyqB,SAAQ,KACX,MAAMO,EAAoBzwB,EAAYyF,MAClCpF,MAAMowB,IACRhrB,KAAK0pB,mBAAmB/vB,KAAKqxB,EAC/B,GAEJ,MACEhrB,KAAKiqB,QAA6B,GAAQ,IAAsB1qB,IAASS,KAAKyqB,SAAQ,IAAMrC,KAAM7oB,KAEpG,OAAOS,IACT,CAMA,OAAAirB,CAAQC,GAEN,GADAlrB,KAAK+pB,MAAO,EACRnvB,MAAMswB,GAA2B,CACnC,MAAMC,EAAenrB,KAAKgqB,YAE1B,GADgBhqB,KAAK4pB,iBAAiBuB,GACzB,OAAOnrB,KACpB,MAAMzF,EAAqD,EAC3DyF,KAAK4pB,iBAAiBuB,GAAgB5wB,EACtCyF,KAAKyqB,SAAQ,KACX,MAAMO,EAAoBzwB,EAAYyF,MAClCpF,MAAMowB,IACRhrB,KAAK6pB,uBAAuBlwB,KAAKqxB,EACnC,GAEJ,CACA,OAAOhrB,IACT,CAMA,QAAA4lB,CAAS8E,GACP1qB,KAAK+pB,MAAO,EACZ,MAAMoB,EAAenrB,KAAKgqB,YACpB1qB,EAAmDU,KAAK4pB,iBAAiBuB,GAC/E,GAAIvwB,MAAM0E,GAAU,OAAOA,EAAQU,MACnC,MAAMzF,EAAuD8E,kBAAkBqrB,GAE/E,IAAIU,EAIJ,OALAprB,KAAK4pB,iBAAiBuB,GAAgB5wB,EAEtCyF,KAAKyqB,SAAQ,KACXW,EAAkB7wB,EAAYyF,KAAK,IAE9BorB,CACT,CAKA,WAAAC,CAAY/R,GACV,GACO,WADCA,EAAE1K,KAEN5O,KAAKqiB,SAGX,CAEA,MAAAziB,GACE,MAAM+pB,EAAc3pB,KAAK2pB,YACnBD,EAAqB1pB,KAAK0pB,mBAC1BI,EAAkB9pB,KAAK8pB,gBACvBD,EAAyB7pB,KAAK6pB,uBAC9BiB,EAAM9qB,KAAKmqB,gBACjB,IAAIzsB,EAAIisB,EAAYhsB,OAChB+I,EAAIgjB,EAAmB/rB,OACvB6N,EAAIse,EAAgBnsB,OACpBgJ,EAAIkjB,EAAuBlsB,OAC/B,KAAOD,KAAKisB,EAAYjsB,GAAGkC,SAC3B,KAAO8G,KAAKgjB,EAAmBhjB,GAAG1G,MAClC,KAAOwL,KAAKse,EAAgBte,GAAG5L,SAC/B,KAAO+G,KAAKkjB,EAAuBljB,GAAG3G,MACtC,IAAK,IAAIqqB,KAAMS,EAAKA,EAAIT,GAAIiB,oBAAoB,SAAUtrB,MAC1D2pB,EAAYhsB,OAAS,EACrB+rB,EAAmB/rB,OAAS,EAC5BqC,KAAKypB,aAAa9rB,OAAS,EAC3BmsB,EAAgBnsB,OAAS,EACzBksB,EAAuBlsB,OAAS,EAChCqC,KAAK4pB,iBAAiBjsB,OAAS,EAC/BqC,KAAKgqB,UAAY,EACjBhqB,KAAKkqB,QAAU,CAAC,EAChBlqB,KAAKiqB,QAAU,CAAC,EAChBjqB,KAAKmqB,gBAAkB,CAAC,EACxBnqB,KAAKoqB,KAAO,CAAC,CACf,EAOF,MAwBMmB,qCAAuC,CAAC5lB,EAAO6lB,IAAa7lB,GAAS/K,MAAM+K,GAAgC,EAAQ6lB,GAAY7lB,EAE/H8lB,GAAmB,IAAIl1B,IAE7B,MAAMm1B,gBAIJ,WAAAnxB,CAAYqoB,GAEV5iB,KAAK2rB,QAAU/I,EAEf5iB,KAAK4rB,OAAS5rB,KAAK2rB,UAAYz2B,EAAIymB,KAEnC3b,KAAK6rB,SAAW,EAEhB7rB,KAAK8rB,UAAY,EAEjB9rB,KAAK8b,MAAQ,EAEb9b,KAAK+rB,OAAS,EAEd/rB,KAAKgsB,KAAO,EAEZhsB,KAAKisB,IAAM,EAEXjsB,KAAKksB,OAAS,EAEdlsB,KAAKmsB,QAAU,EAEfnsB,KAAKosB,QAAU,EAEfpsB,KAAKqsB,YAAc,EAEnBrsB,KAAKssB,YAAc,EAEnBtsB,KAAKusB,YAAc,EAEnBvsB,KAAKwsB,aAAe,EAEpBxsB,KAAKysB,SAAW,EAEhBzsB,KAAK0sB,WAAY,EAEjB1sB,KAAK2sB,WAAY,EAEjB3sB,KAAK4sB,aAAe,IAAInZ,MAAM,CAC5Bvb,UAAU,EACVO,QAAS,IAAMuH,KAAK6sB,UAAU3iB,SAC9BvR,SAAU,KACR,MAAM0K,EAAYrD,KAAK0sB,WAAa1sB,KAAK2sB,UACzCtuB,gBAAgB2B,MAAoCf,GAAUA,EAAM6tB,gBAAgBzpB,EAAU,EAEhGvK,WAAY,IAAMkH,KAAK6sB,UAAU7iB,UAChC8K,OAEH9U,KAAK6sB,UAAY,IAAIpZ,MAAM,CACzBvb,UAAU,EACVJ,UAAW,GACXa,SAAUo0B,IACR,MAAMnI,EAAKmI,EAAK9sB,UACV+sB,EAAKhtB,KAAKqsB,YACVY,EAAKjtB,KAAKssB,YACVY,EAAKltB,KAAKmsB,QACVgB,EAAKntB,KAAKosB,QACVgB,EAAKJ,EAAKE,EACVG,EAAKJ,EAAKE,EAChBntB,KAAKqsB,YAAca,EACnBltB,KAAKssB,YAAca,EACfC,IAAIptB,KAAK0sB,UAAYM,EAAKE,GAC1BG,IAAIrtB,KAAK2sB,UAAYM,EAAKE,GAC9BntB,KAAKysB,SAAWlwB,MAAMqoB,EAAK,EAAIlpB,KAAKC,KAAKyxB,EAAKA,EAAKC,EAAKA,GAAMzI,EAAK,EAAG,EAAE,IAEzE9P,OAEH9U,KAAKstB,aAAe,IAAI7Z,MAAM,CAC5Bvb,UAAU,EACVC,SAAU,IAAMgB,EAAQE,UACxBP,WAAY,KACVkH,KAAKutB,qBACLvtB,KAAKwtB,yBACLxtB,KAAK8sB,cAAc,IAEpBhY,OAEH9U,KAAKytB,WAAa,IAAIha,MAAM,CAC1Bvb,UAAU,EACVC,SAAU,IAAMgB,EAAQE,UACxBZ,QAAS,KACPuH,KAAK4sB,aAAa1iB,QAAQ,EAE5BpR,WAAY,KACVkH,KAAK4sB,aAAa5iB,OAAO,IAE1B8K,OAEH9U,KAAKpB,MAAQ,KAEboB,KAAKlB,MAAQ,KACbkB,KAAK0tB,qBACL1tB,KAAKutB,qBACLvtB,KAAK2tB,eACL3tB,KAAKwtB,yBACLxtB,KAAK8sB,eACL9sB,KAAK4tB,eAAiB,IAAIC,gBAAe,IAAM7tB,KAAKstB,aAAarY,YACjEjV,KAAK4tB,eAAeE,QAAQ9tB,KAAK2rB,UAChC3rB,KAAK4rB,OAAS32B,EAAM+K,KAAK2rB,SAASlhB,iBAAiB,SAAUzK,MAAM,EACtE,CAEA,kBAAA0tB,GACE,MAAM9B,EAAS5rB,KAAK4rB,OACdhJ,EAAM5iB,KAAK2rB,QACjB3rB,KAAKmsB,QAAU5vB,MAAMqvB,EAAS32B,EAAIk3B,QAAUvJ,EAAImL,WAAY,GAC5D/tB,KAAKosB,QAAU7vB,MAAMqvB,EAAS32B,EAAIm3B,QAAUxJ,EAAIoL,UAAW,EAC7D,CAEA,kBAAAT,GACEvtB,KAAK6rB,SAAW52B,EAAIg5B,WACpBjuB,KAAK8rB,UArIgB,MACvB,MAAMlJ,EAAMztB,SAAS+4B,cAAc,OACnCh5B,EAAIymB,KAAKC,YAAYgH,GACrBA,EAAIxb,MAAM2kB,OAAS,SACnB,MAAMA,EAASnJ,EAAIuL,aAEnB,OADAj5B,EAAIymB,KAAK3c,YAAY4jB,GACdmJ,CAAM,EA+HMqC,EACnB,CAEA,YAAAT,GACE,MAAMvmB,EAAQqH,iBAAiBzO,KAAK2rB,SAC9B/I,EAAM5iB,KAAK2rB,QAIjB,IAAI7P,EAAOiQ,EACX,GAJA/rB,KAAKusB,YAAc3J,EAAI2J,YAAc/wB,WAAW4L,EAAMinB,YAAc7yB,WAAW4L,EAAMknB,aACrFtuB,KAAKwsB,aAAe5J,EAAI4J,aAAehxB,WAAW4L,EAAMmnB,WAAa/yB,WAAW4L,EAAMonB,cACtFxuB,KAAKutB,qBAEDvtB,KAAK4rB,OACP9P,EAAQ9b,KAAK6rB,SACbE,EAAS/rB,KAAK8rB,cACT,CACL,MAAM2C,EAAS7L,EAAI8L,wBACnB5S,EAAQ2S,EAAO3S,MACfiQ,EAAS0C,EAAO1C,OAChB/rB,KAAKisB,IAAMwC,EAAOxC,IAClBjsB,KAAKgsB,KAAOyC,EAAOzC,IACrB,CACAhsB,KAAK8b,MAAQA,EACb9b,KAAK+rB,OAASA,CAChB,CAEA,sBAAAyB,GACEnvB,gBAAgB2B,MAAoCf,IAC9CA,EAAM0vB,QACR1vB,EAAM2vB,aACR,IAEF5uB,KAAK2tB,eACLtvB,gBAAgB2B,MAAoCf,IAClDA,EAAMojB,UACFpjB,EAAM0vB,QACR1vB,EAAM4vB,OACR,GAEJ,CAEA,OAAAxM,GACEriB,KAAKutB,qBACLvtB,KAAK2tB,eACL3tB,KAAKwtB,yBACLxtB,KAAK8sB,cACP,CAEA,YAAAA,GACE9sB,KAAK0tB,qBACL1tB,KAAKytB,WAAWxY,SAClB,CAKA,WAAAoW,CAAY/R,GACV,GACO,WADCA,EAAE1K,KAEN5O,KAAK8sB,cAGX,CAEA,MAAAltB,GACEI,KAAK4sB,aAAa/iB,SAClB7J,KAAK6sB,UAAUhjB,SACf7J,KAAKstB,aAAazjB,SAClB7J,KAAKytB,WAAW5jB,SAChB7J,KAAK4tB,eAAekB,UAAU9uB,KAAK2rB,UAClC3rB,KAAK4rB,OAAS32B,EAAM+K,KAAK2rB,SAASL,oBAAoB,SAAUtrB,MACjEyrB,GAAiBrY,OAAOpT,KAAK2rB,QAC/B,EAOF,MAkBMoD,iBAAmB,CAACnM,EAAK/rB,EAAGm4B,EAAMC,EAAOC,KAC7C,MAAMC,EAAiB,QAANt4B,EACXu4B,EAAiB,QAANv4B,EACX8O,EAAc,QAAN9O,GAAqB,SAANA,GAAsB,UAANA,GAAiBs4B,EAAW,EACrD,WAANt4B,GAAwB,UAANA,GAAuB,QAANA,GAAeu4B,EAAW,OACvD,WAANv4B,EAAiB,MACjBA,GACR,EAAE+P,EAAC,EAAE8I,GAAMG,kBAAkBlK,EAAO4K,IAC1C,IAAIyc,EAAKpmB,EAQT,MAPU,MAAN8I,EACFsd,EAAMpmB,EAAI,IAAOooB,EACRtf,IACTsd,EAAKlS,iBAAiB8H,EAAKrS,GAAyB,MAAM,GAAM3J,GAE9DwoB,GAAYH,EAAQ,IAAGjC,GAAMiC,GAC7BE,GAAYD,EAAO,IAAGlC,GAAMkC,GACzBlC,CAAE,EAWLqC,gBAAkB,CAACzM,EAAK/rB,EAAGm4B,EAAMC,EAAOC,KAE5C,IAAIvpB,EACJ,GAAIhL,MAAM9D,GAAI,CACZ,MAAMy4B,EAAkB93B,EAAsB+U,KAA0B,GACxE,GAAI+iB,EAAiB,CACnB,MAAMC,EAAWD,EAAgB,GAC3B9f,EAAW+f,EAAS,GACpBC,EAAgC,EAAInf,MAAMkf,GAC1CJ,EAA2B,QAAhBK,EAAS,GACpBJ,EAA2B,QAAhBI,EAAS,GACpBC,EAAWV,iBAAiBnM,EAAK4M,EAAS,GAAIR,EAAMC,EAAOC,GAC3DQ,EAAWX,iBAAiBnM,EAAK4M,EAAS,GAAIR,EAAMC,EAAOC,GACjE,GAAIC,EAAU,CACZ,MAAM1yB,EAAM4S,iBAAiB0f,iBAAiBnM,EAAK,MAAOoM,GAAOU,EAAUlgB,GAC3E7J,EAAQlJ,EAAMgzB,EAAWA,EAAWhzB,CACtC,MAAO,GAAI2yB,EAAU,CACnB,MAAMjzB,EAAMkT,iBAAiB0f,iBAAiBnM,EAAK,MAAOoM,GAAOU,EAAUlgB,GAC3E7J,EAAQxJ,EAAMszB,EAAWA,EAAWtzB,CACtC,MACEwJ,EAAQ0J,iBAAiBogB,EAAUC,EAAUlgB,EAEjD,MACE7J,EAAQopB,iBAAiBnM,EAAK/rB,EAAGm4B,EAAMC,EAAOC,EAElD,MACEvpB,EAA6B,EAE/B,OAAOpJ,MAAMoJ,EAAO,EAAE,EAOlBgqB,sBAAwB5a,IAC5B,IAAI6a,EACJ,MAAMC,EAAgB9a,EAAOhK,QAC7B,IAAK,IAAIrN,EAAI,EAAGiJ,EAAIkpB,EAAclyB,OAAQD,EAAIiJ,EAAGjJ,IAAK,CACpD,MAAMwJ,EAAS2oB,EAAcnyB,GAC7B,GAAIwJ,EAAOrR,GAAc,CACvB+5B,EAA0C,EAC1C,KACF,CACF,CACA,OAAOA,CAAa,EAGtB,IAAIE,GAAgB,EAEpB,MAAMC,GAAgB,CAAC,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,WAyCzJ,MAAMC,eAIJ,WAAAz1B,CAAYmZ,EAAa,CAAC,GACpB1a,EAAMC,SAASD,EAAMC,QAAQ2a,SAAS5T,MAC1C,MAAMiwB,EAAW/iB,SAASwG,EAAW4P,KAAM,cACrChrB,EAAO23B,EAAW1V,aAAuC,GAAc,KACvE2V,EAAWD,IAA0B,WAAbA,GAAyBA,IAAax6B,MAC9D06B,EAASF,KAAc33B,IAAS7C,OAASy6B,GACzCE,EAAWH,IAAax1B,MAAMw1B,KAA0B,IAAbA,GAAqBC,GAChEG,EAAYJ,GAAat1B,MAAMs1B,KAAcE,IAAWC,EACxDE,EAAcD,EAAiC,EAAWhgB,MAAM,KAAK/Z,KACnDgH,GAAM,KAC1B,MAAMyX,EAAS/U,KAAK+U,OACpB,OAAOA,GAAUA,EAAOzX,GAAKyX,EAAOzX,KAAO,IAAI,IAE/C,KACEizB,EAAYF,GAAaC,EAAY3yB,OAAS,EAEpDqC,KAAKsN,MAAQwiB,KAEb9vB,KAAKtI,GAAMmD,MAAM6Y,EAAWhc,IAAsBsI,KAAKsN,MAArBoG,EAAWhc,GAE7CsI,KAAKwwB,UAhK6BtpB,KACpC,MAAM0b,EAAiC1b,GAAS4D,aAAa5D,GAAQ,IAAiBhS,EAAIymB,KAC1F,IAAI8U,EAAkBhF,GAAiBrd,IAAIwU,GAK3C,OAJK6N,IACHA,EAAkB,IAAI/E,gBAAgB9I,GACtC6I,GAAiBj1B,IAAIosB,EAAK6N,IAErBA,CAAe,EAyJHC,CAA8Bhd,EAAW8c,WAE1DxwB,KAAKkH,OAAS,KAEdlH,KAAK+U,OAAS,KAEd/U,KAAK2wB,OAAS,KAEd3wB,KAAK4wB,WAAa,KAElB5wB,KAAK6wB,MAAQ,KAEb7wB,KAAK8wB,MAAQ,KAEb9wB,KAAKsjB,KAAO6M,GAAUC,KAAcE,EAEpCtwB,KAAK+wB,SAAWZ,EAAS73B,EAAO,KAEhC0H,KAAKgxB,WAAaZ,GAAwB,IAAbH,GAAqBC,EAAW,EAAyB,EAAa,KAEnGlwB,KAAKixB,YAAcX,IAAgBC,GAAaD,EAAY,GAAKA,EAAY,GAAKx5B,KAElFkJ,KAAKkxB,YAAcZ,IAAgBC,GAAaD,EAAY,GAAKA,EAAY,GAAKx5B,KAElFkJ,KAAKmxB,mBAAqBb,GAAeC,GAAaD,EAAY,GAAKA,EAAY,GAAKx5B,KAExFkJ,KAAKoxB,mBAAqBd,GAAeC,GAAaD,EAAY,GAAKA,EAAY,GAAKx5B,KAExFkJ,KAAKqxB,oBAAsBf,GAAeC,GAAaD,EAAY,GAAKA,EAAY,GAAKx5B,KAEzFkJ,KAAKsxB,oBAAsBhB,GAAeC,GAAaD,EAAY,GAAKA,EAAY,GAAKx5B,KAEzFkJ,KAAKuxB,QAAU7d,EAAW6d,SAAWz6B,KAErCkJ,KAAKwxB,QAAU9d,EAAW8d,SAAW16B,KAErCkJ,KAAKyxB,eAAiB/d,EAAW+d,gBAAkB36B,KAEnDkJ,KAAK0xB,eAAiBhe,EAAWge,gBAAkB56B,KAEnDkJ,KAAK2xB,gBAAkBje,EAAWie,iBAAmB76B,KAErDkJ,KAAK4xB,gBAAkBle,EAAWke,iBAAmB96B,KAErDkJ,KAAKrH,SAAW+a,EAAW/a,UAAY7B,KAEvCkJ,KAAK6xB,eAAiBne,EAAWme,gBAAkB/6B,KAEnDkJ,KAAK8xB,UAAW,EAEhB9xB,KAAK6B,WAAY,EAEjB7B,KAAKuD,OAAQ,EAEbvD,KAAK+xB,UAAW,EAEhB/xB,KAAKgyB,YAAa,EAElBhyB,KAAKiyB,YAAa,EAElBjyB,KAAKkyB,QAAU,GAEflyB,KAAKie,OAAS,EAEdje,KAAKmyB,YAAc,EAEnBnyB,KAAKoyB,UAAY,EAEjBpyB,KAAKqyB,SAAW,EAEhBryB,KAAKsyB,aAAe,EAEpBtyB,KAAKuyB,WAAa,CAAC,QAAS,MAAO,MAAO,SAE1CvyB,KAAKwyB,OAAS,CAAC,EAAG,EAAG,EAAG,GAExBxyB,KAAKyyB,YAAc,KAEnBzyB,KAAK0yB,OAAS,KAEd1yB,KAAK2yB,QAAUjf,EAEf1T,KAAK2uB,OAASzhB,SAASwG,EAAWmb,OAAO,GAEzC7uB,KAAKyH,MAAQ,KAEbzH,KAAK4S,MAAQ,KACbzT,SAASa,KAAKwwB,UAAWxwB,MAEzBsjB,MAAK,KACH,IAAItjB,KAAK8xB,SAAT,CACA,IAAK9xB,KAAKkH,OAAQ,CAChB,MAAMA,EAAoC4D,aAAa4I,EAAWxM,QAAQ,GAC1ElH,KAAKkH,OAASA,GAAUhS,EAAIymB,KAC5B3b,KAAKqiB,SACP,CACIriB,KAAK2uB,QAAQ3uB,KAAK6uB,OANG,CAMI,GAEjC,CAKA,IAAA7Z,CAAKD,GACH,GAAIA,IAEFA,EAAO/K,QACPhK,KAAK+U,OAASA,GAET/U,KAAK2yB,QAAQzrB,QAAQ,CAExB,IAAI0oB,EACC/0B,MAAgC,EAASkQ,SAG5C1M,gBAAuC,GAAqCY,IACtEA,EAAM8L,UAAY6kB,IACpBA,EAAgBD,sBAAgD,GAClE,IALFC,EAAgBD,sBAAgD,GASlE3vB,KAAKkH,OAAS0oB,GAAiB16B,EAAIymB,KACnC3b,KAAKqiB,SACP,CAEF,OAAOriB,IACT,CAEA,YAAIysB,GACF,OAAOzsB,KAAKwwB,UAAU/D,QACxB,CAEA,YAAImG,GACF,OAAO5yB,KAAK4wB,WAAa5wB,KAAKwwB,UAAU9D,UAAY1sB,KAAKwwB,UAAU7D,SACrE,CAEA,UAAIkG,GACF,OAAO7yB,KAAK4wB,WAAa5wB,KAAKwwB,UAAUrE,QAAUnsB,KAAKwwB,UAAUpE,OACnE,CAEA,YAAIhvB,GACF,MAAMR,GAAKoD,KAAK6yB,OAAS7yB,KAAKmyB,aAAenyB,KAAKqyB,SAClD,OAAOz1B,IAAMiB,KAAYnD,MAAMkC,GAAK,EAAIL,MAAMC,MAAMI,EAAG,EAAG,GAAI,EAChE,CAEA,OAAAylB,GACEriB,KAAK8xB,UAAW,EAChB,MAAMvU,EAASvd,KAAK2yB,QAOpB,OANA3yB,KAAK2wB,OAASzjB,SAASqe,qCAAqChO,EAAOoT,OAAQ3wB,OAAO,GAClFA,KAAK4wB,WAAwF,MAA3E1jB,SAASqe,qCAAqChO,EAAOuV,KAAM9yB,MAAO,KACpFA,KAAK6wB,MAAQ3jB,SAASqe,qCAAqChO,EAAOsT,MAAO7wB,MAAO,aAChFA,KAAK8wB,MAAQ5jB,SAASqe,qCAAqChO,EAAOuT,MAAO9wB,MAAO,aAChFA,KAAK2tB,eACL3tB,KAAK8sB,eACE9sB,IACT,CAEA,WAAA4uB,GASE,OARI5uB,KAAK0yB,SACP1yB,KAAK0yB,OAAOjX,WAAWzc,YAAYgB,KAAK0yB,QACxC1yB,KAAK0yB,OAAS,MAEZ1yB,KAAKyyB,cACPzyB,KAAKyyB,YAAY7yB,SACjBI,KAAK0yB,OAAS,MAET1yB,IACT,CAEA,KAAA6uB,GACE7uB,KAAK4uB,cACL,MAAM4B,EAAYxwB,KAAKwwB,UACjBuC,EAAS/yB,KAAK4wB,WACdoC,EAAiBxC,EAAU7E,QAAQsH,cAAc,oCACjDP,EAASx9B,EAAIg5B,cAAc,OAC3BgF,EAAch+B,EAAIg5B,cAAc,OAChCiF,EAAYj+B,EAAIg5B,cAAc,OAC9BkF,EAAQrD,GAAc/vB,KAAKsN,MAAQyiB,GAAcpyB,QACjDiuB,EAAS4E,EAAU5E,OACnByH,EAAiBzH,EAAS4E,EAAU3E,SAAW2E,EAAU1U,MACzDwX,EAAkB1H,EAAS4E,EAAU1E,UAAY0E,EAAUzE,OAC3DQ,EAAciE,EAAUjE,YACxBC,EAAegE,EAAUhE,aACzBwC,EAAOhvB,KAAKwwB,UAAU1U,MAAQ,IAAM,IAAM,IAC1CyX,EAAUR,EAAS,EAAI,GACvBS,EAAST,EAAS,GAAK,EACvBU,EAAOV,EAAS,GAAK/D,EAAO,EAC5B0E,EAAcX,EAASU,EAAO,GAC9BE,EAAaZ,EAAS,GAAKU,EAC3BG,EAAYb,EAASY,EAAaD,EAClC/C,EAASoC,EAAS,WAAa,WAK/Bc,eAAiBh9B,GAAKk8B,EAAS,OAAO,EAAI,KAAO,WAKjDe,QAAW7iB,GAAM,mBAAmB8hB,EAAS,GAAK,SAAS9hB,0BAS3D8iB,QAAU,CAACn3B,EAAG+J,EAAGlJ,EAAGu2B,EAAGhnB,IAAM,YAAYpQ,UAAU+J,WAAWlJ,aAAau2B,cAAchnB,OAC/F0lB,EAAOtrB,MAAM6sB,QAAU,GAAGF,QAAQ,WAAYR,EAASC,EAAQT,EAASxG,EAAcyC,EAAM+D,EAAS/D,EAAOxC,mDAE/FxsB,KAAKwwB,UAAUtE,0DAER6G,EAAS,SAAW,wEAGxCG,EAAY9rB,MAAM6sB,QAAU,GAAGF,QAAQ,SAAU,EAAG,EAAGhB,EAASM,EAAiBI,EAAMV,EAASU,EAAOH,KAClGN,IACHE,EAAY9rB,MAAM6sB,SAAW,wBACzBH,QAAQ,WAAWD,eAAeJ,EAAK,qBAAmD9C,eAC1FmD,QAAQ,WAAWD,eAAeJ,EAAK,mBAA+C9C,cAG5FwC,EAAU/rB,MAAM6sB,QAAU,GAAGF,QAAQ,WAAY,EAAG,EAAGhB,EAASxG,EAAckH,EAAMV,EAASU,EAAOjH,KAC/FwG,IACHG,EAAU/rB,MAAM6sB,SAAW,wBACvBH,QAAQ,WAAWD,eAAe,QAAQd,EAAS,aAAe,gBAAgBpC,eAClFmD,QAAQ,WAAWD,eAAe,QAAQd,EAAS,WAAa,cAAcpC,cAGpF,MAAM9J,EAAS,CAAC,WAAY,YAC5B7mB,KAAKwyB,OAAOrgB,SAAQ,CAACtb,EAAG6G,KACtB,MAAMw2B,EAASx2B,EAAI,EACbiI,GAASuuB,EAAS,EAAIl0B,KAAKie,QAAUpnB,EACrCs9B,EAASz2B,EAAI,EACb02B,EAAUzuB,EAAQiuB,EAClBS,EAAS1uB,GAASuuB,EAASnB,EAASM,EAAiBC,EAAkBP,EAASxG,EAAcC,GAAgBoH,EAC9GU,GAAUJ,EAASC,IAAWC,GAAWD,IAAWC,IAAYC,EAChEE,EAASr/B,EAAIg5B,cAAc,OAC3BsG,EAAQt/B,EAAIg5B,cAAc,OAC1BuG,EAAU1B,EAASuB,EAAS,QAAU,OAASA,EAAS,SAAW,MACnEI,EAAaJ,GAAUvB,EAASY,EAAaD,IAAiBQ,EAA4BnB,GAAU,EAAIsB,EAAS,GAAK,EAA/CtB,GAAU,GAAK,GAAgEA,EAAS,EAAI,EAEzKyB,EAAMG,UAAY,GAAG30B,KAAKtI,KAAKmvB,EAAOsN,KAAUn0B,KAAKuyB,WAAW70B,KAChE62B,EAAOntB,MAAM6sB,QAAU,GAAGF,QAAQ,WAAY,EAAG,EAAGJ,EAAYD,uDAE5CX,EAAS,SAAW,yCACdmB,EAAS,QAAU,qCACvBI,EAAS,MAAQ,4BAC5BG,gBAA8CrB,aAEzDoB,EAAMptB,MAAM6sB,QAAU,mDAENjF,EAAO,EAAK,0BAChB0E,sBACDX,EAASuB,EAAS,QAAU,OAASA,EAAS,SAAW,6NAOpDvB,GAAUuB,IAAWvB,IAAWmB,EAAS,QAAU,wFAGxDC,EAASf,EAAQ,iDACNe,EAAS,kBAAoBf,iCAC7Be,EAASf,EAAQ,kCAC5BL,EAASuB,EAAS,WAAa,YAAcA,EAAS,WAAa,8CACnEvB,EAASuB,EAAS,cAAgB,eAAiBA,EAAS,YAAc,sCAErFC,EAAO3Y,YAAY4Y,GACnB,IAAI5L,EAAWjjB,EAAQ+uB,GAAc3B,EAAS,EAAI,GAClDwB,EAAOntB,MAAM2rB,EAAS,OAAS,OAAS,GAAGnK,OAE1CsL,EAAShB,EAAcC,GAAWvX,YAAY2Y,EAAO,IAGxD7B,EAAO9W,YAAYsX,GACnBR,EAAO9W,YAAYuX,GACnB3C,EAAU7E,QAAQ/P,YAAY8W,GAEzBM,GAAgBN,EAAOkC,UAAU1M,IAAI,0BAC1CloB,KAAK0yB,OAASA,EAEY,WADAnP,eAAeiN,EAAU7E,QAAS,cAE1D3rB,KAAKyyB,YAAc9O,gBAAgB6M,EAAU7E,QAAS,CAAE/C,SAAU,cAGtE,CAEA,YAAA+E,GAIE,IAAIkH,EAHA70B,KAAK2uB,QACP3uB,KAAK4uB,cAGP,MAAMkG,EAAU90B,KAAKkH,OACfspB,EAAYxwB,KAAKwwB,UACjBuC,EAAS/yB,KAAK4wB,WACd7b,EAAS/U,KAAK+U,OACpB,IAAIggB,EACAnS,EAAMkS,EACNE,EAAU,EACVC,EAAU,EAEVC,EAAgBtS,EAChB7N,IACFggB,EAAahgB,EAAOJ,YACpBI,EAAOH,KAAK,GAAG,IAEjB,MAAMugB,EAAsE,WAAlD5R,eAAeiN,EAAU7E,QAAS,aAA2BhI,gBAAgB6M,EAAU7E,QAAS,CAAE/C,SAAU,cACtI,KAAOhG,GAAOA,IAAQ4N,EAAU7E,SAAW/I,IAAQ1tB,EAAIymB,MAAM,CAC3D,MAAMyZ,EAA+C,WAApC7R,eAAeX,EAAK,aACpBe,gBAAgBf,EAAK,CAAEgG,SAAU,WAE9ChG,IAAQsS,IACVF,GAAWpS,EAAIyS,YAAc,EAC7BJ,GAAWrS,EAAI0S,WAAa,EAC5BJ,EAAgBtS,EAAI2S,cAEtB3S,EAAiCA,EAAiB,cAC9CwS,IACGP,IAASA,EAAU,IACxBA,EAAQl7B,KAAKy7B,GAEjB,CACID,GAAmBA,EAAkBv1B,SACzC,MAAMqe,EAAS8U,EAASiC,EAAUC,EAC5BO,EAAazC,EAAS+B,EAAQ9Y,YAAc8Y,EAAQ3G,aACpDsH,EAAgB1C,EAASvC,EAAU1U,MAAQ0U,EAAUzE,OAErD2J,GADa3C,EAASvC,EAAUjE,YAAciE,EAAUhE,cAC/BiJ,EACzB5E,EAAQ7wB,KAAK6wB,MACbC,EAAQ9wB,KAAK8wB,MAGnB,IAAI6E,EAAc,QAEdC,EAAc,MAEdC,EAAiB,MAEjBC,EAAiB,QAErB,GAAIn7B,MAAMk2B,GAAQ,CAChB,MAAMrB,EAAgC,EAAQnf,MAAM,KACpDwlB,EAAiBrG,EAAS,GAC1BmG,EAAcnG,EAAS7xB,OAAS,EAAI6xB,EAAS,GAAKmG,CACpD,MAAO,GAAIr7B,MAAMu2B,GAAQ,CACvB,MAAMvX,EAAuC,EACxCze,MAAMye,EAAEkX,aAAYqF,EAAiBvc,EAAEkX,WACvC31B,MAAMye,EAAEpS,UAASyuB,EAAcrc,EAAEpS,OACxC,MAAWzM,MAAMo2B,KACfgF,EAAsC,GAGxC,GAAIl7B,MAAMm2B,GAAQ,CAChB,MAAMtB,EAAgC,EAAQnf,MAAM,KACpDylB,EAAiBtG,EAAS,GAC1BoG,EAAcpG,EAAS7xB,OAAS,EAAI6xB,EAAS,GAAKoG,CACpD,MAAO,GAAIt7B,MAAMw2B,GAAQ,CACvB,MAAMrzB,EAAuC,EACxC5C,MAAM4C,EAAE+yB,aAAYsF,EAAiBr4B,EAAE+yB,WACvC31B,MAAM4C,EAAEyJ,UAAS0uB,EAAcn4B,EAAEyJ,OACxC,MAAWzM,MAAMq2B,KACfgF,EAAsC,GAGxC,MAAMC,EAAoB1G,gBAAgByF,EAASa,EAAaH,GAC1DQ,EAAoB3G,gBAAgByF,EAASc,EAAaJ,GAC1DvG,EAAS8G,EAAoB9X,EAAUwX,EACvCvG,EAAQ8G,EAAoB/X,EAAUyX,EACtCO,EAAuB5G,gBAAgByF,EAASe,EAAgBJ,EAAexG,EAAOC,GACtFgH,EAAuB7G,gBAAgByF,EAASgB,EAAgBL,EAAexG,EAAOC,GACtFiD,EAAc4D,EAAoB9X,EAASgY,EAC3C7D,EAAY4D,EAAoB/X,EAASiY,EACzCC,EAAc/D,EAAYD,EAChCnyB,KAAKkyB,QAAQ,GAAK8C,EAClBh1B,KAAKkyB,QAAQ,GAAK+C,EAClBj1B,KAAKie,OAASA,EACdje,KAAKmyB,YAAcA,EACnBnyB,KAAKoyB,UAAYA,EACjBpyB,KAAKqyB,SAAW8D,GAAe,EAAI,EAAIA,EACvCn2B,KAAKuyB,WAAa,CAACoD,EAAaC,EAAaC,EAAgBC,GAC7D91B,KAAKwyB,OAAS,CAACuD,EAAmBC,EAAmBC,EAAsBC,GACvErB,GACFA,EAAQ1iB,SAAQikB,GAAUA,EAAOx2B,WAE/BmV,GACFA,EAAOH,KAAKmgB,GAAY,GAEtB/0B,KAAK2uB,QACP3uB,KAAK6uB,OAET,CAEA,YAAA/B,GACE,MAAM/X,EAAS/U,KAAK+U,OACduO,EAAOtjB,KAAKsjB,KACZyN,EAAW/wB,KAAK+wB,SAChBC,EAAahxB,KAAKgxB,WAClBqF,EAAathB,IAAWgc,GAAYC,GACpC+B,EAAS/yB,KAAK4wB,WACdJ,EAAYxwB,KAAKwwB,UACjBqC,EAAS7yB,KAAK6yB,OACdyD,EAAWzD,GAAU7yB,KAAKmyB,YAC1BoE,EAAU1D,GAAU7yB,KAAKoyB,UACzBL,GAAYuE,IAAaC,EACzBC,EAAc3D,IAAW7yB,KAAKmyB,aAAeU,IAAW7yB,KAAKoyB,UAC7DJ,GAAchyB,KAAKiyB,YAAcuE,EACjC9D,EAAS1yB,KAAK2uB,QAAU3uB,KAAK0yB,OACnC,IAAI+D,GAAa,EACbC,GAAgB,EAChB95B,EAAIoD,KAAK5C,SAUb,GARIk5B,GAAYt2B,KAAKuD,QACnBvD,KAAKuD,OAAQ,GAGX3G,EAAI,IAAMoD,KAAKuD,QACjBvD,KAAKuD,OAAQ,GAGX8yB,EAAY,CACd,MAAMM,EAAK5hB,EAAO3X,SAClB,GAAI4zB,GAAcv2B,MAAMu2B,IACtB,GAAyB,EAAe,EAAG,CACzC,MACMn0B,EAAO85B,EAAK/5B,GAAW,IAANA,EADV,KAC2B+5B,EAAK/5B,IAAMA,GAAK,KAAO,EAC/DA,EAAIL,MAAMmoB,KAAKiS,EAAI/5B,EAAGK,YAAY,IAAK,GAAyB,IAAe,GAASJ,EAAM,EAChG,OACSk0B,IACTn0B,EAAIm0B,EAASn0B,IAEf65B,EAAa75B,IAAMoD,KAAKsyB,aACxBoE,EAAuB,IAAPC,EACZF,IAAeC,GAAkB1F,GAAc2F,GACjDnG,EAAU/C,WAAWxY,SAEzB,CAEA,GAAIyd,EAAQ,CACV,MAAM0D,EAASrD,EAASvC,EAAUpE,QAAUoE,EAAUrE,QACtDuG,EAAOtrB,MAAM2rB,EAAS,MAAQ,QAAUqD,EAAS,GAAK,IACxD,EAGKrE,IAAa/xB,KAAK+xB,UAAcC,IAAehyB,KAAKgyB,aAAehyB,KAAKiyB,cACvEF,IAAU/xB,KAAK+xB,UAAW,GACzB/xB,KAAKgyB,YAAehyB,KAAKiyB,WAanBF,IACT/xB,KAAKgyB,YAAa,IAbdU,GAAUX,IAAUW,EAAOtrB,MAAM8kB,OAAS,GAAGlsB,KAAKwwB,UAAUtE,UAChElsB,KAAKixB,YAAYjxB,MACjBA,KAAKuxB,QAAQvxB,MACTA,KAAK4yB,UACP5yB,KAAKqxB,oBAAoBrxB,MACzBA,KAAK2xB,gBAAgB3xB,QAErBA,KAAKmxB,mBAAmBnxB,MACxBA,KAAKyxB,eAAezxB,OAEtBA,KAAKiyB,YAAa,EACdD,IAAYhyB,KAAKgyB,YAAa,MAMlCD,IAAaA,GAAY/xB,KAAK+xB,YAChC0E,GAAa,GAGXA,IACEJ,GAAYthB,EAAOH,KAAKG,EAAO5c,SAAWyE,GAC9CoD,KAAKrH,SAASqH,QAGX+xB,GAAY/xB,KAAK+xB,WACpB/xB,KAAK+xB,UAAW,EAChB/xB,KAAKkxB,YAAYlxB,MACjBA,KAAKwxB,QAAQxxB,MACTA,KAAK4yB,UACP5yB,KAAKsxB,oBAAoBtxB,MACzBA,KAAK4xB,gBAAgB5xB,QAErBA,KAAKoxB,mBAAmBpxB,MACxBA,KAAK0xB,eAAe1xB,OAElBsjB,IAAS0N,IACX0F,GAAgB,IAIhB95B,GAAK,GAAKoD,KAAKuD,QAAUvD,KAAK6B,YAAcyhB,GAAQoT,IAAkBpT,KACpEA,GACFtjB,KAAK6xB,eAAe7xB,MAEtBA,KAAK6B,WAAY,IACX7B,KAAK2wB,SAAW5b,IAAa/U,KAAK2wB,QAAU5b,GAAUA,EAAOlT,YACjE7B,KAAKJ,UAILhD,EAAI,GAAKoD,KAAK6B,YAChB7B,KAAK6B,WAAY,GAGnB7B,KAAKsyB,aAAe11B,CACtB,CAEA,MAAAgD,GACE,GAAII,KAAK8xB,SAAU,OACnB,MAAMtB,EAAYxwB,KAAKwwB,UASvB,OARAxxB,YAAYwxB,EAAWxwB,MAClBwwB,EAAU5xB,OACb4xB,EAAU5wB,SAERI,KAAK2uB,QACP3uB,KAAK4uB,cAEP5uB,KAAK8xB,UAAW,EACT9xB,IACT,EAQF,MAAM42B,SAAW,CAACljB,EAAa,CAAC,IAAM,IAAIsc,eAAetc,GAKnDmjB,IAAah8B,MAAMi8B,OAASA,KAAKC,UACjCC,GAAW,aACXC,GAAW,SACXC,GAAqB,QACrBC,GAAgB,QAChBC,GAAW,OACXC,GAAW,OACXC,GAAW,OACXC,GAAW,YAcjB,IAAIC,GAAgB,KAEhBC,GAAoB,KACpBC,GAAiB,KAMrB,MAAMC,kBAAoBC,GACjBA,EAAIC,YACY,MAAhBD,EAAIE,SACJr9B,OAAOm9B,EAAIE,SAMdC,cAAgBnV,GAAOA,EAAIzb,aAAa,cAAe,QAOvD6wB,uBAAyB,CAACpV,EAAKhU,IAAS,IAAqBgU,EAAIjY,iBAAiB,SAASiE,gBAAmBA,YAAeA,QAE7HqpB,GAAc,CAAEC,KAAM,UAAWC,KAAM,UAAWC,KAAM,WAKxDC,oBAAsBzV,IAC1B,IAAKA,EAAI0V,oBAAsB1V,EAAI2V,YAAY9gB,OAAQ,CACrD,MAAM+gB,EAAU5V,EAAI6V,cACpB7V,EAAIoB,SACAwU,GAASH,oBAAoBG,EACnC,GASIE,mBAAqB,CAAC9V,EAAK+V,EAAWC,KAC1C,MAAMC,EAAejW,EAAI5U,aAAaupB,KACjB,OAAjBsB,IAA0BA,IAAiBF,GAA6B,OAAhB/V,EAAI1U,UAAkB0qB,EAAI1Q,IAAItF,GAC1F,IAAIllB,EAAIklB,EAAI0V,kBACZ,KAAO56B,KAAKg7B,mBAA8C9V,EAAIkW,SAASp7B,GAAKi7B,EAAWC,GACvF,OAAOA,CAAG,EAQNG,iBAAmB,CAACnqB,EAAM2O,EAAS,CAAC,KACxC,IAAIyb,EAAW,GACf,MAAMC,EAAct+B,MAAM4iB,EAAO2b,OAAS,WAAW3b,EAAO2b,SAAW,GACjEC,EAAYjsB,SAASqQ,EAAO6b,OAAO,GACnCC,EAAWnsB,SAASqQ,EAAOsI,MAAM,GACjCyT,EAAWD,GAAwB,IAAbA,EAAoB,OAASA,IAAWF,GAAY,OAGhF,GAFIE,IAAUL,GAAY,QAAQM,EAAW,oBAAoBA,MAAe,OAChFN,GAAY,QAAQC,IAAcE,EAAY,8BAAgC,WAAWvqB,WACrFuqB,EAAW,CAGbH,GAAY,uBACZA,GAAY,4CAFc,QAAdG,EAAsB,QAAwB,WAAdA,EAAyB,OAAS,YADnD,SAAdA,EAAuB,QAAwB,UAAdA,EAAwB,OAAS,yCAIjF,MACEH,GAAY,UAId,OAFAA,GAAY,UACRK,IAAUL,GAAY,WACnBA,CAAQ,EAeXO,oBAAsB,CAACC,EAAchsB,EAAOisB,EAAMC,EAAiB9qB,EAAMigB,EAAO8J,EAAWgB,EAAWC,KAC1G,MAAMC,EAASjrB,IAASwoB,GAClB0C,EAASlrB,IAAS0oB,GAClByC,EAAY,IAAInrB,KAChBoqB,EAAWp+B,MAAM4+B,GAAgBA,EAAaC,GAAQD,EACtDQ,EAAeH,EAAS,QAAU,eACxCnC,GAAe/C,UAAYqE,EACxBxjC,QAAQwhC,GAAU,aAAa+C,WAC/BvkC,QAAQyhC,GAAU,GAAG6C,EAASF,EAAYC,EAASlB,EAAYgB,KAClE,MAAMM,EAAWvC,GAAewC,QAC1BC,EAA4CF,EAA0B,kBACtEG,EAAoCH,EAAShH,cAAc,SAASrkB,OAAaurB,EACjFE,EAAsDJ,EAAStvB,iBAAiB,KAAKovB,KACrFO,EAAoBD,EAAa18B,OACvC,GAAI28B,EAAmB,CACrBH,EAAe/yB,MAAMmzB,QAAUP,EAC/BI,EAAOhzB,MAAMmzB,QAAUP,EACvBI,EAAOjzB,aAAaowB,GAAU,GAAGoB,KAC5BkB,IACHO,EAAOjzB,aAAa,YAAa,GAAGwyB,KAChCG,GAAQM,EAAOjzB,aAAa,YAAa,GAAGyyB,MAElD,IAAIl8B,EAAI48B,EACR,KAAO58B,KAAK,CACV,MAAM88B,EAAWH,EAAa38B,GACxB+8B,EAAiBD,EAAS/B,cAChCgC,EAAerzB,MAAMmzB,QAAUP,EAC3BH,EACFY,EAAe9F,UAAsC,EAAOA,UAE5D8F,EAAeC,aAAajB,EAAKje,WAAU,GAAOgf,EAEtD,CACAhtB,EAAM7T,KAAKygC,GACXV,EAAgB9d,YAAYqe,EAC9B,MACE9X,QAAQC,KAAK,mEAGf,OADIyM,IAAOsL,EAAe/yB,MAAMuzB,QAAU,cAAc1C,GAAYrpB,MAC7DurB,CAAc,EAOvB,MAAMS,aAKJ,WAAArgC,CAAY2M,EAAQwM,EAAa,CAAC,GAE3B8jB,KAAeA,GAAgBX,GAAY,IAAIA,GAAU,GAAI,CAAEgE,YAAaxD,KAAc,CAC7FS,QAAUgD,IACR,MAAMC,EAAW,GACXC,EAAQF,EAAKzqB,MAAM6mB,IACzB,IAAK,IAAIx5B,EAAI,EAAGiJ,EAAIq0B,EAAMr9B,OAAQD,EAAIiJ,EAAGjJ,IAAK,CAC5C,MAAMo6B,EAAUkD,EAAMt9B,GACtBq9B,EAASphC,KAAK,CACZm+B,UACAD,YAAaV,GAAcj8B,KAAK48B,IAEpC,CACA,OAAOiD,CAAQ,IAGdtD,KAAmBA,GAAoBZ,GAAY,IAAIA,GAAU,GAAI,CAAEgE,YAAa,aAAgB,CACvG/C,QAASgD,GAAQ,IAAIA,GAAMxkC,KAAI8hC,IAAQ,CAAGN,QAASM,SAEhDV,IAAkB3iC,IAAW2iC,GAAiBxiC,EAAIg5B,cAAc,aACjEl1B,EAAMC,SAASD,EAAMC,QAAQ2a,SAAS5T,MAC1C,MAAM,MAAEg7B,EAAK,MAAEC,EAAK,MAAEC,EAAK,WAAEC,EAAU,cAAEC,EAAa,MAAEvM,GAAUnb,EAC5DohB,GAAsC5tB,EAAS/M,EAAM+M,GAAUA,EAAO,GAAKA,IAA8B,EAAS6E,SAAW7E,GAAUwD,YAAYxD,IAAW,IAAI,GAClKm0B,GAAuB,IAAVH,EAAiB,CAAC,EAAIA,EACnCI,GAAuB,IAAVN,GAAkBngC,MAAMmgC,GAAS,CAAC,EAAIA,EACnDO,GAAuB,IAAVN,EAAiB,CAAC,EAAIA,EACzCj7B,KAAK6uB,MAAQ3hB,SAAS2hB,GAAO,GAC7B7uB,KAAKo7B,cAAgBluB,SAASkuB,GAAe,GAC7Cp7B,KAAKm7B,WAAajuB,SAASiuB,GAAY,GACvCn7B,KAAKw7B,UAAYH,IAAgBC,IAAeC,EAEhDv7B,KAAKy7B,aAAenhC,MAAM+gC,GAActC,iBAAiB3B,GAA4C,GAAgBiE,EAErHr7B,KAAK07B,aAAephC,MAAMghC,IAAet7B,KAAKw7B,UAAYzC,iBAAiB1B,GAA4C,GAAgBiE,EAEvIt7B,KAAK27B,aAAerhC,MAAMihC,GAAcxC,iBAAiBzB,GAA4C,GAAgBiE,EACrHv7B,KAAK80B,QAAUA,EACf90B,KAAK47B,KAAO9G,GAAWA,EAAQH,UAC/B30B,KAAKk7B,MAAQ,GACbl7B,KAAKg7B,MAAQ,GACbh7B,KAAKi7B,MAAQ,GACbj7B,KAAK67B,QAAU,GACf77B,KAAK87B,gBAAkB,GACvB97B,KAAK+7B,MAAQ,KACb/7B,KAAKg8B,OAAQ,EACbh8B,KAAK8b,MAAQ,EACb9b,KAAKi8B,cAAgB,KACrB,MAAMC,YAAc,IAAMl8B,KAAK47B,OAASP,GAAcC,GAAcC,IAAev7B,KAAKqQ,QAExFrQ,KAAK4tB,eAAiB,IAAIC,gBAAe,KAEvCsO,aAAan8B,KAAKi8B,eAClBj8B,KAAKi8B,cAAgBG,YAAW,KAC9B,MAAMC,EAAyC,EAAUrgB,YACrDqgB,IAAiBr8B,KAAK8b,QAC1B9b,KAAK8b,MAAQugB,EACbH,cAAa,GACZ,IAAI,IAGLl8B,KAAKy7B,eAAiBz7B,KAAKg8B,MAC7B9mC,EAAIonC,MAAMN,MAAMrmB,KAAKumB,aAErBA,cAEFpH,EAAU90B,KAAK4tB,eAAeE,QAAQgH,GAAW3S,QAAQC,KAAK,iCAChE,CAMA,SAAAma,CAAU1T,GACR,IAAKjuB,MAAMiuB,GAAS,OAAO1G,QAAQC,KAAK,kCACxC,MAAMoa,EAAoBn9B,kBAAkBwpB,GAG5C,OAFA7oB,KAAK67B,QAAQliC,KAAK6iC,GACdx8B,KAAKg8B,QAAOh8B,KAAK87B,gBAAgB97B,KAAK67B,QAAQl+B,OAAS,GAAK6+B,EAAkBx8B,OAC3EA,IACT,CAEA,MAAAJ,GAOE,OANAu8B,aAAan8B,KAAKi8B,eAClBj8B,KAAKk7B,MAAMv9B,OAASqC,KAAKg7B,MAAMr9B,OAASqC,KAAKi7B,MAAMt9B,OAAS,EAC5DqC,KAAK4tB,eAAe6O,aAEpBz8B,KAAK87B,gBAAgB3pB,SAAQtS,GAAWjF,MAAMiF,GAAWA,EAAQG,MAAQH,EAAQD,QAAUC,EAAQD,WACnGI,KAAK80B,QAAQH,UAAY30B,KAAK47B,KACvB57B,IACT,CAMA,SAAA08B,CAAUjD,GACR,MAAMiC,EAAe17B,KAAK07B,aACpBC,EAAe37B,KAAK27B,aACpBP,EAAgBp7B,KAAKo7B,cACrBvM,EAAQ7uB,KAAK6uB,MACb9iB,EAAW0tB,EAAK1tB,SACtB,GAAiB,IAAbA,EAAgB,CAClB,MAAM4wB,EAAWlD,EAAKmD,UAEtB,GAAID,EAASllB,OAAQ,CACnB,MAAMolB,EAAY,GACZ7B,EAAQh7B,KAAKg7B,MACbC,EAAQj7B,KAAKi7B,MACb6B,EAAetF,GAAcM,QAAQ6E,GACrCI,EAAiB7nC,EAAI8nC,yBAC3B,IAAIC,EAAU,KACd,IAAK,MAAMC,KAAeJ,EAAc,CACtC,MAAMhF,EAAUoF,EAAYpF,QACtBD,EAAaF,kBAAkBuF,GAErC,IAAKD,GAAYpF,GAAeoF,GAAYtF,kBAAkBsF,GAC5DJ,EAAUljC,KAAKm+B,OACV,CAEL,MAAMqF,EAAgBN,EAAUl/B,OAAS,EACxBk/B,EAAUM,GACbpvB,SAAS,MAAS+pB,EAAQ/pB,SAAS,KAG/C8uB,EAAUljC,KAAKm+B,GAFf+E,EAAUM,IAAkBrF,CAIhC,CACAmF,EAAUC,CACZ,CAEA,IAAK,IAAIx/B,EAAI,EAAGiJ,EAAIk2B,EAAUl/B,OAAQD,EAAIiJ,EAAGjJ,IAAK,CAChD,MAAMy6B,EAAO0E,EAAUn/B,GACvB,GAAKy6B,EAAK1gB,OAIH,CACL,MAAM2lB,EAAWP,EAAUn/B,EAAI,GACzB2/B,EAAwBjC,GAAiBgC,IAAaA,EAAS3lB,OAC/D6lB,EAAgBnF,EAChBoF,EAAe5B,EAAelE,GAAkBK,QAAQwF,GAAiB,KACzEE,EAAiB7B,EAAezmC,EAAI8nC,yBAA2B9nC,EAAIuoC,eAAeJ,EAAwBlF,EAAO,IAASA,GAChI,GAAIwD,EAAc,CAChB,MAAM+B,EAAoB,IAAIH,GAC9B,IAAK,IAAI72B,EAAI,EAAG2E,EAAKqyB,EAAkB//B,OAAQ+I,EAAI2E,EAAI3E,IAAK,CAC1D,MAAMi3B,EAAcD,EAAkBh3B,GAGhCk3B,EAFal3B,IAAM2E,EAAK,GAECgyB,EAAwBM,EAAY7F,QAAU,IAAS6F,EAAY7F,QAC5F+F,EAAY3oC,EAAIuoC,eAAeG,GACrCrE,oBAAoBoC,EAAcV,EAAO4C,EAA0C,EAAkBvG,GAAUzI,GAAQ,EAAGmM,EAAMr9B,OAAQs9B,EAAMt9B,OAChJ,CACF,CACI+9B,EACFnC,oBAAoBmC,EAAcV,EAAOwC,EAAgBT,EAAgB1F,GAAUxI,GAAQ,EAAGmM,EAAMr9B,OAAQs9B,EAAMt9B,QAEzGg+B,EACToB,EAAenhB,YAAY4hB,GAE3BT,EAAenhB,YAAY1mB,EAAIuoC,eAAetF,IAG5CkF,GAAuB3/B,GAC7B,KA/BkB,CAEhB,GAAIA,GAAK09B,EAAe,SACxB2B,EAAenhB,YAAY1mB,EAAIuoC,eAAetF,GAChD,CA4BF,CACAsB,EAAKhe,WAAWif,aAAaqC,EAAgBtD,EAC/C,CACF,MAAO,GAAiB,IAAb1tB,EAAgB,CAEzB,MAAM+xB,EAAuC,IAAsBrE,EAAe,YAClF,IAAK,IAAI/7B,EAAI,EAAGiJ,EAAIm3B,EAAWngC,OAAQD,EAAIiJ,EAAGjJ,IAAKsC,KAAK08B,UAAUoB,EAAWpgC,GAC/E,CACF,CAMA,KAAA2S,CAAM0tB,GAAa,GACjB,MAAMnb,EAAM5iB,KAAK80B,QACXkJ,IAAah+B,KAAK+7B,QAAUgC,EAC5BtC,EAAez7B,KAAKy7B,aACpBC,EAAe17B,KAAK07B,aACpBC,EAAe37B,KAAK27B,aACpBsC,EAAkC,YAArB/oC,EAAIonC,MAAM4B,OACvBC,EAAgB1C,GAAgBwC,EACtCj+B,KAAKg8B,OAASP,GAAgBwC,GAC1BE,GAAiBJ,IAEnB/9B,KAAK87B,gBAAgB3pB,SAAQtS,GAAWjF,MAAMiF,IAAYA,EAAQG,QAE/Dg+B,IACCD,IACFnb,EAAI+R,UAAY30B,KAAK47B,KACrB57B,KAAKg7B,MAAMr9B,OAASqC,KAAKi7B,MAAMt9B,OAAS,GAE1CqC,KAAK08B,UAAU9Z,GACf5iB,KAAK+7B,MAAQnZ,EAAI+R,WAEfwJ,IACEH,IAAUpb,EAAI+R,UAAY30B,KAAK+7B,OACnC/7B,KAAKk7B,MAAMv9B,OAAS,EAChB+9B,IAAc17B,KAAKg7B,MAAQhD,uBAAuBpV,EAAKyU,MAGzDsE,IAAiBwC,GAAiBzC,KACpC17B,KAAKi7B,MAAQjD,uBAAuBpV,EAAK0U,KAG3C,MAAM8G,EAAgBp+B,KAAKg7B,MAAMr9B,OAASqC,KAAKg7B,MAAQh7B,KAAKi7B,MAC5D,IAAI1rB,EAAG8uB,EAAa,EACpB,IAAK,IAAI3gC,EAAI,EAAGiJ,EAAIy3B,EAAczgC,OAAQD,EAAIiJ,EAAGjJ,IAAK,CACpD,MAAMklB,EAAMwb,EAAc1gC,IACpB,IAAEuuB,EAAG,OAAEF,GAAWnJ,EAAI8L,wBACxBnf,GAAK0c,EAAM1c,EAAa,GAATwc,GAAasS,IAChCzb,EAAIzb,aAAaowB,GAAU,GAAG8G,KAC9B,MAAMC,EAAS1b,EAAIjY,iBAAiB,IAAI4sB,OACxC,IAAItmB,EAAIqtB,EAAO3gC,OACf,KAAOsT,KAAKqtB,EAAOrtB,GAAG9J,aAAaowB,GAAU,GAAG8G,KAChD9uB,EAAI0c,CACN,CACA,GAAIkS,EAAe,CACjB,MAAMI,EAAgBrpC,EAAI8nC,yBACpBwB,EAAU,IAAIC,IACdC,EAAS,GACf,IAAK,IAAI/F,EAAY,EAAGA,EAAY0F,EAAa,EAAG1F,IAAa,CAC/D,MAAMgG,EAAoC/b,EAAIpH,WAAU,GACxDkd,mBAAmBiG,EAAQhG,EAAW,IAAI8F,KAAOtsB,SAAQyQ,IACvD,MAAM4V,EAAU5V,EAAI6V,cAChBD,GAASgG,EAAQtW,IAAIsQ,GACzB5V,EAAIoB,QAAQ,IAEd0a,EAAO/kC,KAAKglC,EACd,CACAH,EAAQrsB,QAAQkmB,qBAChB,IAAK,IAAIuG,EAAa,EAAGC,EAAeH,EAAO/gC,OAAQihC,EAAaC,EAAcD,IAChFrF,oBAAoBkC,EAAcz7B,KAAKk7B,MAAOwD,EAAOE,GAAaL,EAAenH,GAAUp3B,KAAK6uB,MAAO+P,GAEzGhc,EAAI+R,UAAY,GAChB/R,EAAIhH,YAAY2iB,GACZ7C,IAAc17B,KAAKg7B,MAAQhD,uBAAuBpV,EAAKyU,KACvDsE,IAAc37B,KAAKi7B,MAAQjD,uBAAuBpV,EAAK0U,IAC7D,CAEA,GAAIt3B,KAAKw7B,UAAW,CAClB,MAAMR,EAAQh7B,KAAKg7B,MACnB,IAAIhH,EAAIgH,EAAMr9B,OACd,KAAOq2B,KAAK,CACV,MAAM8K,EAAQ9D,EAAMhH,GACpB8K,EAAMC,YAAYD,EAAMvG,YAC1B,CACAyC,EAAMr9B,OAAS,CACjB,CACA,GAAIqC,KAAKm7B,aAAegD,IAAkBH,GAAW,CACnD,MAAMgB,EAAc9pC,EAAIg5B,cAAc,QAEtC8Q,EAAY53B,MAAM6sB,QAAU,qHAE5B+K,EAAYrK,UAAY30B,KAAK47B,KAC7BhZ,EAAIqc,aAAaD,EAAapc,EAAIsc,YAClCl/B,KAAKk7B,MAAM/oB,QAAQ4lB,eACnB/3B,KAAKg7B,MAAM7oB,QAAQ4lB,eACnB/3B,KAAKi7B,MAAM9oB,QAAQ4lB,cACrB,CAKA,OAJA/3B,KAAK8b,MAAkC,EAAME,aACzCmiB,GAAiBJ,IACnB/9B,KAAK67B,QAAQ1pB,SAAQ,CAAC0W,EAAQnrB,IAAMsC,KAAK87B,gBAAgBp+B,GAAKmrB,EAAO7oB,QAEhEA,IACT,CAEA,OAAAqiB,GACEriB,KAAKqQ,OAAM,EACb,EAQF,MAEM,qBAFQ,CAACnJ,EAAQwM,IAAe,IAAIknB,aAAa1zB,EAAQwM,GCz+P/D,IAAMyrB,GAAW,gBAAgBjkC,KAAKkkC,UAAUC,WCRhD,SAASC,SAASzlC,GAChB,MAAsB,iBAARA,GAAoBA,aAAe0lC,MACnD,CAGA,SAASC,SAASC,GAChB,IAAIC,EACJ,MAAsB,iBAARD,GAA2B,MAAPA,GAAkH,YAA3F,MAAPA,GAAuD,OAAvCC,EAAmBD,EAAIllC,kBAAuB,EAASmlC,EAAiBtlB,KAC5I,CACA,SAASulB,KAAKF,EAAKljB,GACjB,OAAIniB,MAAMC,QAAQkiB,GAAcojB,KAAKF,GAAK,CAAC3d,EAAGtW,IAAM+Q,EAAKxO,SAASvC,KAC3DhR,OAAOolC,QAAQH,GAAK9oC,QAAO,CAACkpC,EAAKC,KACtC,IAAKt0B,EAAG3U,GAAKipC,EAEb,OADIvjB,EAAK1lB,EAAG2U,KAAIq0B,EAAIr0B,GAAK3U,GAClBgpC,CAAG,GACT,CAAC,EACN,CAGA,MAAME,GACE,OADFA,GAEE,OAFFA,GAGQ,aAHRA,GAIG,QAJHA,GAKS,cAiBf,SAASC,aAAanmC,GACpB,OAAOA,EAAIrE,QAAQ,4BAA6B,OAClD,CAGA,SAASyqC,eAAe35B,EAAG1P,GACzB,GAAIA,IAAM0P,EAAG,OAAO,EACpB,MAAM45B,EAAO9lC,MAAMC,QAAQzD,GACzBupC,EAAO/lC,MAAMC,QAAQiM,GACvB,IAAI5I,EACJ,GAAIwiC,GAAQC,EAAM,CAChB,GAAIvpC,EAAE+G,QAAU2I,EAAE3I,OAAQ,OAAO,EACjC,IAAKD,EAAI,EAAGA,EAAI9G,EAAE+G,OAAQD,IAAK,IAAKuiC,eAAerpC,EAAE8G,GAAI4I,EAAE5I,IAAK,OAAO,EACvE,OAAO,CACT,CACA,GAAIwiC,GAAQC,EAAM,OAAO,EACzB,GAAIvpC,GAAK0P,GAAkB,iBAAN1P,GAA+B,iBAAN0P,EAAgB,CAC5D,MAAM85B,EAAQxpC,aAAasD,KACzBmmC,EAAQ/5B,aAAapM,KACvB,GAAIkmC,GAASC,EAAO,OAAOzpC,EAAE0pC,WAAah6B,EAAEg6B,UAC5C,GAAIF,GAASC,EAAO,OAAO,EAC3B,MAAME,EAAU3pC,aAAa4pC,OAC3BC,EAAUn6B,aAAak6B,OACzB,GAAID,GAAWE,EAAS,OAAO7pC,EAAE8pC,YAAcp6B,EAAEo6B,WACjD,GAAIH,GAAWE,EAAS,OAAO,EAC/B,MAAMlkB,EAAO/hB,OAAO+hB,KAAK3lB,GAGzB,IAAK8G,EAAI,EAAGA,EAAI6e,EAAK5e,OAAQD,IAAK,IAAKlD,OAAOmmC,UAAUrlC,eAAeytB,KAAKziB,EAAGiW,EAAK7e,IAAK,OAAO,EAChG,IAAKA,EAAI,EAAGA,EAAI6e,EAAK5e,OAAQD,IAAK,IAAKuiC,eAAe35B,EAAEiW,EAAK7e,IAAK9G,EAAE2lB,EAAK7e,KAAM,OAAO,EACtF,OAAO,CACT,CAAO,SAAI9G,IAAK0P,GAAkB,mBAAN1P,GAAiC,mBAAN0P,IAC9C1P,EAAE8pC,aAAep6B,EAAEo6B,UAG9B,CC1EA,MAAME,cASJ,WAAArmC,CAAYsmC,GAIV,IAHArmC,OAAOsmC,OAAO9gC,KAAM6gC,GAGb7gC,KAAK2F,MAAMuJ,MAAM,EAAGlP,KAAK+gC,kBAAoB/gC,KAAKghC,SAAS9xB,MAAM,EAAGlP,KAAK+gC,mBAC5E/gC,KAAKihC,aAAa/jC,MAEtB,GAAI8C,KAAKkhC,cAEP,KAAOlhC,KAAK2F,MAAMuJ,MAAMlP,KAAKmhC,aAAenhC,KAAKghC,SAAS9xB,MAAMlP,KAAKihC,aAAa9jC,MAC5E6C,KAAK2F,MAAMhI,OAASqC,KAAKmhC,UAAYnhC,KAAKghC,SAASrjC,OAASqC,KAAKihC,aAAa9jC,MAAO6C,KAAKihC,aAAa9jC,MAAW6C,KAAKmhC,SAGjI,CAGA,kBAAIJ,GACF,OAAOrlC,KAAKe,IAAIuD,KAAKmhC,UAAWnhC,KAAKihC,aAAa/jC,MACpD,CAGA,iBAAIgkC,GACF,OAAOlhC,KAAKmhC,UAAYnhC,KAAK+gC,cAC/B,CAGA,YAAIK,GACF,OAAOphC,KAAK2F,MAAM07B,OAAOrhC,KAAK+gC,eAAgB/gC,KAAKkhC,cACrD,CAGA,gBAAII,GAEF,OAAO5lC,KAAKS,IAAI6D,KAAKihC,aAAa9jC,IAAM6C,KAAK+gC,gBAE7C/gC,KAAKghC,SAASrjC,OAASqC,KAAK2F,MAAMhI,OAAQ,EAC5C,CAGA,WAAI4jC,GACF,OAAOvhC,KAAKghC,SAASK,OAAOrhC,KAAK+gC,eAAgB/gC,KAAKshC,aACxD,CAGA,QAAIE,GACF,OAAOxhC,KAAK2F,MAAM87B,UAAU,EAAGzhC,KAAK+gC,eACtC,CAGA,QAAIW,GACF,OAAO1hC,KAAK2F,MAAM87B,UAAUzhC,KAAK+gC,eAAiB/gC,KAAKkhC,cACzD,CAGA,mBAAIS,GACF,OAAK3hC,KAAKshC,cAAgBthC,KAAKkhC,cAAsBnB,GAG7C//B,KAAKihC,aAAa9jC,MAAQ6C,KAAKmhC,WAAanhC,KAAKihC,aAAa/jC,QAAU8C,KAAKmhC,WAErFnhC,KAAKihC,aAAa9jC,MAAQ6C,KAAKihC,aAAa/jC,MAA0B6iC,GAAlBA,EACtD,ECxEF,SAAS6B,MAAM/zB,EAAIgzB,GAEjB,OAAO,IAAIe,MAAMC,UAAUh0B,EAAIgzB,EACjC,CC2BA,SAASiB,YAAYC,GACnB,GAAY,MAARA,EAAc,MAAM,IAAIC,MAAM,mCAClC,OAAID,aAAgBvB,OAAeoB,MAAMK,aACrC3C,SAASyC,GAAcH,MAAMM,cAC7BH,IAAS7nC,KAAa0nC,MAAMO,WAC5BJ,IAAS3xB,OAAewxB,MAAMQ,aAC9BhoC,MAAMC,QAAQ0nC,IAASA,IAAS3nC,MAAcwnC,MAAMS,cACpDT,MAAMU,QAAUP,EAAKpB,qBAAqBiB,MAAMU,OAAeP,EAC/DH,MAAMU,QAAUP,aAAgBH,MAAMU,OAAeP,EAAKxnC,YAC1DwnC,aAAgBQ,SAAiBX,MAAMY,gBAC3CrgB,QAAQC,KAAK,0BAA2B2f,GACjCH,MAAMU,OACf,CACA,SAASG,cAAc5B,GACrB,IAAKA,EAAM,MAAM,IAAImB,MAAM,0BAC3B,GAAIJ,MAAMU,OAAQ,CAChB,GAAIzB,EAAKF,qBAAqBiB,MAAMU,OAAQ,MAAO,CACjDP,KAAMlB,GAQR,MAAM,KACJkB,KACGW,GACD7B,aAAgBe,MAAMU,OAAS,CACjCP,KAAMlB,GACJrB,SAASqB,IAASA,EAAKkB,gBAAgBH,MAAMU,OAASzB,EAAO,CAAC,EAClE,GAAIkB,EAAM,CACR,MAAMY,EAAQZ,EAAKA,KACnB,MAAO,IACFpC,KAAKoC,GAAM,CAACjgB,EAAGtW,KAAOA,EAAEo3B,WAAW,OACtCb,KAAMA,EAAKxnC,YACXooC,WACGD,EAEP,CACF,CACA,OAAKlD,SAASqB,GAGP,IACFA,GAJuB,CAC1BkB,KAAMlB,EAKV,CA4BA,SAASgC,WAAWhC,GAClB,GAAIe,MAAMU,QAAUzB,aAAgBe,MAAMU,OAAQ,OAAOzB,EACzD,MAAMiC,EAAQL,cAAc5B,GACtBkC,EAAcjB,YAAYgB,EAAMf,MACtC,IAAKgB,EAAa,MAAM,IAAIf,MAAM,+CAAiDc,EAAMf,KAAO,4EAMhG,OALIe,EAAMf,OAASgB,UAAoBD,EAAMf,KACzCe,EAAMH,QACRG,EAAMf,KAAOe,EAAMH,aACZG,EAAMH,OAER,IAAII,EAAYD,EACzB,CACAlB,MAAMiB,WAAaA,WCnHnB,MAAMG,YAQJ,kBAAIC,GACF,IAAI/lC,EACJ,IACEA,EAAQ8C,KAAKkjC,qBACf,CAAE,MAAO,CACT,OAAgB,MAAThmC,EAAgBA,EAAQ8C,KAAK2F,MAAMhI,MAC5C,CAGA,gBAAIwlC,GACF,IAAIhmC,EACJ,IACEA,EAAM6C,KAAKojC,mBACb,CAAE,MAAO,CACT,OAAc,MAAPjmC,EAAcA,EAAM6C,KAAK2F,MAAMhI,MACxC,CAGA,MAAA0lC,CAAOnmC,EAAOC,GACZ,GAAa,MAATD,GAAwB,MAAPC,IAAeD,IAAU8C,KAAKijC,gBAAkB9lC,IAAQ6C,KAAKmjC,cAClF,IACEnjC,KAAKsjC,cAAcpmC,EAAOC,EAC5B,CAAE,MAAO,CACX,CAGA,YAAIomC,GACF,OAAO,CACT,EAOF3B,MAAMoB,YAAcA,YCvCpB,MAAMQ,wBAAwBR,YAG5B,WAAAzoC,CAAYkpC,GACVv6B,QACAlJ,KAAKyjC,MAAQA,EACbzjC,KAAK0jC,WAAa1jC,KAAK0jC,WAAWC,KAAK3jC,MACvCA,KAAK4jC,SAAW5jC,KAAK4jC,SAASD,KAAK3jC,MACnCA,KAAK6jC,eAAiB7jC,KAAK6jC,eAAeF,KAAK3jC,MAC/CA,KAAK8jC,kBAAoB9jC,KAAK8jC,kBAAkBH,KAAK3jC,KACvD,CACA,eAAI+jC,GACF,IAAIC,EAAuBC,EAAwBC,EACnD,OAAkK,OAA1JF,EAA6F,OAApEC,GAA0BC,EAAclkC,KAAKyjC,OAAOU,kBAAuB,EAASF,EAAuBlb,KAAKmb,IAAwBF,EAAwB7uC,QACnM,CAGA,YAAIouC,GACF,OAAOvjC,KAAKyjC,QAAUzjC,KAAK+jC,YAAYK,aACzC,CAGA,UAAAC,CAAWC,GACTtkC,KAAKyjC,MAAMh5B,iBAAiB,UAAWzK,KAAK0jC,YAC5C1jC,KAAKyjC,MAAMh5B,iBAAiB,QAASzK,KAAK4jC,UAC1C5jC,KAAKyjC,MAAMh5B,iBAAiB,cAAezK,KAAK6jC,gBAChD7jC,KAAKyjC,MAAMh5B,iBAAiB,iBAAkBzK,KAAK8jC,mBACnD9jC,KAAKyjC,MAAMh5B,iBAAiB,OAAQ65B,EAASC,MAC7CvkC,KAAKyjC,MAAMh5B,iBAAiB,QAAS65B,EAASE,OAC9CxkC,KAAKyjC,MAAMh5B,iBAAiB,QAAS65B,EAASG,OAC9CzkC,KAAKyjC,MAAMh5B,iBAAiB,OAAQ65B,EAASI,QAC7C1kC,KAAK2kC,UAAYL,CACnB,CACA,UAAAZ,CAAWpqB,GACT,OAAItZ,KAAK2kC,UAAUC,OAtCT,KAsCkBtrB,EAAEurB,SAAqBvrB,EAAEwrB,WAAaxrB,EAAEyrB,SAAWzrB,EAAE0rB,UArCvE,KAqCmF1rB,EAAEurB,SAAqBvrB,EAAE0rB,UACpH1rB,EAAE2rB,iBACKjlC,KAAK2kC,UAAUC,KAAKtrB,IAEzBtZ,KAAK2kC,UAAUO,MA1CT,KA0CiB5rB,EAAEurB,UAAsBvrB,EAAEyrB,SAAWzrB,EAAE0rB,UAChE1rB,EAAE2rB,iBACKjlC,KAAK2kC,UAAUO,KAAK5rB,SAExBA,EAAE6rB,aAAanlC,KAAK2kC,UAAUS,gBAAgB9rB,GACrD,CACA,cAAAuqB,CAAevqB,GACb,MAAoB,gBAAhBA,EAAE+rB,WAA+BrlC,KAAK2kC,UAAUO,MAClD5rB,EAAE2rB,iBACKjlC,KAAK2kC,UAAUO,KAAK5rB,IAET,gBAAhBA,EAAE+rB,WAA+BrlC,KAAK2kC,UAAUC,MAClDtrB,EAAE2rB,iBACKjlC,KAAK2kC,UAAUC,KAAKtrB,SAF7B,CAIF,CACA,iBAAAwqB,CAAkBxqB,GAChBtZ,KAAK2kC,UAAUlB,MAAMnqB,EACvB,CACA,QAAAsqB,CAAStqB,GACFA,EAAE6rB,aAAanlC,KAAK2kC,UAAUlB,MAAMnqB,EAC3C,CAGA,YAAAgsB,GACEtlC,KAAKyjC,MAAMnY,oBAAoB,UAAWtrB,KAAK0jC,YAC/C1jC,KAAKyjC,MAAMnY,oBAAoB,QAAStrB,KAAK4jC,UAC7C5jC,KAAKyjC,MAAMnY,oBAAoB,cAAetrB,KAAK6jC,gBACnD7jC,KAAKyjC,MAAMnY,oBAAoB,iBAAkBtrB,KAAK8jC,mBACtD9jC,KAAKyjC,MAAMnY,oBAAoB,OAAQtrB,KAAK2kC,UAAUJ,MACtDvkC,KAAKyjC,MAAMnY,oBAAoB,QAAStrB,KAAK2kC,UAAUH,OACvDxkC,KAAKyjC,MAAMnY,oBAAoB,QAAStrB,KAAK2kC,UAAUF,OACvDzkC,KAAKyjC,MAAMnY,oBAAoB,OAAQtrB,KAAK2kC,UAAUD,QACtD1kC,KAAK2kC,UAAY,CAAC,CACpB,EAEF/C,MAAM4B,gBAAkBA,gBC5ExB,MAAM+B,6BAA6B/B,gBAGjC,WAAAjpC,CAAYkpC,GACVv6B,MAAMu6B,GACNzjC,KAAKyjC,MAAQA,CACf,CAGA,yBAAIP,GACF,OAAoC,MAA7BljC,KAAKyjC,MAAMR,eAAyBjjC,KAAKyjC,MAAMR,eAAiBjjC,KAAK2F,MAAMhI,MACpF,CAGA,uBAAIylC,GACF,OAAOpjC,KAAKyjC,MAAMN,YACpB,CAGA,aAAAG,CAAcpmC,EAAOC,GACnB6C,KAAKyjC,MAAM+B,kBAAkBtoC,EAAOC,EACtC,CACA,SAAIwI,GACF,OAAO3F,KAAKyjC,MAAM99B,KACpB,CACA,SAAIA,CAAMA,GACR3F,KAAKyjC,MAAM99B,MAAQA,CACrB,EAEFi8B,MAAM4B,gBAAkBA,gBC9BxB,MAAMiC,uCAAuCjC,gBAE3C,yBAAIN,GACF,MAAMhqC,EAAO8G,KAAK+jC,YACZ2B,EAAYxsC,EAAKysC,cAAgBzsC,EAAKysC,eACtCC,EAAeF,GAAaA,EAAUE,aACtCC,EAAcH,GAAaA,EAAUG,YAC3C,OAAmB,MAAfA,GAAuC,MAAhBD,GAAwBA,EAAeC,EACzDD,EAEFC,CACT,CAGA,uBAAIzC,GACF,MAAMlqC,EAAO8G,KAAK+jC,YACZ2B,EAAYxsC,EAAKysC,cAAgBzsC,EAAKysC,eACtCC,EAAeF,GAAaA,EAAUE,aACtCC,EAAcH,GAAaA,EAAUG,YAC3C,OAAmB,MAAfA,GAAuC,MAAhBD,GAAwBA,EAAeC,EACzDD,EAEFC,CACT,CAGA,aAAAvC,CAAcpmC,EAAOC,GACnB,IAAK6C,KAAK+jC,YAAY+B,YAAa,OACnC,MAAMC,EAAQ/lC,KAAK+jC,YAAY+B,cAC/BC,EAAMC,SAAShmC,KAAKyjC,MAAMvE,YAAcl/B,KAAKyjC,MAAOvmC,GACpD6oC,EAAME,OAAOjmC,KAAKyjC,MAAMyC,WAAalmC,KAAKyjC,MAAOtmC,GACjD,MAAMjE,EAAO8G,KAAK+jC,YACZ2B,EAAYxsC,EAAKysC,cAAgBzsC,EAAKysC,eACxCD,IACFA,EAAUS,kBACVT,EAAUU,SAASL,GAEvB,CAGA,SAAIpgC,GACF,OAAO3F,KAAKyjC,MAAMlL,aAAe,EACnC,CACA,SAAI5yB,CAAMA,GACR3F,KAAKyjC,MAAMlL,YAAc5yB,CAC3B,EAEFi8B,MAAM6D,+BAAiCA,+BCnDvC,MAAMY,aACJ,WAAA9rC,GACEyF,KAAKsmC,OAAS,GACdtmC,KAAKmrB,aAAe,CACtB,CACA,gBAAIob,GACF,OAAOvmC,KAAKsmC,OAAOtmC,KAAKmrB,aAC1B,CACA,WAAIqb,GACF,OAA8B,IAAvBxmC,KAAKsmC,OAAO3oC,MACrB,CACA,IAAAhE,CAAK8sC,GAECzmC,KAAKmrB,aAAenrB,KAAKsmC,OAAO3oC,OAAS,IAAGqC,KAAKsmC,OAAO3oC,OAASqC,KAAKmrB,aAAe,GACzFnrB,KAAKsmC,OAAO3sC,KAAK8sC,GACbzmC,KAAKsmC,OAAO3oC,OAAS0oC,aAAaK,YAAY1mC,KAAKsmC,OAAO9nB,QAC9Dxe,KAAKmrB,aAAenrB,KAAKsmC,OAAO3oC,OAAS,CAC3C,CACA,EAAAgpC,CAAG9vB,GAED,OADA7W,KAAKmrB,aAAezvB,KAAKe,IAAIf,KAAKS,IAAI6D,KAAKmrB,aAAetU,EAAO,GAAI7W,KAAKsmC,OAAO3oC,OAAS,GACnFqC,KAAKumC,YACd,CACA,IAAArB,GACE,OAAOllC,KAAK2mC,IAAI,EAClB,CACA,IAAA/B,GACE,OAAO5kC,KAAK2mC,GAAG,EACjB,CACA,KAAAC,GACE5mC,KAAKsmC,OAAO3oC,OAAS,EACrBqC,KAAKmrB,aAAe,CACtB,EAEFkb,aAAaK,WAAa,IC0T1B9E,MAAMC,UAhVN,MAAMA,UAOJ,WAAAtnC,CAAYsT,EAAIgzB,GACd7gC,KAAK6N,GAAKA,aAAcm1B,YAAcn1B,EAAKA,EAAGg5B,mBAAoC,UAAfh5B,EAAGK,SAAsC,aAAfL,EAAGK,QAAyB,IAAIu3B,+BAA+B53B,GAAM,IAAI03B,qBAAqB13B,GAC3L7N,KAAK8mC,OAASjE,WAAWhC,GACzB7gC,KAAK+mC,WAAa,CAAC,EACnB/mC,KAAK+G,OAAS,GACd/G,KAAKgnC,eAAiB,GACtBhnC,KAAKinC,eAAiB,GACtBjnC,KAAKknC,QAAU,IAAIb,aACnBrmC,KAAKmnC,eAAiBnnC,KAAKmnC,eAAexD,KAAK3jC,MAC/CA,KAAK4jC,SAAW5jC,KAAK4jC,SAASD,KAAK3jC,MACnCA,KAAKonC,UAAYpnC,KAAKonC,UAAUzD,KAAK3jC,MACrCA,KAAKqnC,QAAUrnC,KAAKqnC,QAAQ1D,KAAK3jC,MACjCA,KAAKsnC,SAAWtnC,KAAKsnC,SAAS3D,KAAK3jC,MACnCA,KAAKunC,SAAWvnC,KAAKunC,SAAS5D,KAAK3jC,MACnCA,KAAKwnC,QAAUxnC,KAAKwnC,QAAQ7D,KAAK3jC,MACjCA,KAAKynC,QAAUznC,KAAKynC,QAAQ9D,KAAK3jC,MACjCA,KAAK0nC,YAAc1nC,KAAK0nC,YAAY/D,KAAK3jC,MACzCA,KAAK2nC,oBAAsB3nC,KAAK2nC,oBAAoBhE,KAAK3jC,MACzDA,KAAK4nC,cAGL5nC,KAAK6nC,cACL7nC,KAAKonC,WACP,CACA,UAAAU,CAAW/F,GACT,IAAIgG,EACJ,OAAe,MAARhG,IAAiD,OAA/BgG,EAAe/nC,KAAK8mC,aAAkB,EAASiB,EAAaD,WAAW/F,GAClG,CAGA,QAAIA,GACF,OAAO/hC,KAAK8mC,OAAO/E,IACrB,CACA,QAAIA,CAAKA,GACP,GAAI/hC,KAAK8nC,WAAW/F,GAAO,OAC3B,KAAMA,aAAgBH,MAAMU,SAAWtiC,KAAK8mC,OAAOvsC,cAAgBunC,YAAYC,GAK7E,YAHA/hC,KAAK8mC,OAAOkB,cAAc,CACxBjG,SAIJ,MAAM+E,EAAS/E,aAAgBH,MAAMU,OAASP,EAAOc,WAAW,CAC9Dd,SAEF+E,EAAOmB,cAAgBjoC,KAAK8mC,OAAOmB,cACnCjoC,KAAK8mC,OAASA,CAChB,CAGA,SAAInhC,GACF,OAAO3F,KAAK+G,MACd,CACA,SAAIpB,CAAM9L,GACJmG,KAAK2F,QAAU9L,IACnBmG,KAAK8mC,OAAOnhC,MAAQ9L,EACpBmG,KAAKkoC,cAAc,QACrB,CAGA,iBAAID,GACF,OAAOjoC,KAAKgnC,cACd,CACA,iBAAIiB,CAAcpuC,GACZmG,KAAKioC,gBAAkBpuC,IAC3BmG,KAAK8mC,OAAOmB,cAAgBpuC,EAC5BmG,KAAKkoC,cAAc,QACrB,CAGA,iBAAIC,GACF,OAAOnoC,KAAKinC,cACd,CACA,iBAAIkB,CAActuC,GACZmG,KAAKmoC,gBAAkBtuC,IAC3BmG,KAAK8mC,OAAOqB,cAAgBtuC,EAC5BmG,KAAKkoC,gBACLloC,KAAK0nC,cACP,CAGA,cAAIU,GACF,OAAOpoC,KAAK8mC,OAAOsB,UACrB,CACA,cAAIA,CAAWC,GACTroC,KAAK8mC,OAAOwB,iBAAiBD,KACjCroC,KAAK8mC,OAAOsB,WAAaC,EACzBroC,KAAKkoC,cAAc,QACrB,CAGA,gBAAIK,GACF,OAAOvoC,KAAK8mC,OAAOyB,YACrB,CAGA,WAAAX,GACE5nC,KAAK6N,GAAGw2B,WAAW,CACjBe,gBAAiBplC,KAAKmnC,eACtB1D,MAAOzjC,KAAK4jC,SACZW,KAAMvkC,KAAKqnC,QACX7C,MAAOxkC,KAAKunC,SACZ9C,MAAOzkC,KAAKsnC,SACZ5C,OAAQ1kC,KAAKonC,UACblC,KAAMllC,KAAKwnC,QACX5C,KAAM5kC,KAAKynC,SAEf,CAGA,aAAAe,GACMxoC,KAAK6N,IAAI7N,KAAK6N,GAAGy3B,cACvB,CAGA,UAAAmD,CAAWC,EAAIpvB,GACb,MAAMqvB,EAAY3oC,KAAK+mC,WAAW2B,GAC7BC,GACLA,EAAUx2B,SAAQxL,GAAKA,EAAE2S,IAC3B,CAGA,kBAAI2pB,GACF,OAAOjjC,KAAK4oC,gBAAkB5oC,KAAK6oC,mBAAqB7oC,KAAK6N,GAAGo1B,cAClE,CAGA,aAAI9B,GACF,OAAOnhC,KAAK4oC,gBAAkB5oC,KAAK6oC,mBAAqB7oC,KAAK6N,GAAGs1B,YAClE,CACA,aAAIhC,CAAU2H,GACP9oC,KAAK6N,IAAO7N,KAAK6N,GAAG01B,WACzBvjC,KAAK6N,GAAGw1B,OAAOyF,EAAKA,GACpB9oC,KAAKmnC,iBACP,CAGA,cAAAA,GAEMnnC,KAAKuoC,eAAiBvoC,KAAK6N,GAAGlI,OAChCwc,QAAQC,KAAK,2GAEfpiB,KAAK+oC,WAAa,CAChB7rC,MAAO8C,KAAKijC,eACZ9lC,IAAK6C,KAAKmhC,UAEd,CAGA,WAAA0G,GACE7nC,KAAK8mC,OAAOnhC,MAAQ3F,KAAK6N,GAAGlI,MAC5B3F,KAAK+G,OAAS/G,KAAK8mC,OAAOnhC,MAC1B3F,KAAKgnC,eAAiBhnC,KAAK8mC,OAAOmB,cAClCjoC,KAAKinC,eAAiBjnC,KAAK8mC,OAAOqB,aACpC,CAGA,aAAAD,CAAc/G,GACZ,MAAM6H,EAAmBhpC,KAAK8mC,OAAOmB,cAC/BgB,EAAWjpC,KAAK8mC,OAAOnhC,MACvBujC,EAAmBlpC,KAAK8mC,OAAOqB,cAC/BgB,EAAkBnpC,KAAKuoC,aACvBa,EAAYppC,KAAKioC,gBAAkBe,GAAoBhpC,KAAK2F,QAAUsjC,GAAYjpC,KAAKinC,iBAAmBiC,EAChHlpC,KAAKgnC,eAAiBgC,EACtBhpC,KAAK+G,OAASkiC,EACdjpC,KAAKinC,eAAiBiC,EAClBlpC,KAAK6N,GAAGlI,QAAUwjC,IAAiBnpC,KAAK6N,GAAGlI,MAAQwjC,GACrC,SAAdhI,EAAsBnhC,KAAK0nC,cAAoC,MAAbvG,IAAmBnhC,KAAKmhC,UAAYA,GACtFiI,GAAWppC,KAAKqpC,oBACfrpC,KAAKspC,mBAAqBF,IAAappC,KAAKknC,QAAQV,SAAUxmC,KAAKknC,QAAQvtC,KAAK,CACnFsuC,cAAee,EACftD,UAAW,CACTxoC,MAAO8C,KAAKijC,eACZ9lC,IAAK6C,KAAKmhC,YAGhB,CAGA,aAAA6G,CAAcnH,GACZ,MAAM,KACJkB,KACGwH,GACD1I,EAEE2I,GAAcxpC,KAAK8nC,WAAW/F,GAC9B0H,EAAazpC,KAAK8mC,OAAO4C,iBAAiBH,GAC5CC,IAAYxpC,KAAK+hC,KAAOA,GACxB0H,GAAYzpC,KAAK8mC,OAAOkB,cAAcuB,IAEtCC,GAAcC,IAAYzpC,KAAKkoC,eACrC,CAGA,YAAAyB,CAAaxI,GACM,MAAbA,IACJnhC,KAAKmhC,UAAYA,EAGjBnhC,KAAK4pC,mBAAmBzI,GAC1B,CAGA,kBAAAyI,CAAmBzI,GACjBnhC,KAAK6pC,qBACL7pC,KAAK6oC,mBAAqB1H,EAC1BnhC,KAAK4oC,gBAAkBxM,YAAW,KAC3Bp8B,KAAK6N,KACV7N,KAAKmhC,UAAYnhC,KAAK6oC,mBACtB7oC,KAAK6pC,qBAAoB,GACxB,GACL,CAGA,iBAAAR,GACErpC,KAAKyoC,WAAW,SAAUzoC,KAAK8pC,aAC3B9pC,KAAK8mC,OAAOiD,YAAY/pC,KAAKyoC,WAAW,WAAYzoC,KAAK8pC,YAC/D,CAGA,kBAAAD,GACM7pC,KAAK4oC,kBACPzM,aAAan8B,KAAK4oC,wBACX5oC,KAAK4oC,gBAEhB,CAGA,WAAAlB,GACE1nC,KAAKmhC,UAAYnhC,KAAK8mC,OAAOkD,gBAAgBhqC,KAAK8mC,OAAOkD,gBAAgBhqC,KAAKmhC,UAAWpB,IAC3F,CAGA,mBAAA4H,GACM3nC,KAAKijC,iBAAmBjjC,KAAKmhC,WACjCnhC,KAAK0nC,aACP,CAGA,EAAAuC,CAAGvB,EAAIwB,GAGL,OAFKlqC,KAAK+mC,WAAW2B,KAAK1oC,KAAK+mC,WAAW2B,GAAM,IAChD1oC,KAAK+mC,WAAW2B,GAAI/uC,KAAKuwC,GAClBlqC,IACT,CAGA,GAAAmqC,CAAIzB,EAAIwB,GACN,IAAKlqC,KAAK+mC,WAAW2B,GAAK,OAAO1oC,KACjC,IAAKkqC,EAEH,cADOlqC,KAAK+mC,WAAW2B,GAChB1oC,KAET,MAAMoqC,EAASpqC,KAAK+mC,WAAW2B,GAAI1uC,QAAQkwC,GAE3C,OADIE,GAAU,GAAGpqC,KAAK+mC,WAAW2B,GAAI2B,OAAOD,EAAQ,GAC7CpqC,IACT,CAGA,QAAA4jC,CAAStqB,GACPtZ,KAAK8pC,YAAcxwB,EACnBtZ,KAAK6pC,qBACL,MAAMS,EAAU,IAAI1J,cAAc,CAEhCj7B,MAAO3F,KAAK6N,GAAGlI,MACfw7B,UAAWnhC,KAAKmhC,UAEhBH,SAAUhhC,KAAKuoC,aACftH,aAAcjhC,KAAK+oC,aAEfwB,EAAcvqC,KAAK8mC,OAAOqB,cAC1BlqB,EAASje,KAAK8mC,OAAOuD,OAAOC,EAAQvJ,eAAgBuJ,EAAQ/I,QAAQ5jC,OAAQ2sC,EAAQlJ,SAAUkJ,EAAQ3I,gBAAiB,CAC3H8B,OAAO,EACP+G,KAAK,IACJvsB,OAIG0jB,EAAkB4I,IAAgBvqC,KAAK8mC,OAAOqB,cAAgBmC,EAAQ3I,gBAAkB5B,GAC9F,IAAIoB,EAAYnhC,KAAK8mC,OAAOkD,gBAAgBM,EAAQvJ,eAAiB9iB,EAAQ0jB,GACzEA,IAAoB5B,KAAgBoB,EAAYnhC,KAAK8mC,OAAOkD,gBAAgB7I,EAAWpB,KAC3F//B,KAAKkoC,cAAc/G,UACZnhC,KAAK8pC,WACd,CAGA,SAAA1C,GACMpnC,KAAKuoC,eAAiBvoC,KAAK6N,GAAGlI,OAAO3F,KAAK6nC,cAC9C7nC,KAAK8mC,OAAO2D,WACZzqC,KAAKkoC,gBACLloC,KAAKmnC,gBACP,CAGA,OAAAE,CAAQqB,GACNA,EAAGzD,iBACHyD,EAAGgC,iBACL,CAGA,QAAApD,CAASoB,GACP1oC,KAAK2nC,qBACP,CAGA,QAAAJ,CAASmB,GACP1oC,KAAK2nC,qBACP,CACA,OAAAH,GACExnC,KAAK2qC,mBAAmB3qC,KAAKknC,QAAQhC,OACvC,CACA,OAAAuC,GACEznC,KAAK2qC,mBAAmB3qC,KAAKknC,QAAQtC,OACvC,CACA,kBAAA+F,CAAmBlE,GACZA,IACLzmC,KAAKspC,kBAAmB,EACxBtpC,KAAKioC,cAAgBxB,EAAMwB,cAC3BjoC,KAAK6N,GAAGw1B,OAAOoD,EAAMf,UAAUxoC,MAAOupC,EAAMf,UAAUvoC,KACtD6C,KAAKmnC,iBACLnnC,KAAKspC,kBAAmB,EAC1B,CAGA,OAAAsB,GACE5qC,KAAKwoC,gBACLxoC,KAAK+mC,WAAWppC,OAAS,SAClBqC,KAAK6N,EACd,GCtVF,MAAMg9B,cASJ,gBAAOC,CAAUC,GACf,OAAO3wC,MAAMC,QAAQ0wC,GAAQA,EAAO,CAACA,EAAM,IAAIF,cACjD,CACA,WAAAtwC,CAAY+vC,GACV9vC,OAAOsmC,OAAO9gC,KAAM,CAClBohC,SAAU,GACV4J,YAAa,GACbC,UAAW,EACXC,MAAM,GACLZ,EACL,CAGA,SAAAa,CAAUb,GAKR,OAJAtqC,KAAKohC,UAAYkJ,EAAQlJ,SACzBphC,KAAKgrC,aAAeV,EAAQU,YAC5BhrC,KAAKirC,WAAaX,EAAQW,UAC1BjrC,KAAKkrC,KAAOlrC,KAAKkrC,MAAQZ,EAAQY,KAC1BlrC,IACT,CAGA,UAAIie,GACF,OAAOje,KAAKirC,UAAYjrC,KAAKohC,SAASzjC,MACxC,CACA,YAAIytC,GACF,OAAOC,QAAQrrC,KAAKgrC,cAAgBhrC,KAAKkrC,IAC3C,CACA,MAAAI,CAAOhB,GACL,OAAOtqC,KAAKohC,WAAakJ,EAAQlJ,UAAYphC,KAAKirC,YAAcX,EAAQW,WAAajrC,KAAKgrC,cAAgBV,EAAQU,aAAehrC,KAAKkrC,OAASZ,EAAQY,IACzJ,EAEFtJ,MAAMiJ,cAAgBA,cC3CtB,MAAMU,sBAOJ,WAAAhxC,CAAYoL,EAAO+F,EAAM8/B,QACT,IAAV7lC,IACFA,EAAQ,SAEG,IAAT+F,IACFA,EAAO,GAET1L,KAAK2F,MAAQA,EACb3F,KAAK0L,KAAOA,EACZ1L,KAAKwrC,KAAOA,CACd,CACA,QAAA9K,GACE,OAAO1gC,KAAK2F,KACd,CACA,MAAA8lC,CAAO/J,GACL1hC,KAAK2F,OAAS45B,OAAOmC,EACvB,CACA,QAAAgK,CAAS5E,GACP,OAAOA,EAAO6E,OAAO3rC,KAAK0gC,WAAY,CACpCgB,MAAM,IACLyJ,UAAUrE,EAAO8E,qBACtB,CACA,SAAInF,GACF,MAAO,CACL9gC,MAAO3F,KAAK2F,MACZ+F,KAAM1L,KAAK0L,KACX8/B,KAAMxrC,KAAKwrC,KAEf,CACA,SAAI/E,CAAMA,GACRjsC,OAAOsmC,OAAO9gC,KAAMymC,EACtB,CACA,OAAAoF,CAAQC,GACN,IAAK9rC,KAAK2F,MAAMhI,QAAuB,MAAbmuC,GAAqB9rC,KAAK0L,MAAQogC,EAAW,MAAO,GAC9E,MAAMC,EAAY/rC,KAAK2F,MAAM,GAE7B,OADA3F,KAAK2F,MAAQ3F,KAAK2F,MAAMuJ,MAAM,GACvB68B,CACT,CACA,KAAAvtB,GACE,IAAKxe,KAAK2F,MAAMhI,OAAQ,MAAO,GAC/B,MAAMouC,EAAY/rC,KAAK2F,MAAM3F,KAAK2F,MAAMhI,OAAS,GAEjD,OADAqC,KAAK2F,MAAQ3F,KAAK2F,MAAMuJ,MAAM,GAAI,GAC3B68B,CACT,ECvCF,MAAMzJ,OA2BJ,WAAA/nC,CAAYsmC,GACV7gC,KAAK+G,OAAS,GACd/G,KAAKgsC,QAAQ,IACR1J,OAAO2J,YACPpL,IAEL7gC,KAAKksC,cAAe,CACtB,CAGA,aAAAlE,CAAcnH,GACP7gC,KAAK0pC,iBAAiB7I,IAC3B7gC,KAAKmsC,iBAAiBnsC,KAAKgsC,QAAQrI,KAAK3jC,KAAM6gC,GAChD,CAGA,OAAAmL,CAAQnL,GACNrmC,OAAOsmC,OAAO9gC,KAAM6gC,EACtB,CAGA,SAAI4F,GACF,MAAO,CACL1/B,OAAQ/G,KAAK2F,MACbshC,eAAgBjnC,KAAKmoC,cAEzB,CACA,SAAI1B,CAAMA,GACRzmC,KAAK+G,OAAS0/B,EAAM1/B,MACtB,CAGA,KAAA0N,GACEzU,KAAK+G,OAAS,EAChB,CACA,SAAIpB,GACF,OAAO3F,KAAK+G,MACd,CACA,SAAIpB,CAAMA,GACR3F,KAAKosC,QAAQzmC,EAAO,CAClB89B,OAAO,GAEX,CAGA,OAAA2I,CAAQzmC,EAAO0mC,QACC,IAAVA,IACFA,EAAQ,CACN5I,OAAO,IAGXzjC,KAAKyU,QACLzU,KAAK2rC,OAAOhmC,EAAO0mC,EAAO,IAC1BrsC,KAAKyqC,UACP,CACA,iBAAIxC,GACF,OAAOjoC,KAAK2F,KACd,CACA,iBAAIsiC,CAActiC,GAChB3F,KAAKosC,QAAQzmC,EAAO,CAAC,EACvB,CACA,cAAIyiC,GACF,OAAOpoC,KAAKssC,MAAQtsC,KAAKssC,MAAMtsC,KAAK2F,MAAO3F,MAAQA,KAAKioC,aAC1D,CACA,cAAIG,CAAWziC,GACT3F,KAAKusC,OACPvsC,KAAK2F,MAAQ3F,KAAKusC,OAAO5mC,EAAO3F,MAEhCA,KAAKioC,cAAgB1I,OAAO55B,EAEhC,CAGA,iBAAIwiC,GACF,OAAOnoC,KAAKwsC,aAAa,EAAGxsC,KAAKuoC,aAAa5qC,OAAQ,CACpD6sC,KAAK,GAET,CACA,iBAAIrC,CAAcxiC,GAChB3F,KAAKosC,QAAQzmC,EAAO,CAClB6kC,KAAK,GAET,CACA,gBAAIjC,GACF,OAAOvoC,KAAK2F,KACd,CACA,cAAIokC,GACF,OAAO,CACT,CACA,YAAI0C,GACF,OAAOzsC,KAAK+pC,UACd,CAGA,eAAAC,CAAgB7I,EAAWuL,GACzB,OAAOvL,CACT,CACA,mBAAAwL,CAAoBC,EAASC,GAO3B,YANgB,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQ7sC,KAAKuoC,aAAa5qC,QAErBjC,KAAKe,IAAIuD,KAAKuoC,aAAa5qC,OAAQkvC,EAAQD,EACpD,CAGA,YAAAJ,CAAaI,EAASC,EAAOR,GAO3B,YANgB,IAAZO,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQ7sC,KAAKuoC,aAAa5qC,QAErBqC,KAAKuoC,aAAar5B,MAAM09B,EAASC,EAC1C,CAGA,WAAAC,CAAYF,EAASC,GAOnB,YANgB,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQ7sC,KAAKuoC,aAAa5qC,QAErB,IAAI4tC,sBAAsBvrC,KAAKwsC,aAAaI,EAASC,GAAQD,EACtE,CAGA,UAAAG,CAAWrL,GAET,OADIpC,SAASoC,KAAOA,EAAO,IAAI6J,sBAAsBhM,OAAOmC,KACrDA,EAAKgK,SAAS1rC,KACvB,CAGA,cAAAgtC,CAAeC,EAAIZ,GACjB,OAAKY,GACLjtC,KAAK+G,QAAUkmC,EACR,IAAIpC,cAAc,CACvBzJ,SAAU6L,EACVjC,YAAaiC,KAJC,IAAIpC,aAMtB,CAGA,WAAAqC,CAAYD,EAAIZ,EAAOc,QACP,IAAVd,IACFA,EAAQ,CAAC,GAEX,MAAMe,EAAkBptC,KAAKymC,MAC7B,IAAI6D,EAEJ,IADC2C,EAAI3C,GAAWtqC,KAAKqtC,cAAcJ,EAAIZ,GACnCY,IACF3C,EAAUA,EAAQa,UAAUnrC,KAAKgtC,eAAeC,EAAIZ,KAK/C/B,EAAQU,aAAgC,QAAjBhrC,KAAKstC,SAAmB,CAClD,MAAMC,EAAavtC,KAAKymC,MACxBzmC,KAAKymC,MAAQ2G,EACb,IAAII,EAAaxtC,KAAKytC,IAAIpB,GAC1B,MAAMqB,EAAY1tC,KAAKgtC,eAAeC,EAAIZ,GAC1CmB,EAAaA,EAAWrC,UAAUuC,GAI9BA,EAAU1C,aAAewC,EAAWlC,OAAOhB,GAC7CA,EAAUkD,EAEVxtC,KAAKymC,MAAQ8G,CAEjB,CAEF,GAAIjD,EAAQlJ,SAAU,CACpB,IAAIuM,EACAC,GAAsC,IAA3B5tC,KAAK6tC,WAAWxB,GAC/B,GAAIuB,GAAyB,MAAbT,EAAmB,CAEjC,MAAMW,EAAkB9tC,KAAKymC,MAC7B,IAAuB,IAAnBzmC,KAAK+tC,UAAoB,CAC3BJ,EAAiBR,EAAU1G,MAC3B,IAAK,IAAI/oC,EAAI,EAAGA,EAAI4sC,EAAQU,YAAYrtC,SAAUD,EAChDyvC,EAAUtB,QAAQ7rC,KAAKuoC,aAAa5qC,OAAS2sC,EAAQW,UAEzD,CACA,IAAI+C,EAAchuC,KAAK+sC,WAAWI,GAIlC,GAHAS,EAAWI,EAAYhD,YAAYrtC,SAAWwvC,EAAUzM,WAAW/iC,SAG7DiwC,GAAYI,EAAY5M,UAAgC,UAAnBphC,KAAK+tC,WAAuB,CACrE/tC,KAAKymC,MAAQqH,EACbH,EAAiBR,EAAU1G,MAC3B,IAAK,IAAI/oC,EAAI,EAAGA,EAAI4sC,EAAQU,YAAYrtC,SAAUD,EAChDyvC,EAAU3uB,QAEZwvB,EAAchuC,KAAK+sC,WAAWI,GAC9BS,EAAWI,EAAYhD,YAAYrtC,SAAWwvC,EAAUzM,WAAW/iC,MACrE,CAGIiwC,GAAYI,EAAY5M,WAAUphC,KAAKymC,MAAQqH,EACrD,CAGKF,IACHtD,EAAU,IAAIO,cACd7qC,KAAKymC,MAAQ2G,EACTD,GAAaQ,IAAgBR,EAAU1G,MAAQkH,GAEvD,CACA,OAAOrD,CACT,CAGA,kBAAAsB,GACE,OAAO,IAAIf,aACb,CAGA,YAAAoD,GACE,OAAO,IAAIpD,aACb,CAGA,MAAAc,CAAO9xC,EAAKwyC,EAAO3K,GACjB,IAAKpC,SAASzlC,GAAM,MAAM,IAAImoC,MAAM,0BACpC,MAAMmL,EAAY7N,SAASoC,GAAQ,IAAI6J,sBAAsBhM,OAAOmC,IAASA,EAE7E,IAAI4I,EADS,MAAT+B,GAAiBA,EAAM3K,OAAM2K,EAAM6B,iBAAmBluC,KAAKymC,QAE9D5sC,EAAKywC,GAAWtqC,KAAKmuC,UAAUt0C,EAAKwyC,GACrC,IAAK,IAAI+B,EAAK,EAAGA,EAAKv0C,EAAI8D,SAAUywC,EAAI,CACtC,MAAMx+B,EAAI5P,KAAKktC,YAAYrzC,EAAIu0C,GAAK/B,EAAOc,GAC3C,IAAKv9B,EAAEo7B,cAAgBhrC,KAAKquC,cAAcx0C,EAAIu0C,GAAK/B,EAAOc,GAAY,MACtE7C,EAAQa,UAAUv7B,EACpB,CAYA,QAXoB,IAAf5P,KAAKsuC,OAAiC,WAAftuC,KAAKsuC,QAAgC,MAATjC,GAAiBA,EAAM5I,OAAS5pC,GACtFywC,EAAQa,UAAUnrC,KAAKiuC,gBAIR,MAAbd,IACF7C,EAAQW,WAAajrC,KAAK+sC,WAAWI,GAAWlC,WAK3CX,CACT,CACA,MAAAtmB,CAAO4oB,EAASC,GAQd,YAPgB,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQ7sC,KAAKuoC,aAAa5qC,QAE5BqC,KAAK+G,OAAS/G,KAAKuoC,aAAar5B,MAAM,EAAG09B,GAAW5sC,KAAKuoC,aAAar5B,MAAM29B,GACrE,IAAIhC,aACb,CAGA,gBAAAsB,CAAiBnmC,GACf,GAAIhG,KAAKuuC,cAAgBvuC,KAAKksC,aAAc,OAAOlmC,IACnDhG,KAAKuuC,aAAc,EACnB,MAAMC,EAAWxuC,KAAKmoC,cAChBxiC,EAAQ3F,KAAK2F,MACb8oC,EAAMzoC,IAQZ,OAPAhG,KAAKmoC,cAAgBqG,EAEjBxuC,KAAK2F,OAAS3F,KAAK2F,QAAUA,GAAuC,IAA9BA,EAAM3L,QAAQgG,KAAK2F,SAC3D3F,KAAK2rC,OAAOhmC,EAAMuJ,MAAMlP,KAAKuoC,aAAa5qC,QAAS,CAAC,EAAG,IACvDqC,KAAKyqC,mBAEAzqC,KAAKuuC,YACLE,CACT,CACA,WAAAC,CAAY1oC,GACV,GAAIhG,KAAK2uC,YAAc3uC,KAAKksC,aAAc,OAAOlmC,EAAGhG,MACpDA,KAAK2uC,WAAY,EACjB,MAAMlI,EAAQzmC,KAAKymC,MACbgI,EAAMzoC,EAAGhG,MAGf,OAFAA,KAAKymC,MAAQA,SACNzmC,KAAK2uC,UACLF,CACT,CACA,aAAAJ,CAAcpB,EAAIZ,EAAOc,GACvB,OAAO9B,QAAQrrC,KAAK4uC,YACtB,CAGA,SAAAT,CAAUt0C,EAAKwyC,GAIb,YAHc,IAAVA,IACFA,EAAQ,CAAC,GAEJxB,cAAcC,UAAU9qC,KAAK6uC,QAAU7uC,KAAK6uC,QAAQh1C,EAAKmG,KAAMqsC,GAASxyC,EACjF,CAGA,aAAAwzC,CAAcxzC,EAAKwyC,GAIjB,YAHc,IAAVA,IACFA,EAAQ,CAAC,GAEJxB,cAAcC,UAAU9qC,KAAK8uC,YAAc9uC,KAAK8uC,YAAYj1C,EAAKmG,KAAMqsC,GAASxyC,EACzF,CAGA,UAAAg0C,CAAWxB,GACT,QAASrsC,KAAK+uC,UAAY/uC,KAAK+uC,SAAS/uC,KAAK2F,MAAO3F,KAAMqsC,OAAarsC,KAAK1B,QAAU0B,KAAK1B,OAAOuvC,WAAWxB,GAC/G,CAGA,QAAA5B,GACMzqC,KAAK0kC,QAAQ1kC,KAAK0kC,OAAO1kC,KAAK2F,MAAO3F,KAC3C,CACA,MAAAqqC,CAAOntC,EAAO8xC,EAAa5N,EAAUO,EAAiB0K,QACnC,IAAbjL,IACFA,EAAW,SAEW,IAApBO,IACFA,EAAkB5B,SAEN,IAAVsM,IACFA,EAAQ,CACN5I,OAAO,IAGX,MAAMwL,EAAU/xC,EAAQ8xC,EAClBtN,EAAO1hC,KAAK8sC,YAAYmC,GACxBC,GAA6B,IAAflvC,KAAKsuC,OAAiC,WAAftuC,KAAKsuC,MAChD,IAAI/D,EACA2E,IACFvN,EZrVN,SAASwN,eAAezC,GACtB,OAAQA,GACN,KAAK3M,GACH,OAAOA,GACT,KAAKA,GACH,OAAOA,GACT,QACE,OAAO2M,EAEb,CY4UwByC,CAAexN,GACjC4I,EAAcvqC,KAAKwsC,aAAa,EAAGyC,EAAS,CAC1CzE,KAAK,KAGT,IAAIzJ,EAAiB7jC,EACrB,MAAMotC,EAAU,IAAIO,cAUpB,GAPIlJ,IAAoB5B,KACtBgB,EAAiB/gC,KAAKgqC,gBAAgB9sC,EAAO8xC,EAAc,GAAe,IAAV9xC,IAAgBgyC,EAAcnP,GAAiB4B,GAG/G2I,EAAQW,UAAYlK,EAAiB7jC,GAEvCotC,EAAQa,UAAUnrC,KAAKgkB,OAAO+c,IAC1BmO,GAAevN,IAAoB5B,IAAkBwK,IAAgBvqC,KAAKmoC,cAC5E,GAAIxG,IAAoB5B,GAAsB,CAC5C,IAAIqP,EACJ,KAAO7E,IAAgBvqC,KAAKmoC,gBAAkBiH,EAAYpvC,KAAKuoC,aAAa5qC,SAC1E2sC,EAAQa,UAAU,IAAIN,cAAc,CAClCI,WAAY,KACVE,UAAUnrC,KAAKgkB,OAAOorB,EAAY,GAE1C,MAAWzN,IAAoB5B,IAC7B2B,EAAKmK,UAGT,OAAOvB,EAAQa,UAAUnrC,KAAK2rC,OAAOvK,EAAUiL,EAAO3K,GACxD,CACA,UAAAoG,CAAW/F,GACT,OAAO/hC,KAAK+hC,OAASA,CACvB,CACA,gBAAA2H,CAAiB7I,GACf,OAAQZ,eAAejgC,KAAM6gC,EAC/B,CACA,gBAAAyH,CAAiB3iC,GACf,MAAM0pC,EAAOrvC,KAAKooC,WAClB,OAAOziC,IAAU0pC,GAAQ/M,OAAOgN,aAAavhC,SAASpI,IAAU28B,OAAOgN,aAAavhC,SAASshC,MAAUrvC,KAAKusC,QAASvsC,KAAKusC,OAAO5mC,EAAO3F,QAAUA,KAAKusC,OAAOvsC,KAAKooC,WAAYpoC,KACjL,CACA,GAAAytC,CAAIpB,GACF,OAAO,IAAIxB,aACb,EAEFvI,OAAO2J,SAAW,CAChB2C,aAAa,GAEftM,OAAOgN,aAAe,MAAC/wB,EAAW,KAAM,IACxCqjB,MAAMU,OAASA,OC9Zf,MAAMiN,kBAGJ,WAAAh1C,CAAYi1C,EAAQ9jC,QACH,IAAX8jC,IACFA,EAAS,SAEE,IAAT9jC,IACFA,EAAO,GAET1L,KAAKwvC,OAASA,EACdxvC,KAAK0L,KAAOA,CACd,CACA,QAAAg1B,GACE,OAAO1gC,KAAKwvC,OAAOl5C,IAAIipC,QAAQkQ,KAAK,GACtC,CACA,MAAAhE,CAAOiE,GACL,IAAKnQ,OAAOmQ,GAAY,OACxBA,EAAYpQ,SAASoQ,GAAa,IAAInE,sBAAsBhM,OAAOmQ,IAAcA,EACjF,MAAMC,EAAY3vC,KAAKwvC,OAAOxvC,KAAKwvC,OAAO7xC,OAAS,GAC7CiyC,EAAaD,IAEnBA,EAAUnE,OAASkE,EAAUlE,MAA0B,MAAlBkE,EAAUlE,OAE/CkE,EAAUhkC,OAASikC,EAAUjkC,KAAOikC,EAAUjP,WAAW/iC,OACzD,GAAI+xC,aAAqBnE,sBAEnBqE,EAEFD,EAAUlE,OAAOiE,EAAUhP,YAG3B1gC,KAAKwvC,OAAO71C,KAAK+1C,QAEd,GAAIA,aAAqBH,kBAAmB,CACjD,GAAsB,MAAlBG,EAAUlE,KAAc,CAE1B,IAAIqE,EACJ,KAAOH,EAAUF,OAAO7xC,QAAsC,MAA5B+xC,EAAUF,OAAO,GAAGhE,MACpDqE,EAAiBH,EAAUF,OAAOhxB,QAClCqxB,EAAenkC,MAAQgkC,EAAUhkC,KACjC1L,KAAKyrC,OAAOoE,EAEhB,CAGIH,EAAUhP,aAEZgP,EAAUlE,KAAOkE,EAAUI,WAC3B9vC,KAAKwvC,OAAO71C,KAAK+1C,GAErB,CACF,CACA,QAAAhE,CAAS5E,GACP,KAAMA,aAAkBlF,MAAMM,eAAgB,CAE5C,OADa,IAAIqJ,sBAAsBvrC,KAAK0gC,YAChCgL,SAAS5E,EACvB,CACA,MAAMwD,EAAU,IAAIO,cACpB,IAAK,IAAIuD,EAAK,EAAGA,EAAKpuC,KAAKwvC,OAAO7xC,SAAUywC,EAAI,CAC9C,MAAM2B,EAAQ/vC,KAAKwvC,OAAOpB,GACpB4B,EAAgBlJ,EAAOmJ,eAAenJ,EAAOyB,aAAa5qC,QAC1D6tC,EAAOuE,EAAMvE,KACnB,IAAI0E,EAWJ,GAVY,MAAR1E,KAEHwE,GAAiBA,EAAc1iC,OAASk+B,MACnCuE,aAAiBR,mBAErBzI,EAAOqJ,OAAOn2C,QAAQwxC,IAAS,IAC7BlB,EAAQa,UAAUrE,EAAO8E,mBAAmBJ,IAE9C0E,EAAaH,aAAiBR,mBAAqBzI,EAAOsJ,QAAQ5E,IAEhE0E,EAAY,CACd,MAAMlC,EAAckC,EAAWnD,WAAWgD,GAC1CzF,EAAQa,UAAU6C,GAGlB,MAAMqC,EAAcN,EAAMrP,WAAWxxB,MAAM8+B,EAAYhD,YAAYrtC,QAC/D0yC,GAAa/F,EAAQa,UAAUrE,EAAO6E,OAAO0E,EAAa,CAC5D3O,MAAM,IAEV,MACE4I,EAAQa,UAAUrE,EAAO6E,OAAOoE,EAAMrP,WAAY,CAChDgB,MAAM,IAGZ,CACA,OAAO4I,CACT,CACA,SAAI7D,GACF,MAAO,CACL+I,OAAQxvC,KAAKwvC,OAAOl5C,KAAI2a,GAAKA,EAAEw1B,QAC/B/6B,KAAM1L,KAAK0L,KACX8/B,KAAMxrC,KAAKwrC,KACXsE,WAAY9vC,KAAK8vC,WAErB,CACA,SAAIrJ,CAAMA,GACR,MAAM,OACJ+I,KACGc,GACD7J,EACJjsC,OAAOsmC,OAAO9gC,KAAMswC,GACpBtwC,KAAKwvC,OAASA,EAAOl5C,KAAIi6C,IACvB,MAAMR,EAAQ,WAAYQ,EAAS,IAAIhB,kBAAsB,IAAIhE,sBAEjE,OADAwE,EAAMtJ,MAAQ8J,EACPR,CAAK,GAEhB,CACA,OAAAlE,CAAQC,GACN,IAAK9rC,KAAKwvC,OAAO7xC,QAAuB,MAAbmuC,GAAqB9rC,KAAK0L,MAAQogC,EAAW,MAAO,GAC/E,MAAM0E,EAA6B,MAAb1E,EAAoBA,EAAY9rC,KAAK0L,KAAOogC,EAClE,IAAIsC,EAAK,EACT,KAAOA,EAAKpuC,KAAKwvC,OAAO7xC,QAAQ,CAC9B,MAAMoyC,EAAQ/vC,KAAKwvC,OAAOpB,GACpBrC,EAAYgE,EAAMlE,QAAQ2E,GAChC,GAAIT,EAAMrP,WAAY,CAGpB,IAAKqL,EAAW,QACdqC,CACJ,MAEEpuC,KAAKwvC,OAAOnF,OAAO+D,EAAI,GAEzB,GAAIrC,EAAW,OAAOA,CACxB,CACA,MAAO,EACT,CACA,KAAAvtB,GACE,IAAKxe,KAAKwvC,OAAO7xC,OAAQ,MAAO,GAChC,IAAIywC,EAAKpuC,KAAKwvC,OAAO7xC,OAAS,EAC9B,KAAO,GAAKywC,GAAI,CACd,MAAM2B,EAAQ/vC,KAAKwvC,OAAOpB,GACpBrC,EAAYgE,EAAMvxB,QACxB,GAAIuxB,EAAMrP,WAAY,CAGpB,IAAKqL,EAAW,QACdqC,CACJ,MAEEpuC,KAAKwvC,OAAOnF,OAAO+D,EAAI,GAEzB,GAAIrC,EAAW,OAAOA,CACxB,CACA,MAAO,EACT,ECxJF,MAAM0E,cACJ,WAAAl2C,CAAYusC,EAAQgC,GAClB9oC,KAAK8mC,OAASA,EACd9mC,KAAK0wC,KAAO,GACZ,MAAM,OACJzyB,EAAM,MACN3Q,GACEw5B,EAAOmJ,eAAenH,KAASA,EAAM,EAEzC,CACEx7B,MAAO,EACP2Q,OAAQ,GAGV,CACE3Q,MAAOtN,KAAK8mC,OAAOsJ,QAAQzyC,OAC3BsgB,OAAQ,IAEVje,KAAKie,OAASA,EACdje,KAAKsN,MAAQA,EACbtN,KAAK2wC,IAAK,CACZ,CACA,SAAIC,GACF,OAAO5wC,KAAK8mC,OAAOsJ,QAAQpwC,KAAKsN,MAClC,CACA,OAAIw7B,GACF,OAAO9oC,KAAK8mC,OAAO+J,eAAe7wC,KAAKsN,OAAStN,KAAKie,MACvD,CACA,SAAIwoB,GACF,MAAO,CACLn5B,MAAOtN,KAAKsN,MACZ2Q,OAAQje,KAAKie,OACb0yB,GAAI3wC,KAAK2wC,GAEb,CACA,SAAIlK,CAAM5/B,GACRrM,OAAOsmC,OAAO9gC,KAAM6G,EACtB,CACA,SAAAiqC,GACE9wC,KAAK0wC,KAAK/2C,KAAKqG,KAAKymC,MACtB,CACA,QAAAsK,GACE,MAAMlqC,EAAI7G,KAAK0wC,KAAKM,MAEpB,OADInqC,IAAG7G,KAAKymC,MAAQ5/B,GACbA,CACT,CACA,SAAAoqC,GACMjxC,KAAK4wC,QACL5wC,KAAKsN,MAAQ,IACftN,KAAKsN,MAAQ,EACbtN,KAAKie,OAAS,GAEZje,KAAKsN,OAAStN,KAAK8mC,OAAOsJ,QAAQzyC,SACpCqC,KAAKsN,MAAQtN,KAAK8mC,OAAOsJ,QAAQzyC,OAAS,EAC1CqC,KAAKie,OAASje,KAAK4wC,MAAMrI,aAAa5qC,QAE1C,CACA,SAAAuzC,CAAUlrC,GAER,IADAhG,KAAK8wC,YACA9wC,KAAKixC,YAAa,GAAKjxC,KAAKsN,QAAStN,KAAKsN,MAAOtN,KAAKie,QAAwC,OAA7BkzB,EAAcnxC,KAAK4wC,YAAiB,EAASO,EAAY5I,aAAa5qC,SAAW,EAAG,CACxJ,IAAIwzC,EACJ,GAAInrC,IAAM,OAAOhG,KAAK2wC,IAAK,CAC7B,CACA,OAAO3wC,KAAK2wC,IAAK,CACnB,CACA,UAAAS,CAAWprC,GAET,IADAhG,KAAK8wC,YACA9wC,KAAKixC,YAAajxC,KAAKsN,MAAQtN,KAAK8mC,OAAOsJ,QAAQzyC,SAAUqC,KAAKsN,MAAOtN,KAAKie,OAAS,EAC1F,GAAIjY,IAAM,OAAOhG,KAAK2wC,IAAK,EAE7B,OAAO3wC,KAAK2wC,IAAK,CACnB,CACA,oBAAAU,GACE,OAAOrxC,KAAKkxC,WAAU,KACpB,IAAIlxC,KAAK4wC,MAAMU,SAAYtxC,KAAK4wC,MAAMjrC,MAEtC,OADA3F,KAAKie,OAASje,KAAK4wC,MAAM5G,gBAAgBhqC,KAAKie,OAAQ8hB,IAClC,IAAhB//B,KAAKie,aAAT,CAAkC,GAEtC,CACA,mBAAAszB,GAKE,OAAOvxC,KAAKkxC,WAAU,KACpB,IAAIlxC,KAAK4wC,MAAMU,QAEf,OADAtxC,KAAKie,OAASje,KAAK4wC,MAAM5G,gBAAgBhqC,KAAKie,OAAQ8hB,KAC/C,CAAI,GAEf,CACA,sBAAAyR,GACE,OAAOxxC,KAAKkxC,WAAU,KACpB,KAAIlxC,KAAK4wC,MAAMU,SAAWtxC,KAAK4wC,MAAMa,aAAezxC,KAAK4wC,MAAMjrC,OAE/D,OADA3F,KAAKie,OAASje,KAAK4wC,MAAM5G,gBAAgBhqC,KAAKie,OAAQ8hB,KAC/C,CAAI,GAEf,CACA,qBAAA2R,GACE,OAAO1xC,KAAKoxC,YAAW,KACrB,IAAIpxC,KAAK4wC,MAAMU,SAAYtxC,KAAK4wC,MAAMjrC,MAEtC,OADA3F,KAAKie,OAASje,KAAK4wC,MAAM5G,gBAAgBhqC,KAAKie,OAAQ8hB,IAClD//B,KAAKie,SAAWje,KAAK4wC,MAAMjrC,MAAMhI,aAArC,CAAwD,GAE5D,CACA,oBAAAg0C,GACE,OAAO3xC,KAAKoxC,YAAW,KACrB,IAAIpxC,KAAK4wC,MAAMU,QAQf,OALAtxC,KAAKie,OAASje,KAAK4wC,MAAM5G,gBAAgBhqC,KAAKie,OAAQ8hB,KAK/C,CAAI,GAEf,CACA,uBAAA6R,GACE,OAAO5xC,KAAKoxC,YAAW,KACrB,KAAIpxC,KAAK4wC,MAAMU,SAAWtxC,KAAK4wC,MAAMa,aAAezxC,KAAK4wC,MAAMjrC,OAI/D,OADA3F,KAAKie,OAASje,KAAK4wC,MAAM5G,gBAAgBhqC,KAAKie,OAAQ8hB,KAC/C,CAAI,GAEf,EC1HF,MAAM8R,uBAaJ,WAAAt3C,CAAYsmC,GACVrmC,OAAOsmC,OAAO9gC,KAAM6gC,GACpB7gC,KAAK+G,OAAS,GACd/G,KAAKsxC,SAAU,CACjB,CACA,SAAI3rC,GACF,OAAO3F,KAAK+G,MACd,CACA,iBAAIkhC,GACF,OAAOjoC,KAAK8xC,YAAc9xC,KAAK2F,MAAQ,EACzC,CACA,iBAAIwiC,GACF,OAAOnoC,KAAK+xC,YAAc/xC,KAAK2F,MAAQ,EACzC,CACA,gBAAI4iC,GACF,OAAOvoC,KAAK2F,KACd,CACA,KAAA8O,GACEzU,KAAK+xC,aAAc,EACnB/xC,KAAK+G,OAAS,EAChB,CACA,MAAAid,CAAO4oB,EAASC,GASd,YARgB,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQ7sC,KAAK+G,OAAOpJ,QAEtBqC,KAAK+G,OAAS/G,KAAK+G,OAAOmI,MAAM,EAAG09B,GAAW5sC,KAAK+G,OAAOmI,MAAM29B,GAC3D7sC,KAAK+G,SAAQ/G,KAAK+xC,aAAc,GAC9B,IAAIlH,aACb,CACA,eAAAb,CAAgB7I,EAAWuL,QACP,IAAdA,IACFA,EAAY3M,IAEd,MACMiS,EAAShyC,KAAK+G,OAAOpJ,OAC3B,OAAQ+uC,GACN,KAAK3M,GACL,KAAKA,GACH,OALW,EASb,QACE,OAAOiS,EAEb,CACA,mBAAArF,CAAoBC,EAASC,GAO3B,YANgB,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQ7sC,KAAK+G,OAAOpJ,QAEfqC,KAAK+xC,YAAclF,EAAQD,EAAU,CAC9C,CACA,YAAAJ,CAAaI,EAASC,EAAOR,GAU3B,YATgB,IAAZO,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQ7sC,KAAK+G,OAAOpJ,aAER,IAAV0uC,IACFA,EAAQ,CAAC,GAEJA,EAAM7B,KAAOxqC,KAAK+xC,aAAe/xC,KAAK+G,OAAOmI,MAAM09B,EAASC,IAAU,EAC/E,CACA,cAAI9C,GACF,OAAO,CACT,CACA,YAAI0C,GACF,OAAOpB,QAAQrrC,KAAK+G,OACtB,CACA,WAAAmmC,CAAYD,EAAIZ,GAId,QAHc,IAAVA,IACFA,EAAQ,CAAC,GAEPrsC,KAAKysC,SAAU,OAAO,IAAI5B,cAC9B,MAAMoH,GAA6B,IAAfjyC,KAAKsuC,OAAiC,WAAftuC,KAAKsuC,MAE1C4D,EADWlyC,KAAKo4B,OAAS6U,IACCjtC,KAAK8xC,aAAezF,EAAM5I,OAAS4I,EAAM7B,QAAU6B,EAAM7B,MAAQyH,KAAiB5F,EAAM3K,KAClH4I,EAAU,IAAIO,cAAc,CAChCzJ,SAAUphC,KAAKo4B,KACf4S,YAAakH,EAAalyC,KAAKo4B,KAAO,KAIxC,OAFAp4B,KAAK+G,OAAS/G,KAAKo4B,KACnBp4B,KAAK+xC,YAAcG,IAAe7F,EAAM7B,KAAO6B,EAAM5I,OAC9C6G,CACT,CACA,YAAA2D,GACE,OAAOjuC,KAAKktC,YAAYltC,KAAKo4B,KAAM,CACjCsJ,MAAM,GAEV,CACA,kBAAAkK,GACE,MAAMtB,EAAU,IAAIO,cACpB,OAAI7qC,KAAKysC,WACTzsC,KAAK+G,OAASujC,EAAQlJ,SAAWphC,KAAKo4B,MADZkS,CAG5B,CACA,WAAAwC,GACE,OAAO,IAAIvB,sBAAsB,GACnC,CACA,UAAAwB,CAAWrL,GAET,OADIpC,SAASoC,KAAOA,EAAO,IAAI6J,sBAAsBhM,OAAOmC,KACrDA,EAAKgK,SAAS1rC,KACvB,CACA,MAAA2rC,CAAO9xC,EAAKwyC,EAAO3K,GACjB,MAAM4I,EAAUtqC,KAAKktC,YAAYrzC,EAAI,GAAIwyC,GAIzC,OAHY,MAAR3K,IACF4I,EAAQW,WAAajrC,KAAK+sC,WAAWrL,GAAMuJ,WAEtCX,CACT,CACA,QAAAG,GAAY,CACZ,SAAIhE,GACF,MAAO,CACL1/B,OAAQ/G,KAAK+G,OACbkgC,eAAgBjnC,KAAKmoC,cAEzB,CACA,SAAI1B,CAAMA,GACRzmC,KAAK+G,OAAS0/B,EAAM1/B,OACpB/G,KAAK+xC,YAAc1G,QAAQ5E,EAAMQ,eACnC,CACA,GAAAwG,CAAIpB,GACF,OAAOrsC,KAAK4rC,oBACd,EC/IF,MAAMuG,uBAiBJ,WAAA53C,CAAYsmC,GACV,MAAM,OACJviC,EAAM,WACNmzC,EAAU,gBACVW,EAAe,YACfC,EAAW,KACXC,EAAI,MACJhE,KACGiE,GACD1R,EACJ7gC,KAAK8mC,OAASjE,WAAW0P,GACzB/3C,OAAOsmC,OAAO9gC,KAAM,CAClB1B,SACAmzC,aACAW,kBACAC,cACAC,OACAhE,SAEJ,CACA,KAAA75B,GACEzU,KAAKysC,UAAW,EAChBzsC,KAAK8mC,OAAOryB,OACd,CACA,MAAAuP,CAAO4oB,EAASC,GAOd,YANgB,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQ7sC,KAAK2F,MAAMhI,QAEL,IAAZivC,GAAiBC,GAAS,GAC5B7sC,KAAKysC,UAAW,EACTzsC,KAAK8mC,OAAO9iB,OAAO4oB,EAASC,IAE9B,IAAIhC,aACb,CACA,SAAIllC,GACF,OAAO3F,KAAK8mC,OAAOnhC,QAAU3F,KAAKysC,WAAazsC,KAAKyxC,WAAazxC,KAAKoyC,gBAAkB,GAC1F,CACA,iBAAInK,GACF,OAAOjoC,KAAK8mC,OAAOmB,aACrB,CACA,iBAAIE,GACF,OAAOnoC,KAAK8mC,OAAOqB,aACrB,CACA,gBAAII,GACF,OAAOvoC,KAAK8mC,OAAOnhC,OAAS3F,KAAKqyC,aAAeryC,KAAK2F,KACvD,CACA,cAAIokC,GACF,OAAOsB,QAAQrrC,KAAK8mC,OAAOnhC,QAAU3F,KAAKyxC,UAC5C,CACA,WAAAvE,CAAYD,EAAIZ,GAId,QAHc,IAAVA,IACFA,EAAQ,CAAC,GAEPrsC,KAAKysC,SAAU,OAAO,IAAI5B,cAC9B,MAAMpE,EAAQzmC,KAAK8mC,OAAOL,MAE1B,IAAI6D,EAAUtqC,KAAK8mC,OAAOoG,YAAYD,EAAIjtC,KAAKwyC,iBAAiBnG,IAUhE,OATI/B,EAAQlJ,WAAuC,IAA3BphC,KAAK6tC,WAAWxB,KACtC/B,EAAU,IAAIO,cACd7qC,KAAK8mC,OAAOL,MAAQA,GAEjB6D,EAAQlJ,UAAaphC,KAAKyxC,YAAezxC,KAAKsyC,MAASjG,EAAM5I,QAChE6G,EAAQlJ,SAAWphC,KAAKoyC,iBAE1B9H,EAAQY,MAAQZ,EAAQlJ,WAAaphC,KAAKyxC,WAC1CzxC,KAAKysC,SAAWpB,QAAQf,EAAQlJ,UACzBkJ,CACT,CACA,MAAAqB,CAAO9xC,EAAKwyC,EAAO3K,GAEjB,OAAO1hC,KAAK8mC,OAAO6E,OAAO9xC,EAAKmG,KAAKwyC,iBAAiBnG,GAAQ3K,EAC/D,CACA,kBAAAkK,GACE,OAAI5rC,KAAKysC,UAAYzsC,KAAKyxC,WAAmB,IAAI5G,eACjD7qC,KAAKysC,UAAW,EACT,IAAI5B,cAAc,CACvBzJ,SAAUphC,KAAKoyC,kBAEnB,CACA,YAAAnE,GACE,OAAO,IAAIpD,aACb,CACA,WAAAiC,CAAYF,EAASC,GACnB,OAAO7sC,KAAK8mC,OAAOgG,YAAYF,EAASC,EAC1C,CACA,UAAAE,CAAWrL,GACT,OAAO1hC,KAAK8mC,OAAOiG,WAAWrL,EAChC,CACA,YAAA8K,CAAaI,EAASC,EAAOR,GAO3B,YANgB,IAAZO,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQ7sC,KAAK2F,MAAMhI,QAEdqC,KAAK8mC,OAAO0F,aAAaI,EAASC,EAAOR,EAClD,CACA,eAAArC,CAAgB7I,EAAWuL,QACP,IAAdA,IACFA,EAAY3M,IAEd,MACMiS,EAAShyC,KAAK2F,MAAMhI,OACpB80C,EAAW/2C,KAAKe,IAAIf,KAAKS,IAAIglC,EAFpB,GAEwC6Q,GACvD,OAAQtF,GACN,KAAK3M,GACL,KAAKA,GACH,OAAO//B,KAAK+pC,WAAa0I,EANd,EAOb,KAAK1S,GACL,KAAKA,GACH,OAAO//B,KAAK+pC,WAAa0I,EAAWT,EAEtC,QACE,OAAOS,EAEb,CACA,mBAAA9F,CAAoBC,EAASC,GAO3B,YANgB,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQ7sC,KAAK2F,MAAMhI,QAEdqC,KAAK2F,MAAMuJ,MAAM09B,EAASC,GAAOlvC,MAC1C,CACA,UAAAkwC,CAAWxB,GACT,OAAOrsC,KAAK8mC,OAAO+G,WAAW7tC,KAAKwyC,iBAAiBnG,OAAarsC,KAAK1B,QAAU0B,KAAK1B,OAAOuvC,WAAW7tC,KAAKwyC,iBAAiBnG,IAC/H,CACA,QAAA5B,GACEzqC,KAAK8mC,OAAO2D,UACd,CACA,SAAIhE,GACF,MAAO,CACL1/B,OAAQ/G,KAAK2F,MACbshC,eAAgBjnC,KAAKmoC,cACrBrB,OAAQ9mC,KAAK8mC,OAAOL,MACpBgG,SAAUzsC,KAAKysC,SAEnB,CACA,SAAIhG,CAAMA,GACRzmC,KAAK8mC,OAAOL,MAAQA,EAAMK,OAC1B9mC,KAAKysC,SAAWhG,EAAMgG,QACxB,CACA,gBAAA+F,CAAiBnG,GACf,IAAIqG,EACJ,MAAO,IACFrG,EACH6B,kBAA4B,MAAT7B,GAAqE,OAAnDqG,EAAwBrG,EAAM6B,uBAA4B,EAASwE,EAAsB5L,UAAqB,MAATuF,OAAgB,EAASA,EAAM6B,kBAE7K,CACA,GAAAT,CAAIpB,GACF,OAAO,IAAIxB,aACb,EAEFsH,uBAAuBQ,oBAAsB,CAC3C,EAAK,KACL,EAAK,snIAEL,IAAK,KC5JP/Q,MAAMK,aApBN,MAAMA,qBAAqBK,OAWzB,aAAA0F,CAAcnH,GACZ33B,MAAM8+B,cAAcnH,EACtB,CACA,OAAAmL,CAAQnL,GACN,MAAMkB,EAAOlB,EAAKkB,KACdA,IAAMlB,EAAKkO,SAAWppC,GAASA,EAAMitC,OAAO7Q,IAAS,GACzD74B,MAAM8iC,QAAQnL,EAChB,GCZF,MAAMqB,sBAAsBI,OAmB1B,WAAA/nC,CAAYsmC,GACV33B,MAAM,IACDg5B,cAAc+J,YACdpL,EACHgS,YAAar4C,OAAOsmC,OAAO,CAAC,EAAGqR,uBAAuBQ,oBAA6B,MAAR9R,OAAe,EAASA,EAAKgS,cAE5G,CACA,aAAA7K,CAAcnH,GACZ33B,MAAM8+B,cAAcnH,EACtB,CACA,OAAAmL,CAAQnL,GACNA,EAAKgS,YAAcr4C,OAAOsmC,OAAO,CAAC,EAAG9gC,KAAK6yC,YAAahS,EAAKgS,aAC5D3pC,MAAM8iC,QAAQnL,GACd7gC,KAAK8yC,cACP,CACA,YAAAA,GACE,MAAMC,EAAO/yC,KAAK6yC,YAClB7yC,KAAKowC,QAAU,GACfpwC,KAAKgzC,iBAAcz0B,EACnBve,KAAKmwC,OAAS,GACdnwC,KAAKizC,cAAgB,CAAC,EACtB,MAAMC,EAAUlzC,KAAK+hC,KACrB,IAAKmR,IAAYH,EAAM,OACvB,IAAII,GAAiB,EACjBC,GAAgB,EACpB,IAAK,IAAI11C,EAAI,EAAGA,EAAIw1C,EAAQv1C,SAAUD,EAAG,CACvC,GAAIsC,KAAKqzC,OAAQ,CACf,MAAMz2C,EAAIs2C,EAAQhkC,MAAMxR,GAClB41C,EAAS94C,OAAO+hB,KAAKvc,KAAKqzC,QAAQ11B,QAAO41B,GAA8B,IAArB32C,EAAE5C,QAAQu5C,KAElED,EAAOt1B,MAAK,CAACpnB,EAAG0P,IAAMA,EAAE3I,OAAS/G,EAAE+G,SAEnC,MAAM41C,EAAQD,EAAO,GACrB,GAAIC,EAAO,CACT,MAAM,OACJC,EAAM,OACN7iB,KACG8iB,GACDhR,cAAcziC,KAAKqzC,OAAOE,IACxBG,EAAY,CAChBpB,KAAMtyC,KAAKsyC,KACXhE,MAAOtuC,KAAKsuC,MACZ8D,gBAAiBpyC,KAAKoyC,gBACtBC,YAAaryC,KAAKqyC,YAClBtE,UAAW/tC,KAAK+tC,UAChBT,QAASttC,KAAKstC,WACXmG,EACH9iB,SACAryB,OAAQ0B,MAEJ2zC,EAAwB,MAAVhjB,EAAiB,IAAIiR,MAAMgS,YAAYF,GAAwB7Q,WAAW6Q,GAC1FC,IACF3zC,KAAKowC,QAAQz2C,KAAKg6C,GACdH,IAAQxzC,KAAKgzC,YAAcW,GAG1B3zC,KAAKizC,cAAcM,KAAQvzC,KAAKizC,cAAcM,GAAS,IAC5DvzC,KAAKizC,cAAcM,GAAO55C,KAAKqG,KAAKowC,QAAQzyC,OAAS,IAEvDD,GAAK61C,EAAM51C,OAAS,EACpB,QACF,CACF,CACA,IAAIy6B,EAAO8a,EAAQx1C,GACfm2C,EAAWzb,KAAQ2a,EACvB,GAAI3a,IAAS8J,cAAc4R,UAAW,CACpC9zC,KAAKmwC,OAAOx2C,KAAKqG,KAAKowC,QAAQzyC,QAC9B,QACF,CACA,GAAa,MAATy6B,GAAyB,MAATA,EAAc,CAChC+a,GAAkBA,EAClB,QACF,CACA,GAAa,MAAT/a,GAAyB,MAATA,EAAc,CAChCgb,GAAiBA,EACjB,QACF,CACA,GAAIhb,IAAS8J,cAAc6R,YAAa,CAGtC,KAFEr2C,EACF06B,EAAO8a,EAAQx1C,IACV06B,EAAM,MACXyb,GAAU,CACZ,CACA,MAAMG,EAAMH,EAAU,IAAI1B,uBAAuB,CAC/CV,WAAY2B,EACZd,KAAMtyC,KAAKsyC,KACXhE,MAAOtuC,KAAKsuC,MACZ8D,gBAAiBpyC,KAAKoyC,gBACtBC,YAAaryC,KAAKqyC,eACf5P,cAAcsQ,EAAK3a,IACtB95B,OAAQ0B,OACL,IAAI6xC,uBAAuB,CAC9BzZ,OACAkW,MAAOtuC,KAAKsuC,MACZwD,YAAaqB,IAEfnzC,KAAKowC,QAAQz2C,KAAKq6C,EACpB,CACF,CACA,SAAIvN,GACF,MAAO,IACFv9B,MAAMu9B,MACT2J,QAASpwC,KAAKowC,QAAQ95C,KAAIgQ,GAAKA,EAAEmgC,QAErC,CACA,SAAIA,CAAMA,GACR,IAAKA,EAEH,YADAzmC,KAAKyU,QAGP,MAAM,QACJ27B,KACG6D,GACDxN,EACJzmC,KAAKowC,QAAQj+B,SAAQ,CAAC7L,EAAG4tC,IAAO5tC,EAAEmgC,MAAQ2J,EAAQ8D,KAClDhrC,MAAMu9B,MAAQwN,CAChB,CACA,KAAAx/B,GACEvL,MAAMuL,QACNzU,KAAKowC,QAAQj+B,SAAQ7L,GAAKA,EAAEmO,SAC9B,CACA,cAAIs1B,GACF,OAAO/pC,KAAKgzC,YAAchzC,KAAKgzC,YAAYjJ,WAAa/pC,KAAKowC,QAAQ+D,OAAM7tC,GAAKA,EAAEyjC,YACpF,CACA,YAAI0C,GACF,OAAOzsC,KAAKowC,QAAQ+D,OAAM7tC,GAAKA,EAAEmmC,UACnC,CACA,WAAI6E,GACF,OAAOtxC,KAAKowC,QAAQ+D,OAAM7tC,GAAKA,EAAEgrC,SACnC,CACA,cAAIG,GACF,OAAOzxC,KAAKowC,QAAQ+D,OAAM7tC,GAAKA,EAAEmrC,YACnC,CACA,QAAAhH,GACEzqC,KAAKowC,QAAQj+B,SAAQ7L,GAAKA,EAAEmkC,aAC5BvhC,MAAMuhC,UACR,CACA,iBAAIxC,GACF,OAAOjoC,KAAKgzC,YAAchzC,KAAKgzC,YAAY/K,cAAgBjoC,KAAKowC,QAAQz5C,QAAO,CAACkD,EAAKyM,IAAMzM,EAAOyM,EAAE2hC,eAAe,GACrH,CACA,iBAAIA,CAAcA,GAChB,GAAIjoC,KAAKgzC,YAAa,CACpB,MAAMtR,EAAO1hC,KAAK8sC,YAAY9sC,KAAK6wC,eAAe7wC,KAAKowC,QAAQp2C,QAAQgG,KAAKgzC,cAAgBhzC,KAAKgzC,YAAYzK,aAAa5qC,QAC1HqC,KAAKgzC,YAAY/K,cAAgBA,EACjCjoC,KAAK+sC,WAAWrL,GAChB1hC,KAAKyqC,UACP,MAAOvhC,MAAM++B,cAAgBA,CAC/B,CACA,SAAItiC,GACF,OAAO3F,KAAKgzC,YAAchzC,KAAKgzC,YAAYrtC,MAE3C3F,KAAKowC,QAAQz5C,QAAO,CAACkD,EAAKyM,IAAMzM,EAAOyM,EAAEX,OAAO,GAClD,CACA,SAAIA,CAAMA,GACR,GAAI3F,KAAKgzC,YAAa,CACpB,MAAMtR,EAAO1hC,KAAK8sC,YAAY9sC,KAAK6wC,eAAe7wC,KAAKowC,QAAQp2C,QAAQgG,KAAKgzC,cAAgBhzC,KAAKgzC,YAAYzK,aAAa5qC,QAC1HqC,KAAKgzC,YAAYrtC,MAAQA,EACzB3F,KAAK+sC,WAAWrL,GAChB1hC,KAAKyqC,UACP,MAAOvhC,MAAMvD,MAAQA,CACvB,CACA,cAAIyiC,GACF,OAAOpoC,KAAKgzC,YAAchzC,KAAKgzC,YAAY5K,WAAal/B,MAAMk/B,UAChE,CACA,cAAIA,CAAWziC,GACb,GAAI3F,KAAKgzC,YAAa,CACpB,MAAMtR,EAAO1hC,KAAK8sC,YAAY9sC,KAAK6wC,eAAe7wC,KAAKowC,QAAQp2C,QAAQgG,KAAKgzC,cAAgBhzC,KAAKgzC,YAAYzK,aAAa5qC,QAC1HqC,KAAKgzC,YAAY5K,WAAaziC,EAC9B3F,KAAK+sC,WAAWrL,GAChB1hC,KAAKyqC,UACP,MAAOvhC,MAAMk/B,WAAaziC,CAC5B,CACA,gBAAI4iC,GACF,OAAOvoC,KAAKowC,QAAQz5C,QAAO,CAACkD,EAAKyM,IAAMzM,EAAOyM,EAAEiiC,cAAc,GAChE,CACA,UAAAwE,CAAWrL,GACT,OAAOx4B,MAAM6jC,WAAWrL,GAAMyJ,UAAUnrC,KAAK4rC,qBAC/C,CACA,YAAAqC,GACE,IAAImG,EACJ,MAAM9J,EAAU,IAAIO,cACpB,IAAIwJ,EAA4F,OAAzED,EAAuBp0C,KAAKiwC,eAAejwC,KAAKuoC,aAAa5qC,cAAmB,EAASy2C,EAAqB9mC,MACrI,GAAuB,MAAnB+mC,EAAyB,OAAO/J,EAGhCtqC,KAAKowC,QAAQiE,GAAiB5H,YAAY4H,EAC9C,IAAK,IAAIH,EAAKG,EAAiBH,EAAKl0C,KAAKowC,QAAQzyC,SAAUu2C,EAAI,CAC7D,MAAMtkC,EAAI5P,KAAKowC,QAAQ8D,GAAIjG,eAC3B,IAAKr+B,EAAEwxB,SAAU,MACjBkJ,EAAQa,UAAUv7B,EACpB,CACA,OAAO06B,CACT,CACA,cAAA0C,CAAeC,EAAIZ,QACH,IAAVA,IACFA,EAAQ,CAAC,GAEX,MAAMiI,EAAYt0C,KAAKiwC,eAAejwC,KAAKuoC,aAAa5qC,QAClD2sC,EAAU,IAAIO,cACpB,IAAKyJ,EAAW,OAAOhK,EACvB,IAAK,IAA0BsG,EAAtBsD,EAAKI,EAAUhnC,MAAcsjC,EAAQ5wC,KAAKowC,QAAQ8D,KAAOA,EAAI,CACpE,IAAIxB,EACJ,MAAM6B,EAAe3D,EAAM1D,YAAYD,EAAI,IACtCZ,EACH6B,iBAAsE,OAAnDwE,EAAwBrG,EAAM6B,mBAAwF,OAA1DwE,EAAwBA,EAAsBtC,cAAmB,EAASsC,EAAsBwB,KAGjL,GADA5J,EAAQa,UAAUoJ,GACdA,EAAanJ,SAAU,KAC7B,CACA,OAAOd,CACT,CACA,WAAAwC,CAAYF,EAASC,QACH,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQ7sC,KAAKuoC,aAAa5qC,QAE5B,MAAM62C,EAAY,IAAIjF,kBACtB,OAAI3C,IAAYC,GAChB7sC,KAAKy0C,sBAAsB7H,EAASC,GAAO,CAACvmC,EAAG4tC,EAAIQ,EAAUC,KAC3D,MAAMC,EAAatuC,EAAEwmC,YAAY4H,EAAUC,GAC3CC,EAAWpJ,KAAOxrC,KAAK60C,gBAAgBX,GACvCU,EAAWlpC,KAAO1L,KAAK6wC,eAAeqD,GAClCU,aAAsBrF,oBAAmBqF,EAAW9E,WAAaoE,GACrEM,EAAU/I,OAAOmJ,EAAW,IANAJ,CAShC,CACA,YAAAhI,CAAaI,EAASC,EAAOR,GAU3B,QATgB,IAAZO,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQ7sC,KAAKuoC,aAAa5qC,aAEd,IAAV0uC,IACFA,EAAQ,CAAC,GAEPO,IAAYC,EAAO,MAAO,GAC9B,IAAIpJ,EAAQ,GAIZ,OAHAzjC,KAAKy0C,sBAAsB7H,EAASC,GAAO,CAACvmC,EAAGwb,EAAG8qB,EAASC,KACzDpJ,GAASn9B,EAAEkmC,aAAaI,EAASC,EAAOR,EAAM,IAEzC5I,CACT,CACA,eAAAoR,CAAgB/E,GACd,IAAIgF,EACJ,IAAK,IAAIC,EAAK,EAAGA,EAAK/0C,KAAKmwC,OAAOxyC,SAAUo3C,EAAI,CAC9C,MAAMvJ,EAAOxrC,KAAKmwC,OAAO4E,GACzB,KAAIvJ,GAAQsE,GAAmC,MAAvBgF,EAAatJ,CACvC,CACA,OAAOsJ,CACT,CAGA,kBAAAlJ,CAAmBoJ,GACjB,MAAM1K,EAAU,IAAIO,cACpB,GAAI7qC,KAAKsyC,MAAwB,MAAhB0C,EAAsB,OAAO1K,EAC9C,MAAM2K,EAAiBj1C,KAAKiwC,eAAejwC,KAAKuoC,aAAa5qC,QAC7D,IAAKs3C,EAAgB,OAAO3K,EAC5B,MAAM+J,EAAkBY,EAAe3nC,MACjC4nC,EAAgC,MAAhBF,EAAuBA,EAAeh1C,KAAKowC,QAAQzyC,OAOzE,OANAqC,KAAKowC,QAAQlhC,MAAMmlC,EAAiBa,GAAe/iC,SAAQ7L,IAEvD,IAAI6uC,EADD7uC,EAAEgsC,MAAwB,MAAhB0C,GAEb1K,EAAQa,UAAU7kC,EAAEslC,mBAA6C,OAAzBuJ,EAAW7uC,EAAE8pC,cAAmB,EAAS+E,EAASx3C,QAC5F,IAEK2sC,CACT,CAGA,cAAA2F,CAAenH,GACb,IAAIsM,EAAS,GACb,IAAK,IAAIlB,EAAK,EAAGA,EAAKl0C,KAAKowC,QAAQzyC,SAAUu2C,EAAI,CAC/C,MAAMtD,EAAQ5wC,KAAKowC,QAAQ8D,GACrBmB,EAAgBD,EAAOz3C,OAE7B,GADAy3C,GAAUxE,EAAMrI,aACZO,GAAOsM,EAAOz3C,OAChB,MAAO,CACL2P,MAAO4mC,EACPj2B,OAAQ6qB,EAAMuM,EAGpB,CACF,CACA,cAAAxE,CAAef,GACb,OAAO9vC,KAAKowC,QAAQlhC,MAAM,EAAG4gC,GAAYn5C,QAAO,CAACmyC,EAAKxiC,IAAMwiC,EAAOxiC,EAAEiiC,aAAa5qC,QAAQ,EAC5F,CACA,qBAAA82C,CAAsB7H,EAASC,EAAO7mC,QACtB,IAAV6mC,IACFA,EAAQ7sC,KAAKuoC,aAAa5qC,QAE5B,MAAM23C,EAAgBt1C,KAAKiwC,eAAerD,GAC1C,GAAI0I,EAAe,CACjB,MAAMC,EAAcv1C,KAAKiwC,eAAepD,GAElC2I,EAAcD,GAAeD,EAAchoC,QAAUioC,EAAYjoC,MACjEmoC,EAAoBH,EAAcr3B,OAClCy3B,EAAkBH,GAAeC,EAAcD,EAAYt3B,OAASje,KAAKowC,QAAQkF,EAAchoC,OAAOi7B,aAAa5qC,OAEzH,GADAqI,EAAGhG,KAAKowC,QAAQkF,EAAchoC,OAAQgoC,EAAchoC,MAAOmoC,EAAmBC,GAC1EH,IAAgBC,EAAa,CAE/B,IAAK,IAAItB,EAAKoB,EAAchoC,MAAQ,EAAG4mC,EAAKqB,EAAYjoC,QAAS4mC,EAC/DluC,EAAGhG,KAAKowC,QAAQ8D,GAAKA,EAAI,EAAGl0C,KAAKowC,QAAQ8D,GAAI3L,aAAa5qC,QAI5DqI,EAAGhG,KAAKowC,QAAQmF,EAAYjoC,OAAQioC,EAAYjoC,MAAO,EAAGioC,EAAYt3B,OACxE,CACF,CACF,CACA,MAAA+F,CAAO4oB,EAASC,QACE,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQ7sC,KAAKuoC,aAAa5qC,QAE5B,MAAMg4C,EAAgBzsC,MAAM8a,OAAO4oB,EAASC,GAI5C,OAHA7sC,KAAKy0C,sBAAsB7H,EAASC,GAAO,CAACvmC,EAAGwb,EAAG4yB,EAAUC,KAC1DgB,EAAcxK,UAAU7kC,EAAE0d,OAAO0wB,EAAUC,GAAQ,IAE9CgB,CACT,CACA,eAAA3L,CAAgB7I,EAAWuL,GAIzB,QAHkB,IAAdA,IACFA,EAAY3M,KAET//B,KAAKowC,QAAQzyC,OAAQ,OAAO,EACjC,MAAMi4C,EAAS,IAAInF,cAAczwC,KAAMmhC,GACvC,GAAIuL,IAAc3M,GAIhB,OAAI6V,EAAOjE,uBAA+BiE,EAAO9M,KACjD8M,EAAO7E,WACH6E,EAAOrE,sBAA8BqE,EAAO9M,IACzC9oC,KAAKuoC,aAAa5qC,QAI3B,GAAI+uC,IAAc3M,IAAkB2M,IAAc3M,GAAsB,CAEtE,GAAI2M,IAAc3M,GAAgB,CAEhC,GADA6V,EAAOlE,wBACHkE,EAAOjF,IAAMiF,EAAO9M,MAAQ3H,EAAW,OAAOA,EAClDyU,EAAO7E,UACT,CAQA,GALA6E,EAAOrE,sBACPqE,EAAOpE,yBACPoE,EAAOvE,uBAGH3E,IAAc3M,GAAgB,CAGhC,GAFA6V,EAAOjE,uBACPiE,EAAOhE,0BACHgE,EAAOjF,IAAMiF,EAAO9M,KAAO3H,EAAW,OAAOyU,EAAO9M,IAExD,GADA8M,EAAO7E,WACH6E,EAAOjF,IAAMiF,EAAO9M,KAAO3H,EAAW,OAAOyU,EAAO9M,IACxD8M,EAAO7E,UACT,CACA,OAAI6E,EAAOjF,GAAWiF,EAAO9M,IACzB4D,IAAc3M,GAA6B,GAC/C6V,EAAO7E,WACH6E,EAAOjF,GAAWiF,EAAO9M,KAC7B8M,EAAO7E,WACH6E,EAAOjF,GAAWiF,EAAO9M,IACtB,GACT,CACA,OAAI4D,IAAc3M,IAAmB2M,IAAc3M,IAEjD6V,EAAOjE,uBACPiE,EAAOhE,0BACHgE,EAAOlE,wBAAgCkE,EAAO9M,IAC9C4D,IAAc3M,GAA8B//B,KAAKuoC,aAAa5qC,QAGlEi4C,EAAO7E,WACH6E,EAAOjF,GAAWiF,EAAO9M,KAC7B8M,EAAO7E,WACH6E,EAAOjF,GAAWiF,EAAO9M,IACtB9oC,KAAKgqC,gBAAgB7I,EAAWpB,OAElCoB,CACT,CACA,mBAAAwL,CAAoBC,EAASC,QACX,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQ7sC,KAAKuoC,aAAa5qC,QAE5B,IAAI4P,EAAQ,EAIZ,OAHAvN,KAAKy0C,sBAAsB7H,EAASC,GAAO,CAACvmC,EAAGwb,EAAG4yB,EAAUC,KAC1DpnC,GAASjH,EAAEqmC,oBAAoB+H,EAAUC,EAAO,IAE3CpnC,CACT,CAGA,WAAAomC,CAAYv5B,GACV,OAAOpa,KAAK61C,aAAaz7B,GAAM,EACjC,CAGA,YAAAy7B,CAAaz7B,GACX,MAAM07B,EAAU91C,KAAKizC,cAAc74B,GACnC,OAAK07B,EACEA,EAAQx/C,KAAIy/C,GAAM/1C,KAAKowC,QAAQ2F,KADjB,EAEvB,CACA,GAAAtI,CAAIpB,GACF,MAAM/B,EAAU,IAAIO,cAEpB,OADA7qC,KAAKy0C,sBAAsB,EAAGz0C,KAAKuoC,aAAa5qC,QAAQ2I,GAAKgkC,EAAQa,UAAU7kC,EAAEmnC,IAAIpB,MAC9E/B,CACT,EAEFpI,cAAc+J,SAAW,IACpB3J,OAAO2J,SACVqG,MAAM,EACNF,gBAAiB,KAEnBlQ,cAAc4R,UAAY,IAC1B5R,cAAc6R,YAAc,KAC5B7R,cAAc8T,gBAAkB7D,uBAChCjQ,cAAc+T,gBAAkBpE,uBAChCjQ,MAAMM,cAAgBA,cC/btB,MAAMgU,oBAAoBhU,cAUxB,cAAIiU,GACF,OAAOn2C,KAAKo2C,UAAY7W,OAAOv/B,KAAK0L,MAAM/N,MAC5C,CACA,WAAApD,CAAYsmC,GACV33B,MAAM23B,EACR,CACA,aAAAmH,CAAcnH,GACZ33B,MAAM8+B,cAAcnH,EACtB,CACA,OAAAmL,CAAQnL,GACN,MAAM,GACJ7jB,EAAKhd,KAAKgd,IAAM,EAAC,KACjBtR,EAAO1L,KAAK0L,MAAQ,EAAC,UACrB0qC,EAAYp2C,KAAKo2C,WAAa,EAAC,QAC/B9I,EAAUttC,KAAKstC,WACZ+I,GACDxV,EACJ7gC,KAAKgd,GAAKA,EACVhd,KAAK0L,KAAOA,EACZ1L,KAAKo2C,UAAY16C,KAAKS,IAAIojC,OAAOviB,GAAIrf,OAAQy4C,GAC7Cp2C,KAAKstC,QAAUA,EACf,MAAMgJ,EAAU/W,OAAOv/B,KAAK0L,MAAMqa,SAAS/lB,KAAKo2C,UAAW,KACrDG,EAAQhX,OAAOv/B,KAAKgd,IAAI+I,SAAS/lB,KAAKo2C,UAAW,KACvD,IAAII,EAAiB,EACrB,KAAOA,EAAiBD,EAAM54C,QAAU44C,EAAMC,KAAoBF,EAAQE,MAAmBA,EAC7FH,EAAYtU,KAAOwU,EAAMrnC,MAAM,EAAGsnC,GAAgBhhD,QAAQ,KAAM,OAAS,IAAIm7B,OAAO3wB,KAAKo2C,UAAYI,GACrGttC,MAAM8iC,QAAQqK,EAChB,CACA,cAAItM,GACF,OAAO7gC,MAAM6gC,YAAcsB,QAAQrrC,KAAK2F,MAC1C,CACA,UAAA8wC,CAAW58C,GACT,IAAI68C,EAAS,GACTC,EAAS,GACb,MAAO,CAAEC,EAAa5mC,GAAOnW,EAAIsW,MAAM,qBAAuB,GAO9D,OANIH,IACF0mC,EAAS,IAAI/lB,OAAOimB,EAAYj5C,QAAUqS,EAC1C2mC,EAAS,IAAIhmB,OAAOimB,EAAYj5C,QAAUqS,GAE5C0mC,EAASA,EAAOxwB,OAAOlmB,KAAKo2C,UAAW,KACvCO,EAASA,EAAOzwB,OAAOlmB,KAAKo2C,UAAW,KAChC,CAACM,EAAQC,EAClB,CACA,aAAAtJ,CAAcJ,EAAIZ,GAIhB,IAAI/B,EAGJ,YANc,IAAV+B,IACFA,EAAQ,CAAC,IAGVY,EAAI3C,GAAWphC,MAAMmkC,cAAcJ,EAAGz3C,QAAQ,MAAO,IAAK62C,GACtDY,IAAI3C,EAAQY,MAAQlrC,KAAK+pC,YACvB,CAACkD,EAAI3C,EACd,CACA,cAAA0C,CAAeC,EAAIZ,GAIjB,QAHc,IAAVA,IACFA,EAAQ,CAAC,IAENrsC,KAAKstC,SAAWttC,KAAK2F,MAAMhI,OAAS,EAAIqC,KAAKo2C,UAAW,OAAOltC,MAAM8jC,eAAeC,EAAIZ,GAC7F,MAAMiK,EAAU/W,OAAOv/B,KAAK0L,MAAMqa,SAAS/lB,KAAKo2C,UAAW,KACrDG,EAAQhX,OAAOv/B,KAAKgd,IAAI+I,SAAS/lB,KAAKo2C,UAAW,MAChDM,EAAQC,GAAU32C,KAAKy2C,WAAWz2C,KAAK2F,MAAQsnC,GACtD,OAAI78B,OAAOumC,GAAU32C,KAAK0L,KAAaxC,MAAM8jC,eAAesJ,EAAQt2C,KAAK2F,MAAMhI,QAAS0uC,GACpFj8B,OAAOsmC,GAAU12C,KAAKgd,IACnBqvB,EAAM3K,MAAyB,QAAjB1hC,KAAKstC,SAAqBttC,KAAK2F,MAAMhI,OAAS,EAAIqC,KAAKo2C,UACjEltC,MAAM8jC,eAAesJ,EAAQt2C,KAAK2F,MAAMhI,QAAS0uC,GAAOlB,UAAUnrC,KAAKgtC,eAAeC,EAAIZ,IAE5FnjC,MAAM8jC,eAAeuJ,EAAMv2C,KAAK2F,MAAMhI,QAAS0uC,GAEjDnjC,MAAM8jC,eAAeC,EAAIZ,EAClC,CACA,UAAAwB,CAAWxB,GACT,MAAMxyC,EAAMmG,KAAK2F,MAEjB,IAAsB,IADD9L,EAAI+4C,OAAO,SACL/4C,EAAI8D,QAAUqC,KAAKm2C,WAAY,OAAO,EACjE,MAAOO,EAAQC,GAAU32C,KAAKy2C,WAAW58C,GACzC,OAAOmG,KAAK0L,MAAQ0E,OAAOumC,IAAWvmC,OAAOsmC,IAAW12C,KAAKgd,IAAM9T,MAAM2kC,WAAWxB,EACtF,CACA,GAAAoB,CAAIpB,GACF,MAAM/B,EAAU,IAAIO,cACpB,GAAI7qC,KAAK2F,MAAMhI,SAAWqC,KAAKo2C,UAAW,OAAO9L,EACjD,MAAM3kC,EAAQ3F,KAAK2F,MACbkxC,EAAY72C,KAAKo2C,UAAYp2C,KAAK2F,MAAMhI,OAC9C,GAAIk5C,EAAW,CACb72C,KAAKyU,QACL,IAAK,IAAI/W,EAAI,EAAGA,EAAIm5C,IAAan5C,EAC/B4sC,EAAQa,UAAUjiC,MAAM8jC,eAAe,IAAKX,IAI9C1mC,EAAM0K,MAAM,IAAI8B,SAAQ86B,GAAMjtC,KAAKgtC,eAAeC,IACpD,CACA,OAAO3C,CACT,EAEF1I,MAAMsU,YAAcA,YClGpB,MAAM/T,mBAAmBD,cACvB,4BAAO4U,CAAsBjW,GAC3B,MAAM,KACJkB,EAAI,QACJmR,KACGmD,GACDxV,EACJ,MAAO,IACFwV,EACHtU,KAAMzC,SAASyC,GAAQA,EAAOmR,EAElC,CAYA,WAAA34C,CAAYsmC,GACV33B,MAAMi5B,WAAW2U,sBAAsB,IAClC3U,WAAW8J,YACXpL,IAEP,CACA,aAAAmH,CAAcnH,GACZ33B,MAAM8+B,cAAcnH,EACtB,CACA,OAAAmL,CAAQnL,GACN,MAAM,KACJkB,EAAI,QACJmR,EAAO,OACPG,KACGgD,GACD,IACClU,WAAW8J,YACXpL,GAECkW,EAAgBv8C,OAAOsmC,OAAO,CAAC,EAAGqB,WAAW6U,sBAE/CnW,EAAKpkC,MAAKs6C,EAAcE,EAAEvrC,KAAOm1B,EAAKpkC,IAAIy6C,eAC1CrW,EAAK1kC,MAAK46C,EAAcE,EAAEj6B,GAAK6jB,EAAK1kC,IAAI+6C,eACxCrW,EAAKpkC,KAAOokC,EAAK1kC,KAAO46C,EAAcE,EAAEvrC,OAASqrC,EAAcE,EAAEj6B,KACnE+5B,EAAcz5C,EAAEoO,KAAOm1B,EAAKpkC,IAAI06C,WAAa,EAC7CJ,EAAcz5C,EAAE0f,GAAK6jB,EAAK1kC,IAAIg7C,WAAa,EACvCJ,EAAcz5C,EAAEoO,OAASqrC,EAAcz5C,EAAE0f,KAC3C+5B,EAAcnnC,EAAElE,KAAOm1B,EAAKpkC,IAAI26C,UAChCL,EAAcnnC,EAAEoN,GAAK6jB,EAAK1kC,IAAIi7C,YAGlC58C,OAAOsmC,OAAOiW,EAAe/2C,KAAKqzC,OAAQA,GAC1CnqC,MAAM8iC,QAAQ,IACTqK,EACHtU,KAAMzC,SAASyC,GAAQA,EAAOmR,EAC9BG,OAAQ0D,GAEZ,CACA,UAAAlJ,CAAWxB,GACT,MAAMgL,EAAOr3C,KAAKq3C,KAClB,OAAOnuC,MAAM2kC,WAAWxB,MAAYrsC,KAAK+pC,YAAc/pC,KAAKs3C,YAAYt3C,KAAK2F,QAAkB,MAAR0xC,IAA6B,MAAZr3C,KAAKvD,KAAeuD,KAAKvD,KAAO46C,KAAsB,MAAZr3C,KAAK7D,KAAek7C,GAAQr3C,KAAK7D,KACrL,CAGA,WAAAm7C,CAAYz9C,GACV,OAAOmG,KAAKusC,OAAOvsC,KAAKssC,MAAMzyC,EAAKmG,MAAOA,MAAMhG,QAAQH,IAAQ,CAClE,CAGA,QAAIw9C,GACF,OAAOr3C,KAAKooC,UACd,CACA,QAAIiP,CAAKA,GACPr3C,KAAKooC,WAAaiP,CACpB,CACA,cAAIjP,GACF,OAAOpoC,KAAK+pC,WAAa7gC,MAAMk/B,WAAa,IAC9C,CACA,cAAIA,CAAWziC,GACbuD,MAAMk/B,WAAaziC,CACrB,CACA,UAAAmiC,CAAW/F,GACT,OAAOA,IAAS7nC,MAAQgP,MAAM4+B,WAAW/F,EAC3C,CACA,gBAAA2H,CAAiB7I,GACf,OAAO33B,MAAMwgC,iBAAiBvH,WAAW2U,sBAAsBjW,GACjE,EAEFsB,WAAW6U,mBAAqB,KAAM,CACpCpnC,EAAG,CACDmyB,KAAMmU,YACNxqC,KAAM,EACNsR,GAAI,GACJo5B,UAAW,GAEb94C,EAAG,CACDykC,KAAMmU,YACNxqC,KAAM,EACNsR,GAAI,GACJo5B,UAAW,GAEba,EAAG,CACDlV,KAAMmU,YACNxqC,KAAM,KACNsR,GAAI,QAGRmlB,WAAW8J,SAAW,IACjB/J,cAAc+J,SACjBlK,KAAM7nC,KACNg5C,QAtHqB,cAuHrB3G,OAAQ,CAAC8K,EAAMvQ,KACb,IAAKuQ,EAAM,MAAO,GAIlB,MAAO,CAHK9X,OAAO8X,EAAKD,WAAWrxB,SAAS,EAAG,KACjCwZ,OAAO8X,EAAKF,WAAa,GAAGpxB,SAAS,EAAG,KACzCsxB,EAAKH,eACQzH,KAAK,IAAI,EAErCnD,MAAO,CAACzyC,EAAKitC,KACX,MAAOyQ,EAAKC,EAAOC,GAAQ59C,EAAIwW,MAAM,KAAK/Z,IAAI8Z,QAC9C,OAAO,IAAIlW,KAAKu9C,EAAMD,EAAQ,EAAGD,EAAI,GAGzC3V,MAAMO,WAAaA,WCzInB,MAAME,sBAAsBC,OAC1B,WAAA/nC,CAAYsmC,GACV33B,MAAM,IACDm5B,cAAc4J,YACdpL,IAEL7gC,KAAK03C,iBAAcn5B,CACrB,CACA,aAAAypB,CAAcnH,GACZ33B,MAAM8+B,cAAcnH,EACtB,CACA,OAAAmL,CAAQnL,GACN33B,MAAM8iC,QAAQnL,GACV,SAAUA,IACZ7gC,KAAK23C,gBAAap5B,EAElBve,KAAK43C,cAAgBx9C,MAAMC,QAAQwmC,EAAKkB,MAAQlB,EAAKkB,KAAKzrC,KAAIgH,IAC5D,MAAM,OACJk2C,KACGjB,GACD9P,cAAcnlC,GACZwpC,EAASjE,WAAW,CACxBkL,UAAW/tC,KAAK63C,WAChBvJ,MAAOtuC,KAAK83C,OACZlJ,YAAa5uC,KAAK+3C,gBACfxF,IAGL,OADIiB,IAAQxzC,KAAK23C,WAAa7Q,GACvBA,CAAM,IACV,GAIT,CACA,cAAAkG,CAAeC,EAAIZ,QACH,IAAVA,IACFA,EAAQ,CAAC,GAEX,MAAM/B,EAAUtqC,KAAKg4C,eAAe/K,EAAIZ,GAIxC,OAHIrsC,KAAK03C,aACPpN,EAAQa,UAAUnrC,KAAK03C,YAAYxK,YAAYD,EAAIjtC,KAAKwyC,iBAAiBnG,KAEpE/B,CACT,CACA,cAAA0N,CAAepK,EAAUvB,EAAO3K,QACb,IAAbkM,IACFA,EAAW,SAEC,IAAVvB,IACFA,EAAQ,CAAC,QAEE,IAAT3K,IACFA,EAAO,IAET,MAAMuW,EAAsB5L,EAAM3K,MAAkC,MAA1B2K,EAAM6B,iBAA2B7B,EAAM6B,iBAAiBnnC,OAAS/G,KAAK2F,MAC1GuyC,EAAal4C,KAAKmoC,cAClBgQ,EAAc9L,EAAM3K,MAAkC,MAA1B2K,EAAM6B,iBAA2B7B,EAAM6B,iBAAiBjH,eAAiBiR,EACrGE,EAAYF,EAAWhpC,MAAMipC,EAAYx6C,QACzC06C,EAAWr4C,KAAK03C,YAChBpN,EAAU,IAAIO,cACdyN,EAA4B,MAAZD,OAAmB,EAASA,EAAS5R,MA8B3D,OA3BAzmC,KAAK03C,YAAc13C,KAAKu4C,WAAW3K,EAAU,IACxCvB,GACF3K,GAGC1hC,KAAK03C,cACH13C,KAAK03C,cAAgBW,GAEvBr4C,KAAK03C,YAAYjjC,QACb0jC,IACFn4C,KAAK03C,YAAY/L,OAAOwM,EAAa,CACnC3N,KAAK,IAEPF,EAAQW,UAAYjrC,KAAK03C,YAAY/xC,MAAMhI,OAASs6C,EAAoBt6C,QAEtEy6C,IACF9N,EAAQW,WAAajrC,KAAK03C,YAAY/L,OAAOyM,EAAW,CACtD5N,KAAK,EACL9I,MAAM,IACLuJ,YAEIqN,IAGTt4C,KAAK03C,YAAYjR,MAAQ6R,IAGtBhO,CACT,CACA,kBAAAsB,GACE,MAAMtB,EAAUtqC,KAAKg4C,iBAIrB,OAHIh4C,KAAK03C,aACPpN,EAAQa,UAAUnrC,KAAK03C,YAAY9L,sBAE9BtB,CACT,CACA,YAAA2D,GACE,MAAM3D,EAAUtqC,KAAKg4C,iBAIrB,OAHIh4C,KAAK03C,aACPpN,EAAQa,UAAUnrC,KAAK03C,YAAYzJ,gBAE9B3D,CACT,CACA,UAAAyC,CAAWrL,GACT,MAAM4I,EAAU,IAAIO,cAEpB,OADInJ,GAAM4I,EAAQa,UAAUnrC,KAAKg4C,eAAe,GAAI,CAAC,EAAGtW,IACjD4I,EAAQa,UAAUnrC,KAAK03C,YAAc13C,KAAK03C,YAAY3K,WAAWrL,GAAQx4B,MAAM6jC,WAAWrL,GACnG,CACA,gBAAA8Q,CAAiBnG,GACf,IAAIqG,EAAuB8F,EAC3B,MAAO,IACFnM,EACH6B,kBAAuE,OAAnDwE,EAAwBrG,EAAM6B,uBAA4B,EAASwE,EAAsB+F,kBAAoBz4C,KAAK03C,cAAqE,OAApDc,EAAyBnM,EAAM6B,uBAA4B,EAASsK,EAAuBd,cAAgBrL,EAAM6B,iBAE5Q,CACA,UAAAqK,CAAW3K,EAAUvB,EAAO3K,GAO1B,YANc,IAAV2K,IACFA,EAAQ,CAAC,QAEE,IAAT3K,IACFA,EAAO,IAEF1hC,KAAK04C,SAAS9K,EAAU5tC,KAAMqsC,EAAO3K,EAC9C,CACA,UAAAmM,CAAWxB,GACT,OAAOnjC,MAAM2kC,WAAWxB,MAAYrsC,KAAK03C,aAAe13C,KAAK03C,YAAY7J,WAAW7tC,KAAKwyC,iBAAiBnG,IAC5G,CACA,SAAA8B,CAAUt0C,EAAKwyC,QACC,IAAVA,IACFA,EAAQ,CAAC,GAEX,IAAKxlC,EAAGyjC,GAAWphC,MAAMilC,UAAUt0C,EAAKwyC,GACxC,GAAIrsC,KAAK03C,YAAa,CACpB,IAAIiB,GACH9xC,EAAG8xC,GAAkBzvC,MAAMilC,UAAUtnC,EAAG7G,KAAKwyC,iBAAiBnG,IAC/D/B,EAAUA,EAAQa,UAAUwN,EAC9B,CACA,MAAO,CAAC9xC,EAAGyjC,EACb,CACA,aAAA+C,CAAcxzC,EAAKwyC,QACH,IAAVA,IACFA,EAAQ,CAAC,GAEX,IAAKxlC,EAAGyjC,GAAWphC,MAAMmkC,cAAcxzC,EAAKwyC,GAC5C,GAAIrsC,KAAK03C,YAAa,CACpB,IAAIiB,GACH9xC,EAAG8xC,GAAkBzvC,MAAMmkC,cAAcxmC,EAAG7G,KAAKwyC,iBAAiBnG,IACnE/B,EAAUA,EAAQa,UAAUwN,EAC9B,CACA,MAAO,CAAC9xC,EAAGyjC,EACb,CACA,KAAA71B,GACE,IAAImkC,EACsC,OAAzCA,EAAoB54C,KAAK03C,cAAwBkB,EAAkBnkC,QACpEzU,KAAK43C,cAAczlC,SAAQ7U,GAAKA,EAAEmX,SACpC,CACA,SAAI9O,GACF,OAAO3F,KAAK23C,WAAa33C,KAAK23C,WAAWhyC,MAAQ3F,KAAK03C,YAAc13C,KAAK03C,YAAY/xC,MAAQ,EAC/F,CACA,SAAIA,CAAMA,GACJ3F,KAAK23C,YACP33C,KAAK23C,WAAWhyC,MAAQA,EACxB3F,KAAK03C,YAAc13C,KAAK23C,WACxB33C,KAAKg4C,kBACA9uC,MAAMvD,MAAQA,CACvB,CACA,iBAAIsiC,GACF,OAAOjoC,KAAK23C,WAAa33C,KAAK23C,WAAW1P,cAAgBjoC,KAAK03C,YAAc13C,KAAK03C,YAAYzP,cAAgB,EAC/G,CACA,iBAAIA,CAAcA,GACZjoC,KAAK23C,YACP33C,KAAK23C,WAAW1P,cAAgBA,EAChCjoC,KAAK03C,YAAc13C,KAAK23C,WACxB33C,KAAKg4C,kBACA9uC,MAAM++B,cAAgBA,CAC/B,CACA,cAAIG,GACF,OAAOpoC,KAAK23C,WAAa33C,KAAK23C,WAAWvP,WAAapoC,KAAK03C,YAAc13C,KAAK03C,YAAYtP,WAAa,EACzG,CACA,cAAIA,CAAWA,GACb,GAAIpoC,KAAK23C,WAIP,OAHA33C,KAAK23C,WAAWvP,WAAaA,EAC7BpoC,KAAK03C,YAAc13C,KAAK23C,gBACxB33C,KAAKg4C,iBAGP,IAAI/P,EAAgB1I,OAAO6I,GAGvBpoC,KAAK03C,cACP13C,KAAK03C,YAAYtP,WAAaA,EAC9BH,EAAgBjoC,KAAK03C,YAAYzP,eAEnCjoC,KAAKioC,cAAgBA,CACvB,CACA,gBAAIM,GACF,OAAOvoC,KAAK03C,YAAc13C,KAAK03C,YAAYnP,aAAe,EAC5D,CACA,cAAIwB,GACF,IAAI8O,EACJ,OAAOxN,QAAmD,OAA1CwN,EAAqB74C,KAAK03C,kBAAuB,EAASmB,EAAmB9O,WAC/F,CACA,YAAI0C,GACF,IAAIqM,EACJ,OAAOzN,QAAmD,OAA1CyN,EAAqB94C,KAAK03C,kBAAuB,EAASoB,EAAmBrM,SAC/F,CACA,MAAAzoB,CAAO4oB,EAASC,GACd,MAAMvC,EAAU,IAAIO,cAMpB,OALI7qC,KAAK03C,aACPpN,EAAQa,UAAUnrC,KAAK03C,YAAY1zB,OAAO4oB,EAASC,IAElD1B,UAAUnrC,KAAKg4C,kBAEX1N,CACT,CACA,SAAI7D,GACF,IAAIsS,EACJ,MAAO,IACF7vC,MAAMu9B,MACTQ,eAAgBjnC,KAAKmoC,cACrByP,cAAe53C,KAAK43C,cAActhD,KAAIgH,GAAKA,EAAEmpC,QAC7CgS,eAAgBz4C,KAAK03C,YACrBA,YAAwD,OAA1CqB,EAAqB/4C,KAAK03C,kBAAuB,EAASqB,EAAmBtS,MAE/F,CACA,SAAIA,CAAMA,GACR,MAAM,cACJmR,EAAa,eACba,EAAc,YACdf,KACGzD,GACDxN,EACAmR,GAAe53C,KAAK43C,cAAczlC,SAAQ,CAAC7U,EAAG07C,IAAO17C,EAAEmpC,MAAQmR,EAAcoB,KAC3D,MAAlBP,IACFz4C,KAAK03C,YAAce,EACnBz4C,KAAK03C,YAAYjR,MAAQiR,GAE3BxuC,MAAMu9B,MAAQwN,CAChB,CACA,YAAAzH,CAAaI,EAASC,EAAOR,GAC3B,OAAOrsC,KAAK03C,YAAc13C,KAAK03C,YAAYlL,aAAaI,EAASC,EAAOR,GAAS,EACnF,CACA,WAAAS,CAAYF,EAASC,GACnB,OAAO7sC,KAAK03C,YAAc13C,KAAK03C,YAAY5K,YAAYF,EAASC,GAAS3jC,MAAM4jC,YAAYF,EAASC,EACtG,CACA,QAAApC,GACMzqC,KAAK03C,aAAa13C,KAAK03C,YAAYjN,WACvCvhC,MAAMuhC,UACR,CACA,eAAAT,CAAgB7I,EAAWuL,GACzB,OAAO1sC,KAAK03C,YAAc13C,KAAK03C,YAAY1N,gBAAgB7I,EAAWuL,GAAaxjC,MAAM8gC,gBAAgB7I,EAAWuL,EACtH,CACA,aAAIqB,GACF,OAAO/tC,KAAK03C,YAAc13C,KAAK03C,YAAY3J,UAAY/tC,KAAK63C,UAC9D,CACA,aAAI9J,CAAUA,GACZ/tC,KAAK63C,WAAa9J,CACpB,CACA,SAAIO,GACF,OAAOtuC,KAAK03C,YAAc13C,KAAK03C,YAAYpJ,MAAQtuC,KAAK83C,MAC1D,CACA,SAAIxJ,CAAMA,GACRtuC,KAAK83C,OAASxJ,CAChB,CACA,eAAIM,GACF,OAAO5uC,KAAK03C,YAAc13C,KAAK03C,YAAY9I,YAAc5uC,KAAK+3C,YAChE,CACA,eAAInJ,CAAYA,GACd5uC,KAAK+3C,aAAenJ,CACtB,CACA,WAAItB,GACF,OAAOttC,KAAK03C,YAAc13C,KAAK03C,YAAYpK,QAAUttC,KAAKi5C,QAC5D,CACA,WAAI3L,CAAQA,GACVttC,KAAKi5C,SAAW3L,CAClB,CACA,UAAAxF,CAAW/F,GACT,OAAO3nC,MAAMC,QAAQ0nC,GAAQ/hC,KAAK43C,cAAczD,OAAM,CAAC72C,EAAG07C,KACxD,IAAKjX,EAAKiX,GAAK,OACf,MACEjX,KAAMmX,KACH3P,GACDxH,EAAKiX,GACT,OAAO/Y,eAAe3iC,EAAGisC,IAAajsC,EAAEwqC,WAAWoR,EAAQ,IACxDhwC,MAAM4+B,WAAW/F,EACxB,CACA,gBAAAuG,CAAiB3iC,GACf,IAAIwzC,EACJ,OAAO9N,QAAmD,OAA1C8N,EAAqBn5C,KAAK03C,kBAAuB,EAASyB,EAAmB7Q,iBAAiB3iC,GAChH,EAMF08B,cAAc4J,SAAW,IACpB3J,OAAO2J,SACVyM,SAAU,CAAC9K,EAAU9G,EAAQuF,EAAO3K,KAClC,IAAKoF,EAAO8Q,cAAcj6C,OAAQ,OAClC,MAAMu6C,EAAapR,EAAOqB,cAGpBiR,EAAStS,EAAO8Q,cAActhD,KAAI,CAACgH,EAAGgQ,KAC1C,MAAM+rC,EAAYvS,EAAO4Q,cAAgBp6C,EACnCg8C,EAAgBD,EAAY/7C,EAAEirC,aAAa5qC,OAASL,EAAE0sC,gBAAgB1sC,EAAEirC,aAAa5qC,OAAQoiC,IAWnG,OAVIziC,EAAE6qC,gBAAkB+P,GACtB56C,EAAEmX,QACFnX,EAAEquC,OAAOuM,EAAY,CACnB1N,KAAK,KAEG6O,GACV/7C,EAAE0mB,OAAOs1B,GAEXh8C,EAAEquC,OAAOiC,EAAU9G,EAAO0L,iBAAiBnG,IAC3C/uC,EAAEyvC,WAAWrL,GACN,CACLp0B,QACAisC,OAAQj8C,EAAE6qC,cAAcxqC,OACxBgvC,oBAAqBrvC,EAAEqvC,oBAAoB,EAAGjxC,KAAKS,IAAIm9C,EAAeh8C,EAAE0sC,gBAAgB1sC,EAAEirC,aAAa5qC,OAAQoiC,MAChH,IAKH,OADAqZ,EAAOp7B,MAAK,CAACw7B,EAAIC,IAAOA,EAAGF,OAASC,EAAGD,QAAUE,EAAG9M,oBAAsB6M,EAAG7M,sBACtE7F,EAAO8Q,cAAcwB,EAAO,GAAG9rC,MAAM,GAGhDs0B,MAAMS,cAAgBA,cCpUtB,MAAMqX,mBAAmBxX,cACvB,WAAA3nC,CAAYsmC,GACV33B,MAAM,IACDwwC,WAAWzN,YACXpL,GAEP,CACA,aAAAmH,CAAcnH,GACZ33B,MAAM8+B,cAAcnH,EACtB,CACA,OAAAmL,CAAQnL,GACN,MACE8Y,KAAMC,KACHC,GACDhZ,EACJ,GAAI+Y,EAAO,CACT,MAAME,EAAUF,EAAMtjD,KAAIgjB,GAAKA,EAAE3b,SAC3Bo8C,EAAiBr+C,KAAKe,OAAOq9C,GAC7BE,EAAiBt+C,KAAKS,OAAO29C,GAAWC,EAC9CF,EAAM9X,KAAO,IAAIpR,OAAOopB,GACpBC,IAAgBH,EAAM9X,MAAQ,IAAM,IAAIpR,OAAOqpB,GAAkB,KACrEh6C,KAAK25C,KAAOC,CACd,CACA1wC,MAAM8iC,QAAQ6N,EAChB,CACA,cAAA7M,CAAeC,EAAIZ,QACH,IAAVA,IACFA,EAAQ,CAAC,GAEX,MAAM4N,EAAYv+C,KAAKe,IAAIuD,KAAKgqC,gBAAgB,EAAGjK,IAAwB//B,KAAK2F,MAAMhI,QAChFusB,EAAUlqB,KAAK25C,KAAKh8B,QAAOrE,GAAKtZ,KAAKk6C,WAAW5gC,EAAGtZ,KAAKioC,cAAgBgF,EAAIgN,KAClF,GAAI/vB,EAAQvsB,OAAQ,CACK,IAAnBusB,EAAQvsB,QACVqC,KAAKy0C,sBAAsB,EAAGz0C,KAAK2F,MAAMhI,QAAQ,CAAC2I,EAAG4tC,KACnD,MAAMiG,EAAMjwB,EAAQ,GAAGgqB,GACnBA,GAAMl0C,KAAK2F,MAAMhI,QAAUw8C,IAAQ7zC,EAAEX,QACzCW,EAAEmO,QACFnO,EAAE4mC,YAAYiN,EAAK9N,GAAM,IAG7B,MAAMz8B,EAAI1G,MAAM8jC,eAAe9iB,EAAQ,GAAGlqB,KAAK2F,MAAMhI,QAAS0uC,GAI9D,OAHuB,IAAnBniB,EAAQvsB,QACVusB,EAAQ,GAAGhb,MAAMlP,KAAKioC,cAActqC,QAAQ0S,MAAM,IAAI8B,SAAQgoC,GAAOvqC,EAAEu7B,UAAUjiC,MAAM8jC,eAAemN,MAEjGvqC,CACT,CACA,OAAO,IAAIi7B,cAAc,CACvBK,MAAOlrC,KAAK+pC,YAEhB,CACA,WAAA+C,CAAYF,EAASC,GAQnB,YAPgB,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQ7sC,KAAKuoC,aAAa5qC,QAGrB,IAAI4tC,sBAAsB,GAAIqB,EACvC,CACA,MAAA5oB,CAAO4oB,EAASC,GAOd,QANgB,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQ7sC,KAAKuoC,aAAa5qC,QAExBivC,IAAYC,EAAO,OAAO,IAAIhC,cAClC,MAAMoP,EAAYv+C,KAAKe,IAAIyM,MAAM8gC,gBAAgB,EAAGjK,IAAwB//B,KAAK2F,MAAMhI,QACvF,IAAImrC,EACJ,IAAKA,EAAM8D,EAAS9D,GAAO,IAAKA,EAAK,CAEnC,GADgB9oC,KAAK25C,KAAKh8B,QAAOrE,GAAKtZ,KAAKk6C,WAAW5gC,EAAGtZ,KAAK2F,MAAMuJ,MAAM+qC,EAAWnR,GAAMmR,KAC/Et8C,OAAS,EAAG,KAC1B,CACA,MAAM2sC,EAAUphC,MAAM8a,OAAO8kB,EAAK+D,GAElC,OADAvC,EAAQW,WAAanC,EAAM8D,EACpBtC,CACT,CACA,cAAIP,GACF,OAAO/pC,KAAK25C,KAAK3/C,QAAQgG,KAAK2F,QAAU,CAC1C,EAGF+zC,WAAWzN,SAAW,IACjB/J,cAAc+J,SACjBiO,WAAY,CAACE,EAAMC,EAAMJ,IAAcG,EAAKpgD,QAAQqgD,EAAMJ,KAAeA,GAE3ErY,MAAM8X,WAAaA,WC/FnB,IAAIY,GCsBJ1Y,MAAMY,eArBN,MAAMA,uBAAuBF,OAW3B,aAAA0F,CAAcnH,GACZ33B,MAAM8+B,cAAcnH,EACtB,CACA,OAAAmL,CAAQnL,GACN33B,MAAM8iC,QAAQ,IACTnL,EACHkO,SAAUlO,EAAKkB,MAEnB,GDlBF,MAAMK,qBAAqBE,OA6BzB,WAAA/nC,CAAYsmC,GACV33B,MAAM,IACDk5B,aAAa6J,YACbpL,GAEP,CACA,aAAAmH,CAAcnH,GACZ33B,MAAM8+B,cAAcnH,EACtB,CACA,OAAAmL,CAAQnL,GACN33B,MAAM8iC,QAAQnL,GACd7gC,KAAKu6C,gBACP,CACA,cAAAA,GACE,MAAMr9C,EAAQ,KAAO8C,KAAKw6C,cAAgB,WAAa,IAEjDr9C,GAAO6C,KAAKy6C,MAAQ,IAAMza,aAAahgC,KAAK06C,OAAS,SAAW16C,KAAKy6C,MAAQ,MAAQ,IAAM,IACjGz6C,KAAK26C,cAAgB,IAAIna,OAAOtjC,EAFpB,OAEkCC,GAC9C6C,KAAK46C,kBAAoB,IAAIpa,OAAO,IAAMxgC,KAAK66C,WAAWvkD,IAAI0pC,cAAcyP,KAAK,IAAM,IAAK,KAC5FzvC,KAAK86C,0BAA4B,IAAIta,OAAOR,aAAahgC,KAAK+6C,oBAAqB,IACrF,CACA,0BAAAC,CAA2Br1C,GACzB,OAAOA,EAAMnQ,QAAQwK,KAAK86C,0BAA2B,GACvD,CACA,0BAAAG,CAA2Bt1C,GAEzB,MAAMu1C,EAAQv1C,EAAM0K,MAAMrQ,KAAK06C,OAE/B,OADAQ,EAAM,GAAKA,EAAM,GAAG1lD,QAAQ,wBAAyBwK,KAAK+6C,oBACnDG,EAAMzL,KAAKzvC,KAAK06C,MACzB,CACA,aAAArN,CAAcJ,EAAIZ,QACF,IAAVA,IACFA,EAAQ,CAAC,GAEX,MAAO8O,EAAQ7Q,GAAWphC,MAAMmkC,cAAcrtC,KAAKg7C,2BAA2Bh7C,KAAKy6C,OAASz6C,KAAK66C,WAAWl9C,SAS5G0uC,EAAM5I,OAAS4I,EAAM7B,MAAQ6B,EAAM5I,QAAU4I,EAAM7B,KAAOyC,EAAGz3C,QAAQwK,KAAK46C,kBAAmB56C,KAAK06C,OAASzN,GAAKZ,GAGhH,OAFIY,IAAOkO,IAAQ7Q,EAAQY,MAAO,IAC9BiQ,GAAWn7C,KAAKo7C,eAAkBp7C,KAAK2F,OAAoB,MAAXw1C,GAAgB7Q,EAAQa,UAAUnrC,KAAKktC,YAAY,MAChG,CAACiO,EAAQ7Q,EAClB,CACA,gBAAA+Q,CAAiBr+B,EAAIs+B,QACQ,IAAvBA,IACFA,GAAqB,GAEvB,IAAInmC,EAAQ,EACZ,IAAK,IAAI2zB,EAAM,EAAGA,EAAM9rB,IAAM8rB,EACxB9oC,KAAK+G,OAAO/M,QAAQgG,KAAK+6C,mBAAoBjS,KAASA,MACtD3zB,EACEmmC,IAAoBt+B,GAAMhd,KAAK+6C,mBAAmBp9C,SAG1D,OAAOwX,CACT,CACA,yBAAAomC,CAA0BrsC,GAIxB,YAHc,IAAVA,IACFA,EAAQlP,KAAK+G,QAER/G,KAAKq7C,iBAAiBr7C,KAAKg7C,2BAA2B9rC,GAAOvR,QAAQ,EAC9E,CACA,YAAA6uC,CAAaI,EAASC,EAAOR,GAQ3B,YAPgB,IAAZO,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQ7sC,KAAKuoC,aAAa5qC,SAE3BivC,EAASC,GAAS7sC,KAAKw7C,2BAA2B5O,EAASC,GACrD7sC,KAAKg7C,2BAA2B9xC,MAAMsjC,aAAaI,EAASC,EAAOR,GAC5E,CACA,cAAAW,CAAeC,EAAIZ,QACH,IAAVA,IACFA,EAAQ,CAAC,GAEX,MAAMoP,EAAsBpP,EAAM3K,MAAQ2K,EAAM6B,iBAAmB7B,EAAM6B,iBAAiBnnC,OAAS/G,KAAK+G,OAClG20C,EAAgC17C,KAAKu7C,0BAA0BE,GACrEz7C,KAAK+G,OAAS/G,KAAKg7C,2BAA2Bh7C,KAAK2F,OACnD,MAAMq7B,EAAWhhC,KAAK+G,OACtB/G,KAAK+G,QAAUkmC,EACf,MAAMj9B,EAAMhQ,KAAK4F,OACjB,IAgBI+1C,EAhBAC,GAAYlhD,MAAMsV,GAClBk7B,GAAO,EACX,GAAI0Q,EAAU,CACZ,IAAIC,EACY,MAAZ77C,KAAKvD,KAAeuD,KAAKvD,IAAM,GAAKuD,KAAK4F,OAAS5F,KAAKvD,MAAKo/C,EAAW77C,KAAKvD,KAChE,MAAZuD,KAAK7D,KAAe6D,KAAK7D,IAAM,GAAK6D,KAAK4F,OAAS5F,KAAK7D,MAAK0/C,EAAW77C,KAAK7D,KAChE,MAAZ0/C,IACE77C,KAAKstC,SACPttC,KAAK+G,OAAS/G,KAAKusC,OAAOsP,EAAU77C,MAAMxK,QAAQ4sC,aAAa0Z,eAAgB97C,KAAK06C,OACpFxP,IAASA,EAAOlK,IAAahhC,KAAK+G,SAAWslC,EAAM3K,OAEnDka,GAAW,GAGfA,IAAaA,EAAWvQ,QAAQrrC,KAAK+G,OAAOoJ,MAAMnQ,KAAK26C,gBACzD,CAEKiB,EAIHD,EAAgB,IAAI9Q,cAAc,CAChCzJ,SAAUphC,KAAK+G,OAAOmI,MAAM8xB,EAASrjC,QACrCqtC,YAAaE,EAAO,GAAK+B,EACzB/B,UANFlrC,KAAK+G,OAASi6B,EACd2a,EAAgB,IAAI9Q,eAQtB7qC,KAAK+G,OAAS/G,KAAKi7C,2BAA2Bj7C,KAAK+G,QACnD,MAAMg1C,EAAkB1P,EAAM3K,MAAQ2K,EAAM6B,iBAAmB7B,EAAM6B,iBAAiBnnC,OAAS/G,KAAK+G,OAC9Fi1C,EAA4Bh8C,KAAKu7C,0BAA0BQ,GAEjE,OADAJ,EAAc1Q,YAAc+Q,EAA4BN,GAAiC17C,KAAK+6C,mBAAmBp9C,OAC1Gg+C,CACT,CACA,oBAAAM,CAAqBnT,GACnB,GAAI9oC,KAAK+6C,mBAAoB,CAC3B,MAAMmB,EAAapT,EAAM9oC,KAAK+6C,mBAAmBp9C,OAAS,EACpDw+C,EAAen8C,KAAK2F,MAAM3L,QAAQgG,KAAK+6C,mBAAoBmB,GACjE,GAAIC,GAAgBrT,EAAK,OAAOqT,CAClC,CACA,OAAQ,CACV,CACA,0BAAAX,CAA2B9vC,EAAMsR,GAC/B,MAAMo/B,EAAyBp8C,KAAKi8C,qBAAqBvwC,GACrD0wC,GAA0B,IAAG1wC,EAAO0wC,GACxC,MAAMC,EAAuBr8C,KAAKi8C,qBAAqBj/B,GAEvD,OADIq/B,GAAwB,IAAGr/B,EAAKq/B,EAAuBr8C,KAAK+6C,mBAAmBp9C,QAC5E,CAAC+N,EAAMsR,EAChB,CACA,MAAAgH,CAAO4oB,EAASC,QACE,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQ7sC,KAAKuoC,aAAa5qC,SAE3BivC,EAASC,GAAS7sC,KAAKw7C,2BAA2B5O,EAASC,GAC5D,MAAMyP,EAAiBt8C,KAAK2F,MAAMuJ,MAAM,EAAG09B,GACrC2P,EAAgBv8C,KAAK2F,MAAMuJ,MAAM29B,GACjC6O,EAAgC17C,KAAKq7C,iBAAiBiB,EAAe3+C,QAC3EqC,KAAK+G,OAAS/G,KAAKi7C,2BAA2Bj7C,KAAKg7C,2BAA2BsB,EAAiBC,IAC/F,MAAMP,EAA4Bh8C,KAAKu7C,0BAA0Be,GACjE,OAAO,IAAIzR,cAAc,CACvBI,WAAY+Q,EAA4BN,GAAiC17C,KAAK+6C,mBAAmBp9C,QAErG,CACA,eAAAqsC,CAAgB7I,EAAWuL,GACzB,IAAK1sC,KAAK+6C,mBAAoB,OAAO5Z,EACrC,OAAQuL,GACN,KAAK3M,GACL,KAAKA,GACL,KAAKA,GACH,CACE,MAAMyc,EAAqBx8C,KAAKi8C,qBAAqB9a,EAAY,GACjE,GAAIqb,GAAsB,EAAG,CAC3B,MAAMC,EAAwBD,EAAqBx8C,KAAK+6C,mBAAmBp9C,OAC3E,GAAIwjC,EAAYsb,GAAyBz8C,KAAK2F,MAAMhI,QAAU8+C,GAAyB/P,IAAc3M,GACnG,OAAOyc,CAEX,CACA,KACF,CACF,KAAKzc,GACL,KAAKA,GACH,CACE,MAAM2c,EAAsB18C,KAAKi8C,qBAAqB9a,GACtD,GAAIub,GAAuB,EACzB,OAAOA,EAAsB18C,KAAK+6C,mBAAmBp9C,MAEzD,EAEJ,OAAOwjC,CACT,CACA,QAAAsJ,GACE,GAAIzqC,KAAK2F,MAAO,CACd,MAAMC,EAAS5F,KAAK4F,OACpB,IAAI+2C,EAAW/2C,EAGC,MAAZ5F,KAAKvD,MAAakgD,EAAWjhD,KAAKS,IAAIwgD,EAAU38C,KAAKvD,MACzC,MAAZuD,KAAK7D,MAAawgD,EAAWjhD,KAAKe,IAAIkgD,EAAU38C,KAAK7D,MACrDwgD,IAAa/2C,IAAQ5F,KAAKioC,cAAgBjoC,KAAKusC,OAAOoQ,EAAU38C,OACpE,IAAI48C,EAAY58C,KAAK2F,MACjB3F,KAAK68C,iBAAgBD,EAAY58C,KAAK88C,gBAAgBF,IACtD58C,KAAK+8C,oBAAsB/8C,KAAKy6C,MAAQ,IAAGmC,EAAY58C,KAAKg9C,oBAAoBJ,IACpF58C,KAAK+G,OAAS61C,CAChB,CACA1zC,MAAMuhC,UACR,CACA,eAAAqS,CAAgBn3C,GACd,MAAMu1C,EAAQl7C,KAAKg7C,2BAA2Br1C,GAAO0K,MAAMrQ,KAAK06C,OAUhE,OAPAQ,EAAM,GAAKA,EAAM,GAAG1lD,QAAQ,mBAAmB,CAAC2a,EAAO8sC,EAAMC,EAAOltC,IAAQitC,EAAOjtC,IAE/ErK,EAAMhI,SAAW,MAAMzC,KAAKggD,EAAM,MAAKA,EAAM,GAAKA,EAAM,GAAK,KAC7DA,EAAMv9C,OAAS,IACjBu9C,EAAM,GAAKA,EAAM,GAAG1lD,QAAQ,MAAO,IAC9B0lD,EAAM,GAAGv9C,SAAQu9C,EAAMv9C,OAAS,IAEhCqC,KAAKi7C,2BAA2BC,EAAMzL,KAAKzvC,KAAK06C,OACzD,CACA,mBAAAsC,CAAoBr3C,GAClB,IAAKA,EAAO,OAAOA,EACnB,MAAMu1C,EAAQv1C,EAAM0K,MAAMrQ,KAAK06C,OAG/B,OAFIQ,EAAMv9C,OAAS,GAAGu9C,EAAMvhD,KAAK,IACjCuhD,EAAM,GAAKA,EAAM,GAAGh1B,OAAOlmB,KAAKy6C,MAAO,KAChCS,EAAMzL,KAAKzvC,KAAK06C,MACzB,CACA,aAAArM,CAAcpB,EAAIZ,EAAOc,QACT,IAAVd,IACFA,EAAQ,CAAC,GAEX,MAAM8Q,EAAgC,IAAfn9C,KAAKy6C,OAAexN,IAAOjtC,KAAK+6C,qBAAuB9N,IAAOjtC,KAAK06C,OAASzN,IAAO7K,aAAa0Z,gBAAkB97C,KAAK66C,WAAW9sC,SAASk/B,IAClK,OAAO/jC,MAAMmlC,cAAcpB,EAAIZ,EAAOc,KAAegQ,CACvD,CACA,iBAAIlV,GACF,OAAOjoC,KAAKg7C,2BAA2Bh7C,KAAK88C,gBAAgB98C,KAAK2F,QAAQnQ,QAAQwK,KAAK06C,MAAOtY,aAAa0Z,eAC5G,CACA,iBAAI7T,CAAcA,GAChB/+B,MAAM++B,cAAgBA,CACxB,CACA,cAAIG,GACF,OAAOpoC,KAAKssC,MAAMtsC,KAAKioC,cAAejoC,KACxC,CACA,cAAIooC,CAAWxhC,GACb5G,KAAKmoC,cAAgBnoC,KAAKusC,OAAO3lC,EAAG5G,MAAMxK,QAAQ4sC,aAAa0Z,eAAgB97C,KAAK06C,MACtF,CAGA,UAAI90C,GACF,OAAO5F,KAAKooC,UACd,CACA,UAAIxiC,CAAOA,GACT5F,KAAKooC,WAAaxiC,CACpB,CACA,iBAAI40C,GACF,OAAmB,MAAZx6C,KAAKvD,KAAeuD,KAAKvD,IAAM,GAAiB,MAAZuD,KAAK7D,KAAe6D,KAAK7D,IAAM,CAC5E,CACA,iBAAIi/C,GACF,OAAmB,MAAZp7C,KAAKvD,KAAeuD,KAAKvD,IAAM,GAAiB,MAAZuD,KAAK7D,KAAe6D,KAAK7D,IAAM,CAC5E,CACA,gBAAAmsC,CAAiB3iC,GAGf,OAAQuD,MAAMo/B,iBAAiB3iC,IAAUy8B,aAAakN,aAAavhC,SAASpI,IAAUy8B,aAAakN,aAAavhC,SAAS/N,KAAKooC,gBAA4B,IAAVziC,GAA8B,KAAf3F,KAAK2F,MACtK,EAEF20C,GAAgBlY,aAChBA,aAAa0Z,eAAiB,IAC9B1Z,aAAakN,aAAe,IAAIhN,OAAOgN,aAAc,GACrDlN,aAAa6J,SAAW,IACnB3J,OAAO2J,SACVlK,KAAM3xB,OACNsqC,MAAO,IACPK,mBAAoB,GACpBF,WAAY,CAACP,GAAcwB,gBAC3Br/C,IAAK2T,OAAOgtC,iBACZjhD,IAAKiU,OAAOitC,iBACZ5C,MAAO,EACPoC,gBAAgB,EAChBE,oBAAoB,EACpBzQ,MAAOl8B,OACPm8B,OAAQ3lC,GAAKA,EAAE02C,eAAe,QAAS,CACrCC,aAAa,EACbC,sBAAuB,MAG3B5b,MAAMQ,aAAeA,aElTrB,MAAMqb,GAAY,CAChBC,OAAQ,QACRC,SAAU,gBACVC,MAAO,cAGT,SAASC,WAAWtmC,EAAK7L,EAAMsR,QAChB,IAATtR,IACFA,EAAO+xC,GAAUC,aAER,IAAP1gC,IACFA,EAAKygC,GAAUC,QAEjB,MAAM5W,EAASjE,WAAWtrB,GAC1B,OAAO5R,GAASmhC,EAAO4H,aAAYpxC,IACjCA,EAAEoO,GAAQ/F,EACHrI,EAAE0f,KAEb,CAMA4kB,MAAM6b,UAAYA,GAClB7b,MAAMic,WAAaA,WACnBjc,MAAMkc,KALN,SAASA,KAAKn4C,EAAOo8B,EAAMr2B,EAAMsR,GAC/B,OAAO6gC,WAAW9b,EAAMr2B,EAAMsR,EAAvB6gC,CAA2Bl4C,EACpC,EC0GAi8B,MAAMgS,YAxHN,MAAMA,oBAAoB1R,cACxB,cAAI6b,GACF,IAAIje,EACJ,OAA4G,OAApGA,EAAO1lC,MAAMC,QAAQ2F,KAAK2wB,QAAU3wB,KAAK2wB,OAAO,GAAK3wB,KAAK2wB,SAAW9yB,IAAW,EAAImC,KAAK2wB,QAAkBmP,EAAO,CAC5H,CACA,YAAIke,GACF,IAAIC,EACJ,OAA8E,OAAtEA,EAAQ7jD,MAAMC,QAAQ2F,KAAK2wB,QAAU3wB,KAAK2wB,OAAO,GAAK3wB,KAAK2wB,QAAkBstB,EAAQpgD,GAC/F,CACA,WAAAtD,CAAYsmC,GACV33B,MAAM23B,EACR,CACA,aAAAmH,CAAcnH,GACZ33B,MAAM8+B,cAAcnH,EACtB,CACA,OAAAmL,CAAQnL,GACN,IAAIqd,EAAOC,EAAOC,EAClB,MAAM,OACJztB,KACG+iB,GACDjR,cAAc5B,GAClB7gC,KAAKq+C,WAAa7jD,OAAOsmC,OAAO,CAAC,EAAG9gC,KAAKq+C,WAAY3K,GACrD,MAAM9C,EAAQ/N,WAAW7iC,KAAKq+C,YAC9Br+C,KAAK2wB,OAAqG,OAA3FutB,EAA4D,OAAnDC,EAAkB,MAAVxtB,EAAiBA,EAASigB,EAAMjgB,QAAkBwtB,EAAQn+C,KAAK2wB,QAAkButB,EAAQrgD,IAEzHqL,MAAM8iC,QAAQ,CACZjK,KAAM,IAAIpR,OAAOj1B,KAAKS,IAAI6D,KAAKg+C,WAAangD,MAA+C,OAAjCugD,EAAgBp+C,KAAKowC,cAAmB,EAASgO,EAAczgD,SAAW,EAAGqC,KAAK+9C,aAC5I1K,OAAQ,CACN/1C,EAAGszC,GAELtC,MAAOsC,EAAMtC,MACbP,UAAW6C,EAAM7C,UACjBa,YAAagC,EAAMhC,YACnB0D,KAAM1B,EAAM0B,KACZF,gBAAiBxB,EAAMwB,gBACvBC,YAAazB,EAAMyB,aAEvB,CACA,cAAAiM,CAAepK,GACb,OAAIA,EAAKl0C,KAAKowC,QAAQzyC,OAAeqC,KAAKowC,QAAQ8D,GAC9Cl0C,KAAKg+C,WAAangD,KAAYmC,KAAKowC,QAAQzyC,OAASqC,KAAKg+C,UAC3Dh+C,KAAKowC,QAAQz2C,KAAKkpC,WAAW7iC,KAAKq+C,aAClCr+C,KAAK+hC,MAAQ,IACN/hC,KAAKowC,QAAQpwC,KAAKowC,QAAQzyC,OAAS,SAH5C,CAKF,CACA,cAAAqvC,CAAeC,EAAIZ,QACH,IAAVA,IACFA,EAAQ,CAAC,GAEX,MAAM/B,EAAU,IAAIO,cACpB,IAAK,IAAgO+F,EAAO2N,EAAnOrK,EAAuJ,OAAjJsK,EAAkG,OAAzEpK,EAAuBp0C,KAAKiwC,eAAejwC,KAAKuoC,aAAa5qC,cAAmB,EAASy2C,EAAqB9mC,OAAiBkxC,EAAwB9iD,KAAKS,IAAI6D,KAAKowC,QAAQzyC,OAAS,EAAG,GAGjOizC,EAAiD,OAAxC6N,EAAmBz+C,KAAKowC,QAAQ8D,IAAeuK,EAAmBF,GAAaA,GAAav+C,KAAKs+C,eAAepK,KAAOA,EAAI,CAClI,IAAIsK,EAAuBpK,EAAsBqK,EAAkB/L,EACnE,MAAM6B,EAAe3D,EAAM1D,YAAYD,EAAI,IACtCZ,EACH6B,iBAAsE,OAAnDwE,EAAwBrG,EAAM6B,mBAAwF,OAA1DwE,EAAwBA,EAAsBtC,cAAmB,EAASsC,EAAsBwB,KAEjL,GAAIK,EAAarJ,MAAQqT,EAAW,CAElCv+C,KAAKowC,QAAQY,MACbhxC,KAAK+hC,KAAO/hC,KAAK+hC,KAAK7yB,MAAM,GAC5B,KACF,CAEA,GADAo7B,EAAQa,UAAUoJ,GACdA,EAAanJ,SAAU,KAC7B,CACA,OAAOd,CACT,CACA,cAAAoU,CAAe9R,EAASC,GACtB,IAAI8R,EAAuBC,OACX,IAAZhS,IACFA,EAAU,GAEZ,MAAMiS,EAAkBnjD,KAAKS,KAA+D,OAAzDwiD,EAAwB3+C,KAAKiwC,eAAerD,SAAoB,EAAS+R,EAAsBrxC,QAAU,EAAGtN,KAAK+9C,WAAY,GAChK,IAAIe,EACS,MAATjS,IAAeiS,EAAyE,OAAvDF,EAAwB5+C,KAAKiwC,eAAepD,SAAkB,EAAS+R,EAAsBtxC,OAC5G,MAAlBwxC,IAAwBA,EAAiB9+C,KAAKowC,QAAQzyC,OAAS,GACnE,IAAIohD,EAAc,EAClB,IAAK,IAAIjP,EAAagP,EAAgBD,GAAmB/O,IACnD9vC,KAAKowC,QAAQN,GAAY7H,gBADwC6H,IAAciP,GAGjFA,IACF/+C,KAAKowC,QAAQ/F,OAAOyU,EAAiBC,EAAc,EAAGA,GACtD/+C,KAAK+hC,KAAO/hC,KAAK+hC,KAAK7yB,MAAM6vC,GAEhC,CACA,KAAAtqC,GACEvL,MAAMuL,QACNzU,KAAK0+C,gBACP,CACA,MAAA16B,CAAO4oB,EAASC,QACE,IAAZD,IACFA,EAAU,QAEE,IAAVC,IACFA,EAAQ7sC,KAAKuoC,aAAa5qC,QAE5B,MAAMg4C,EAAgBzsC,MAAM8a,OAAO4oB,EAASC,GAE5C,OADA7sC,KAAK0+C,eAAe9R,EAASC,GACtB8I,CACT,CACA,mBAAAhJ,CAAoBC,EAASC,GAI3B,YAHgB,IAAZD,IACFA,EAAU,GAEC,MAATC,GAAiB7sC,KAAKg+C,WAAangD,IAAiBA,IACjDqL,MAAMyjC,oBAAoBC,EAASC,EAC5C,CACA,SAAIpG,GACF,OAAOv9B,MAAMu9B,KACf,CACA,SAAIA,CAAMA,GACRzmC,KAAKowC,QAAQzyC,OAAS8oC,EAAM2J,QAAQzyC,OACpCqC,KAAK+hC,KAAO/hC,KAAK+hC,KAAK7yB,MAAM,EAAGlP,KAAKowC,QAAQzyC,QAC5CuL,MAAMu9B,MAAQA,CAChB,GCxGF,IACEuY,WAAWpd,MAAQA,KACrB,CAAE,MAAO,CC5BF,SAASqd,UAAUC,GACxB,IAAMC,EAAWhqD,SAASwV,iBAAiBu0C,GACtCC,EAASxhD,QAEdwhD,EAAShtC,SAAQ,SAACwZ,GAChB,IAAIoW,EAAO,KAYXpW,EAAQlhB,iBAAiB,SAAS,WAC3Bs3B,GAVP,SAASqd,kBACPrd,EAAOH,MAAMjW,EAAS,CACpBoW,KAAM,qBACNuQ,MAAM,KAEHzK,aACP,CAKIuX,GAEoB,KAAlBzzB,EAAQhmB,QACVgmB,EAAQhmB,MAAQ,OAElBo8B,EAAK8F,aACP,IAGAlc,EAAQlhB,iBAAiB,QAAQ,WACF,OAAzBkhB,EAAQhmB,MAAM8R,SAChBkU,EAAQhmB,MAAQ,GACZo8B,GACFA,EAAK8F,YAAY,IAGvB,GACF,GACF,CA+CO,SAASwX,kBAAkBC,GAChC,IAAMC,EAAcpqD,SAAS89B,cAAc,uBAiC3C,SAASusB,oBAAoB7zB,GAM3BA,EAAQlhB,iBAAiB,iBALzB,SAASg1C,uBACP9zB,EAAQvkB,MAAMs4C,WAAa,GAC3B/zB,EAAQL,oBAAoB,gBAAiBm0B,qBAC/C,GAGF,CAvCIH,EAAY1qB,UAAU+qB,SAAS,eAGjCL,EAAYl4C,MAAMs4C,WAAa,sBAC/BJ,EAAY1qB,UAAU5Q,OAAO,cAE7B47B,uBACAzqD,SAASwmB,KAAKiZ,UAAU5Q,OAAO,aAC/Bw7B,oBAAoBF,GAEhBC,GACFnjB,YAAW,WACTmjB,EAAYn4C,MAAMy4C,QAAU,IAC5BN,EAAYn4C,MAAMs4C,WAAa,oBAC/BH,EAAYn4C,MAAM04C,cAAgB,KACpC,GAAG,OAGDP,IACFA,EAAYn4C,MAAMy4C,QAAU,IAC5BN,EAAYn4C,MAAMs4C,WAAa,oBAC/BH,EAAYn4C,MAAM04C,cAAgB,QAGpCR,EAAYl4C,MAAMs4C,WAAa,sBAC/BJ,EAAY1qB,UAAU1M,IAAI,cAE1B63B,wBACA5qD,SAASwmB,KAAKiZ,UAAU1M,IAAI,aAC5Bs3B,oBAAoBF,GAWxB,CAwGA,SAASS,sBAAsBlyC,GAC7B,IAAIue,EAEJA,EAAUp3B,OAAOo3B,SAAWj3B,SAAS6qD,gBAAgBhyB,UACrD74B,SAAS6qD,gBAAgB54C,MAAMC,YAC7B,oBAAmB,GAAAqW,OAChB0O,EAAO,OAIZ,IAAM6zB,EACJjrD,OAAOi5B,WAAa94B,SAAS6qD,gBAAgBE,YAE3CD,EAAiB,IACnB9qD,SAASwmB,KAAKvU,MAAM+4C,aAAe,GAAHziC,OAAMuiC,EAAc,MAChDpyC,IACFA,EAAGzG,MAAM+4C,aAAe,GAAHziC,OAAMuiC,EAAc,OAG/C,CAGA,SAASL,qBAAqB/xC,GAC5B1Y,SAAS6qD,gBAAgB54C,MAAMoV,eAAe,qBAE1C3O,IACFA,EAAGzG,MAAM+4C,aAAe,IAG1BhrD,SAASwmB,KAAKvU,MAAM+4C,aAAe,GACnCnrD,OAAOorD,SAAS,EAAGh0B,QACrB,ECtQe,SAASi0B,OAAOl1C,GAC9BnW,OAAOsrD,OAAS,WACfnrD,SAAS89B,cAAc9nB,GAAMypB,UAAU1M,IAAI,oBAC3C/yB,SAAS6qD,gBAAgBprB,UAAU1M,IAAI,SACxC,CACD,CCLAm4B,CAAO,cCDA,SAASE,eACdprD,SAASsV,iBAAiB,oBAAoB,WAC5CtV,SAASwV,iBAAiB,eAAewH,SAAQ,SAACquC,EAAMlzC,GACtD,IAAM8M,EAAOomC,EAAKvtB,cAAc,eAC1BwtB,EAAQD,EAAKvtB,cAAc,gBAC3BytB,EAAWF,EAAKvtB,cAAc,oBAC9B0tB,EAAaH,EAAKvtB,cAAc,gBAChC2tB,EAAkBJ,EACrBvtB,cAAc,gBACdl2B,QAAQ,qBAaX,SAAS8jD,aACPhzC,GAEA,IAAAiyB,EAAAghB,UAAAnjD,OAAA,QAAA4gB,IAAAuiC,UAAA,GAAAA,UAAA,GADkD,CAAC,EAACC,EAAAjhB,EAAlDkhB,UAAAA,OAAS,IAAAD,EAAG,GAAEA,EAAAE,EAAAnhB,EAAE3nC,SAAAA,OAAQ,IAAA8oD,EAAG,IAAIA,EAAAC,EAAAphB,EAAEqhB,OAAAA,OAAM,IAAAD,EAAG,EAACA,EAEvC1wB,EAAY3iB,EAAG9Q,QAAQ,sBAAwB8Q,EAAG4qB,cACxD,GAAKjI,EAAL,CAEA,IAAInc,EAAY,KACV+sC,EAAYjpD,EAkBlByQ,uBAhBA,SAASy4C,MAAMC,GACRjtC,IAAWA,EAAYitC,GAC5B,IAAMC,EAAUD,EAAKjtC,EACfjX,EAAW1B,KAAKe,IAAI8kD,EAAUH,EAAW,GACzCI,EAAO9lD,KAAKI,IAAIJ,KAAKE,IAAIwB,EAAW+jD,EAASzlD,KAAKU,KAClDqlD,EAAST,EAAYQ,EAE3BhxB,EAAUppB,MAAMs6C,UAAY,OAAHhkC,OAAU+jC,EAAM,OAAA/jC,OAAM+jC,EAAS,EAAC,wBAErDF,EAAUH,EACZx4C,sBAAsBy4C,OAEtB7wB,EAAUppB,MAAMs6C,UAAY,EAEhC,GAnBsB,CAsBxB,CAEA,SAASC,qBACP,IAAMC,EAAUxnC,EAAKzU,MAAM8R,OACrBoqC,EAAWpB,EAAM96C,MAAM8R,OACvBqqC,EACJF,EAAQjkD,QAAU,GAAyB,KAApBkkD,EAASlkD,QAAiB+iD,EAASqB,QAI5D,OAFAnB,EAAgBhsB,UAAUotB,OAAO,eAAgBF,GACjDnB,EAAWsB,UAAYvB,EAASqB,QACzBD,CACT,CAjDI,CAAC1nC,EAAMqmC,EAAOC,EAAUC,EAAYC,GAAiB7yC,SAAS,QAyDlEqM,EAAK3P,iBAAiB,QAASk3C,oBAC/BlB,EAAMh2C,iBAAiB,QAASk3C,oBAChCjB,EAASj2C,iBAAiB,SAAUk3C,oBAEpCA,qBAEAf,EAAgBn2C,iBAAiB,SAAS,SAAC6O,GACrCsnC,EAAgBhsB,UAAU+qB,SAAS,iBACrCrmC,EAAE2rB,iBACF9iB,QAAQC,KAAK,aAAD1E,OAAcpQ,EAAQ,EAAC,kCAfvC,SAAS40C,uBACH9nC,EAAKzU,MAAM8R,OAAO9Z,OAAS,GAAGkjD,aAAazmC,GACb,KAA9BqmC,EAAM96C,MAAM8R,OAAO9Z,QAAekjD,aAAaJ,GAC9CC,EAASqB,SAASlB,aAAaH,EACtC,CAYIwB,GAEJ,IAEAvB,EAAWl2C,iBAAiB,SAAS,WACnC,IACGk2C,EAAWsB,WACXrB,EAAgBhsB,UAAU+qB,SAAS,eACpC,CAEA,IAAIwC,EAAW,GACXxB,IACFwB,EAAWxB,EAAW3yC,aAAa,cAAgB,IAIrD,IAAMo0C,EAAW,IAAIC,SACrBD,EAASzW,OAAO,SAAU,yBAGtB8U,GAASA,EAAM96C,OACjBy8C,EAASzW,OAAO,QAAS8U,EAAM96C,MAAM8R,QAInC2C,GAAQA,EAAKzU,OACfy8C,EAASzW,OAAO,OAAQvxB,EAAKzU,MAAM8R,QAIrC2qC,EAASzW,OAAO,WAAYwW,GAG5BG,MAAMC,cAAcC,SAAU,CAC5BC,OAAQ,OACRC,QAAS,CACP,aAAcH,cAAcI,YAE9BhnC,KAAMymC,IAELzsC,MAAK,SAACitC,GAAQ,OAAKA,EAAS9nB,MAAM,IAClCnlB,MAAK,SAACktC,GACLC,MAAM,yBACN3gC,QAAQ4gC,IAAI,iBAAkBF,GAG1BpC,IAAOA,EAAM96C,MAAQ,IACrByU,IAAMA,EAAKzU,MAAQ,IACnB+6C,IAAUA,EAASqB,SAAU,GAGjCpB,EAAW/rB,UAAUotB,OAAO,eAAe,EAC7C,IAAE,OACK,SAACgB,GACN7gC,QAAQ6gC,MAAM,uBAAwBA,GACtCF,MAAM,wCACR,GACJ,CACF,IACF,GACF,GACF,CDjIAvC,G/BCO,SAAS0C,aAAa9D,GAC3BhqD,SAASwV,iBAAiBw0C,GAAUhtC,SAAQ,SAACtE,EAAIP,GAC/C,IAAK6xB,GAAU,CACb,IAAMjN,EAAU,CACd,CAAErB,MAAO,iBAAkBC,MAAO,mBAClC,CAAED,MAAO,iBAAkBC,MAAO,mBAClC,CAAED,MAAO,iBAAkBC,MAAO,oBAG9B7S,EAASiU,EAAQ5kB,IAAU4kB,EAAQ,GAEzC1P,QAAQ3U,EAAI,CACV0B,EAAG,CAAC,MAAO,MACXswC,QAAS,CAAC,GAAK,GACfvnD,KAAM,SACNJ,SAAU0+B,SAAS,CACjB/F,MAAO5S,EAAO4S,MACdC,MAAO7S,EAAO6S,MACdxN,KAAM,OAIZ,CACF,GACF,C+BhBA2/B,CAAa,Y/BqCN,SAASC,YAAY/D,GAC1BhqD,SAASwV,iBAAiBw0C,GAAUhtC,SAAQ,SAACtE,GACtCsxB,IACH3c,QAAQ3U,EAAI,CACV0B,EAAG,CAAC,MAAO,MACXjX,KAAM,SAENJ,SAAU0+B,SAAS,CACjB/F,MAAO,iBACPC,MAAO,kBACPxN,KAAM,OAKd,GACF,C+BpDA4/B,CAAY,c/BiBL,SAASC,WAAWhE,GACzBhqD,SAASwV,iBAAiBw0C,GAAUhtC,SAAQ,SAACtE,GACtCsxB,IACH3c,QAAQ3U,EAAI,CACV0B,EAAG,CAAC,MAAO,MACXswC,QAAS,CAAC,GAAK,GACfvnD,KAAM,SAENJ,SAAU0+B,SAAS,CACjB/F,MAAO,iBACPC,MAAO,kBACPxN,KAAM,OAKd,GACF,C+BjCA6/B,CAAW,W/BuEJ,SAASC,iBACd,SAASC,gBACPluD,SAASwV,iBAAiB,gCAAgCwH,SAAQ,SAACtE,GACjE2U,QAAQ3U,EAAI,CACVme,KAAM,CAAC,QAAS,QAChB7zB,SAAU,IACVmrD,OAAQ,cACR5W,UAAW,YACX30C,MAAM,EACN2d,SAAU,SAAVA,WACE0mB,WAAWinB,cAAe,IAC5B,GAEJ,GACF,CAEAA,GAGiBn6B,eAAe,CAC9BzxB,SAAU,CAAEW,MAAO,IAAKD,SAAU,OAIjC+vB,IAAI,QAAS,CAAE5Y,EAAG,CAAE5D,KAAM,SAAWm0C,QAAS,CAAC,EAAG,KAClD33B,IAAI,QAAS,CAAE5Y,EAAG,CAAE5D,KAAM,SAAWm0C,QAAS,CAAC,EAAG,IAAM,KACxD33B,IAAI,QAAS,CAAE5Y,EAAG,CAAE5D,KAAM,SAAWm0C,QAAS,CAAC,EAAG,IAAM,MAG3D1qD,SAASwV,iBAAiB,qBAAqBwH,SAAQ,SAACtE,GDyiNtC0P,SCxiNJ,CACVrkB,KAAM2U,EACNpW,SAAU,CACRa,KAAM,UACNH,SAAU,MDoiNY,IAAIgxB,MAAM5L,ICliNjC2K,KAAI,SAAClvB,GACN,IAAQE,EAAkBF,EAAlBE,KAAM+wB,EAAYjxB,EAAZixB,QAGd6Q,qBAAW5hC,EAAM,CACf+hC,MAAO,CACL/B,MAAO,OACPE,MAAO,OACPvT,KAAM,UAKV,IAAM09B,EAAar6B,eAAe,CAChChxB,UAAU,EACVT,SAAU,CAAEa,KAAM,YAAaH,SAAU,OACxC+vB,IAAI,eAAgB,CAAE5Y,EAAG,QDg3PlB,EAAC+4B,EAAK9qB,EAAS,CAAC,KAC9B,IAAIvF,EAAS,GACT9hB,EAAW,EACf,MAAMwV,EAAO6R,EAAO7R,KACd1T,EAAWulB,EAAOvlB,SAClBM,EAAOilB,EAAOjlB,KACdkrD,GAAa3oD,MAAMvC,GAEnBmrD,EADYD,IAAc3oD,MAA2B,EAAOvC,MACb,EAAOA,KAAOkrD,EAAYjpC,aAAajiB,GAAQ,KAC9ForD,EAAOnmC,EAAOmmC,KACd5wB,EAAOvV,EAAOuV,KACd6wB,EAAcpmC,EAAOhQ,MACrBq2C,EAAY/oD,MAAM6Q,IAAkB,IAATA,GAAuB,UAATA,EACzCm4C,EAAsB,WAATn4C,EACbo4C,EAAoB,SAATp4C,EACXq4C,EAAsB,WAATr4C,EACbs4C,EAAU7pD,EAAMkuC,GAChB4b,EAAU1mC,EAAO2mC,IACjBC,EAAiB5oD,YAAVyoD,EAAsB3b,EAAI,GAAkBA,GACnD+b,EAAOJ,EAAUzoD,YAAY8sC,EAAI,IAAM,EACvCp4B,EAAY5Y,EAAakV,MAAMy3C,EAAU3b,EAAI,GAAKA,GAAOjyC,GACzD8G,EAAQqgB,EAAOrgB,OAAS,GAAK8mD,EAAUG,EAAO,GACpD,IAAIE,EAAYT,EAAY,EAAInpD,MAAMiR,GAAQA,EAAO,EACrD,MAAO,CAACxE,EAAQxJ,EAAGD,EAAGoK,KACpB,MAAQy8C,GAAqB34C,gBAAgBzE,GACvCqG,EAAQ1S,MAAM8oD,GAAelmD,EAAIkmD,EACjCY,GAAe1pD,MAAMopD,KAAWrpD,MAAMqpD,GAAWA,EAAQK,EAAkB5mD,EAAG6P,GAASoB,2BAA2B21C,EAAkBL,IACpIO,EAAe/pD,MAAM8pD,IAAgB5pD,MAAM4pD,IAAgB9pD,OAAO8pD,IAAgBA,EAAc7mD,EAGtG,GAFImmD,IAAYQ,GAAa92C,EAAQ,GAAK,GACtCu2C,IAAUO,EAAY92C,EAAQ,IAC7ByK,EAAOra,OAAQ,CAClB,IAAK,IAAI2P,EAAQ,EAAGA,EAAQC,EAAOD,IAAS,CAC1C,GAAKo2C,EAEE,CACL,MAAMe,EAASZ,GAAoCH,EAAK,GAAK,GAAK,EAAtCW,EAAYX,EAAK,GACvCgB,EAASb,GAA2CH,EAAK,GAAK,GAAK,EAA7CznD,EAAMooD,EAAYX,EAAK,IAG7CiB,EAAYF,EAFNn3C,EAAQo2C,EAAK,GAGnBkB,EAAYF,EAFNzoD,EAAMqR,EAAQo2C,EAAK,IAG/B,IAAI/9C,EAAQhK,EAAKgpD,EAAYA,EAAYC,EAAYA,GACxC,MAAT9xB,IAAcntB,GAASg/C,GACd,MAAT7xB,IAAcntB,GAASi/C,GAC3B5sC,EAAOre,KAAKgM,EACd,MAZEqS,EAAOre,KAAKmC,EAAIuoD,EAAY/2C,IAa9BpX,EAAWiG,KAAO6b,EACpB,CACIyrC,IAAazrC,EAASA,EAAO1hB,KAAI+xC,GAAOob,EAAYpb,EAAMnyC,GAAYA,KACtE8B,IAAUggB,EAASA,EAAO1hB,KAAI+xC,GAAOvV,EAAQuV,EAAM,GAAY,EAAPA,GAAYA,EAAMvsC,EAAI5F,EAAWmyC,MACzF0b,IAAY/rC,EAASza,QAAQya,GACnC,CACA,MAAME,EAAU8rC,GAAWI,EAAOD,GAAQjuD,EAAWiuD,EAGrD,IAAIU,GAFWh9C,EAAK0e,sBAAsB1e,EAAIhN,MAAM0iB,EAAOrgB,OAAS2K,EAAG/F,kBAAoB5E,GAA8B,IAEjGgb,EAAU3b,MAAMyb,EAAOwsC,GAAe,IAAO,GAGrE,OAFIjnC,EAAO/kB,WAAUqsD,EAAStnC,EAAO/kB,SAASqsD,IAC1C50C,IAAW40C,EAAS,GAAGA,IAAS50C,EAAU,MACvC40C,CAAM,CACf,EC36P0CC,CAAQ,EAAG,CAAEZ,IAAK,eAGnD/kB,KACHnmC,EAAMkvB,IAAI,WAAW,kBAAM1F,QAAQ+gC,EAAY,CAAEnmD,SAAU,GAAI,IAC/DpE,EAAMkvB,IAAI,WAAW,kBAAM1F,QAAQ+gC,EAAY,CAAEnmD,SAAU,GAAI,KAGjElE,EAAKuR,iBACH,eAC8Bwf,EAAQsH,SAExCr4B,EAAKuR,iBACH,eAC8Bwf,EAAQuH,QAE1C,GACF,GACF,C+B5IA4xB,G/BoDO,SAAS2B,kBAAkB5F,GAChChqD,SAASwV,iBAAiBw0C,GAAUhtC,SAAQ,SAACtE,GACtCsxB,IACH3c,QAAQ3U,EAAI,CACVyB,EAAG,CAAC,MAAO,MACXhX,KAAM,SAENJ,SAAU0+B,SAAS,CACjB/F,MAAO,kBACPC,MAAO,qBACPxN,KAAM,OAKd,GACF,C+BnEAyhC,CAAkB,YAWlB5vD,SAASsV,iBAAiB,oBAAoB,YFwOvC,SAASu6C,cAAcn3C,EAAIo3C,GAChC,IAAMD,EAAgB7vD,SAAS89B,cAAcplB,GACvCq3C,EAAS/vD,SAAS89B,cAAcgyB,GAEjCD,GAKDE,EACFA,EAAOz6C,iBAAiB,SAAS,WAC/Bu6C,EAAc59C,MAAMI,UAAY,mBAChCw9C,EAAc59C,MAAMs4C,WAAa,qBACnC,IAEAv9B,QAAQ4gC,IAAI,qBAGd3mB,YAAW,WACT4oB,EAAc59C,MAAMI,UAAY,gBAChCw9C,EAAc59C,MAAMs4C,WAAa,qBACnC,GAAG,MAhBDv9B,QAAQ4gC,IAAI,kCAiBhB,CE7PEiC,CAAc,kBAAmB,0BACnC,IElCO,SAASG,yBAkCdhwD,SAASsV,iBAAiB,oBAAoB,WAExBtV,SAASwV,iBAAiB,gBAElCwH,SAAQ,SAAC6C,GACnBA,EAAKvK,iBAAiB,SAAS,SAAU6O,GAEvC,IAAM8rC,EAAOplD,KAAKgO,aAAa,QAEzBq3C,EAAM,IAAIC,IAAIF,EAAMpwD,OAAOuwD,SAASH,MAI1C,GAAIC,EAAIG,WAAaxwD,OAAOuwD,SAASC,SAArC,CAIAlsC,EAAE2rB,iBAGF,IAAMwgB,EAAWJ,EAAIK,KAAKjkB,UAAU,GAG9B6d,EAAchmC,EAAEpS,OAAOnK,QAAQ,iBACrC,GAAIuiD,GAAeA,EAAY1qB,UAAU+qB,SAAS,cAAe,CAE/D,IAAMgG,EAAcxwD,SAAS89B,cAAc,kBAG3C0yB,SAAAA,EAAa/wB,UAAU5Q,OAAO,aAG9B7uB,SAASwmB,KAAKiZ,UAAU5Q,OAAO,aAI7Bq7B,kBAAkBC,EAEtB,EAtEN,SAASsG,eAAeH,GAEtB,IAAMI,EAAgB1wD,SAAS2wD,eAAeL,GAE9C,GAAKI,EAAL,CAGA,IAAME,EAAc/wD,OAAOi5B,WAIvBhQ,EAAS,IACT8nC,GAAe,IACjB9nC,EAAS,GACA8nC,GAAe,OACxB9nC,EAAS,IAIX,IAIM7J,EAHJyxC,EAAcn3B,wBAAwBzC,IAAMj3B,OAAOo3B,QAGbnO,EAExCjpB,OAAOorD,SAAS,CACdn0B,IAAK7X,EACL4xC,SAAU,UAvBc,CAyB5B,CA4CMJ,CAAeH,EA1Bf,CA2BF,GACF,GAiBF,GACF,CF1DAN,GFyBO,SAASc,oBACd,IAAMC,EAAgB/wD,SAASwV,iBAAiB,kBAC1Cw7C,EAAShxD,SAAS89B,cAAc,WAChCqsB,EAAcnqD,SAAS89B,cAAc,iBAE3CizB,EAAc/zC,SAAQ,SAACi0C,GACrBA,EAAa37C,iBAAiB,SAAS,WACrC27C,EAAaxxB,UAAUotB,OAAO,aAE1BoE,EAAaxxB,UAAU+qB,SAAS,cAElCN,kBAAkBC,GAClB6G,EAAOvxB,UAAU1M,IAAI,gBACXk+B,EAAaxxB,UAAU+qB,SAAS,eAE1CN,kBAAkBC,GAClB6G,EAAOvxB,UAAU5Q,OAAO,eAE5B,GACF,GACF,CE5CAiiC,GGxCO,SAASI,kBACf,IAAIC,EAAoB,GACpBC,EAAapxD,SAASwV,iBAAiB,aACvC67C,EAAkB,GAClBC,EAAe,GAEnB,GAAIF,EAAW5oD,OAAS,EAAG,CAE1B,IADA,IAAIiI,EAAS,EACJ0H,EAAQ,EAAGA,EAAQi5C,EAAW5oD,OAAQ2P,IAAS,CACvD,IAAMo5C,EAAYH,EAAWj5C,GACvBq5C,EAASD,EAAU14C,aAAa,WAChC44C,EAAUF,EAAUG,aAAa,oBAAsBH,EAAU14C,aAAa,oBAAsB,OACpG84C,EAAyBJ,EAAUG,aAAa,sBAAwBH,EAAU14C,aAAa,sBAAwB,IAE7H04C,EAAUv/C,aAAa,gBAAiBvB,GAExC0gD,EAAkB1gD,GAAU,CAC3B,OAAU8gD,EAAUjrC,WACpB,MAASsrC,cAAcL,IAGxBF,EAAgB5gD,GAAU,CACzB,QAAW8gD,EACX,YAAevxD,SAAS89B,cAAc,IAAM0zB,GAC5C,MAASC,EACT,WAAcE,GAEflhD,GACD,EAyFD,SAASohD,iBAAiBC,GACzBA,EAAIjpC,MAAK,SAAUpnB,EAAG0P,GACrB,OAAI1P,EAAEswD,WAAa5gD,EAAE4gD,YACZ,EAED,CAET,IACAD,EAAIjpC,MAAK,SAAUpnB,EAAG0P,GACrB,OAAI1P,EAAEuwD,MAAQ7gD,EAAE6gD,MACR,GAEC,CAEV,GACD,CAvGCH,CAAiBR,GAGjB,IAAK,IAAIl5C,EAAQ,EAAGA,EAAQk5C,EAAgB7oD,OAAQ2P,IAAS,CAC5D,IACM85C,EADKZ,EAAgBl5C,GACH45C,WAGlBG,EAAaryD,OAAOu1B,WAAW,IAAD7M,OAFrB,MAEgC,YAAAA,OAAW0pC,EAAY,QACtEX,EAAa9sD,KAAK0tD,GAGlBA,EAAW58C,iBAAiB,SAAU68C,aACvC,CAED,CAGA,SAASA,eACR,IAAK,IAAIh6C,EAAQ,EAAGA,EAAQk5C,EAAgB7oD,OAAQ2P,IAAS,CAC5D,IAAMO,EAAK24C,EAAgBl5C,GACrBo5C,EAAY74C,EAAG8d,QACf47B,EAAgB15C,EAAG25C,YACnBZ,EAAU/4C,EAAGs5C,MAEbM,EAAc,kBADC55C,EAAGq5C,WAGxB,GAAIT,EAAan5C,GAAO4c,SAEvB,IAAKw8B,EAAU9xB,UAAU+qB,SAAS8H,GAAc,CAC/C,IAAIC,EAAcC,gBAAgBJ,GAAeX,GACjC,UAAZA,EACHc,EAAcC,gBAAgBJ,GAAe,GACvB,SAAZX,IACVc,EAAcC,gBAAgBJ,GAAeI,gBAAgBJ,GAAe5pD,SAE7E4pD,EAActoB,aAAaynB,EAAWa,EAAczuB,SAAS4uB,IAC7DhB,EAAU9xB,UAAU1M,IAAIu/B,EACzB,OAGIf,EAAU9xB,UAAU+qB,SAAS8H,KAChCG,iBAAiBlB,GACjBA,EAAU9xB,UAAU5Q,OAAOyjC,GAG9B,CAED,CAMA,SAASG,iBAAiB/5C,GACzB,IAAMg6C,EAAUh6C,EAAGG,aAAa,iBAC1B85C,EAAgBxB,EAAkBuB,GAClCE,EAAcD,EAAsB,OACpCE,EAAaF,EAAqB,MAClCJ,EAAcC,gBAAgBI,GAAa,GAAMC,GACvDD,EAAY9oB,aAAapxB,EAAIk6C,EAAYjvB,SAAS4uB,GACnD,CAGA,SAASX,cAAcl5C,GAEtB,OADiBzT,MAAMumC,UAAUzxB,MAAM6Z,KAAKlb,EAAG4N,WAAWqd,UAC1C9+B,QAAQ6T,EACzB,CAGA,SAAS85C,gBAAgBrpD,EAAQ2pD,GAGhC,IAFA,IAAMnvB,EAAWx6B,EAAOw6B,SAClBovB,EAAgB,GACbxqD,EAAI,EAAGA,EAAIo7B,EAASn7B,OAAQD,IAAK,CACzC,IAAMyqD,EAAkBrvB,EAASp7B,IAC7BuqD,GAI4C,MAA3CE,EAAgBn6C,aAAa,aAHjCk6C,EAAcvuD,KAAK+D,EAOrB,CACA,OAAOwqD,CACR,CAlCAZ,cA0DD,CHjGAjB,GFAO,SAAS+B,qBACd,IAAMt7B,EAAe,SAAfA,eACJ,IAAMu7B,EAAalzD,SAAS89B,cAAc,WAEpCq1B,EADgBnzD,SAAS89B,cAAc,uBACNvE,wBAAwBzC,IAE3Do8B,IACEC,GAAoB,GACtBD,EAAWzzB,UAAU1M,IAAI,eAChBogC,GAAoB,GAC7BD,EAAWzzB,UAAU5Q,OAAO,eAGlC,EAIA,OAFAhvB,OAAOyV,iBAAiB,SAAUqiB,GAE3B,WACL93B,OAAOs2B,oBAAoB,SAAUwB,EACvC,CACF,CEnBAs7B,GFyFO,SAASG,cACC,CACb,CACEC,gBAAiB,kBACjBC,cAAe,iBAEjB,CACED,gBAAiB,oBACjBC,cAAe,oBAEjB,CACED,gBAAiB,mBACjBC,cAAe,oBAIZt2C,SAAQ,SAAA2tB,GAAwC,IAArC0oB,EAAe1oB,EAAf0oB,gBAAiBC,EAAa3oB,EAAb2oB,cAC3BC,EAAQvzD,SAAS89B,cAAcw1B,GAC/BE,EAAWxzD,SAASwV,iBAAiB69C,GACrCI,EAAWF,EAAMz1B,cAAc,cAErC01B,EAASx2C,SAAQ,SAAC02C,GAChBA,EAAIp+C,iBAAiB,SAAS,WAK5B,GAJAs1C,sBAAsB2I,GACtBvzD,SAASwmB,KAAKiZ,UAAU1M,IAAI,aAC5BwgC,EAAM9zB,UAAU1M,IAAI,WAEE,oBAAlBugC,EAAqC,CACvC,IAAAK,EA2BH,SAASC,kBACd,IAAMv4B,EAAYr7B,SAAS89B,cAAc,2BACnC+1B,EAAY7zD,SAASwV,iBACzB,iDAEE1R,EAAU,EAERgwD,EAAwB,SAAxBA,wBACJ,IAAMC,EAAS14B,EAAUyC,cACvB,yCAEF,GAAIi2B,EAAQ,CACV,IAAMn9B,EAASm9B,EAAO/6B,aACtBqC,EAAUppB,MAAM2kB,OAAS,GAAHrO,OAAMqO,EAAM,KACpC,CACF,EAEMo9B,EAAe,SAAfA,aAAgB77C,GACpB07C,EAAU72C,SAAQ,SAACi3C,GAAE,OAAKA,EAAGx0B,UAAU5Q,OAAO,SAAS,IACvDglC,EAAU17C,GAAOsnB,UAAU1M,IAAI,UAC/B+gC,GACF,EAoBA,OAlBA9zD,SAASwV,iBAAiB,cAAcwH,SAAQ,SAAC02C,GAC/CA,EAAIp+C,iBAAiB,SAAS,WACxBxR,EAAU+vD,EAAUrrD,OAAS,IAC/B1E,IACAkwD,EAAalwD,GAEjB,GACF,IAEA9D,SAASwV,iBAAiB,cAAcwH,SAAQ,SAAC02C,GAC/CA,EAAIp+C,iBAAiB,SAAS,WACxBxR,EAAU,IACZA,IACAkwD,EAAalwD,GAEjB,GACF,IAEO,CACLkwD,aAAAA,EAEJ,CAvEmCJ,IACzBI,EADoBL,EAAZK,cACK,EACf,CACF,GACF,IAEAP,EAASn+C,iBAAiB,SAAS,WAKjC,GAJAm1C,qBAAqB8I,GACrBA,EAAM9zB,UAAU5Q,OAAO,WACvB7uB,SAASwmB,KAAKiZ,UAAU5Q,OAAO,aAET,oBAAlBykC,EAAqC,CACvC,IAAMS,EAASR,EAAMz1B,cACnB,yCAEEi2B,GACFA,EAAOt0B,UAAU5Q,OAAO,UACxB7B,QAAQ4gC,IAAI,wBAEZ5gC,QAAQ4gC,IAAI,yBAEhB,CACF,GACF,GACF,CE5IAwF,GACApzD,SAASsV,iBAAiB,oBAAoB,WAC5Cw0C,UAAU,SACZ,IAGA98B,QAAQ4gC,IACN,aACA,iL","sources":["webpack://commercmanagement/./node_modules/animejs/lib/anime.esm.js","webpack://commercmanagement/./#src/js/animations/anime-js.jsx","webpack://commercmanagement/./node_modules/imask/esm/core/utils.js","webpack://commercmanagement/./node_modules/imask/esm/core/action-details.js","webpack://commercmanagement/./node_modules/imask/esm/core/holder.js","webpack://commercmanagement/./node_modules/imask/esm/masked/factory.js","webpack://commercmanagement/./node_modules/imask/esm/controls/mask-element.js","webpack://commercmanagement/./node_modules/imask/esm/controls/html-mask-element.js","webpack://commercmanagement/./node_modules/imask/esm/controls/html-input-mask-element.js","webpack://commercmanagement/./node_modules/imask/esm/controls/html-contenteditable-mask-element.js","webpack://commercmanagement/./node_modules/imask/esm/controls/input-history.js","webpack://commercmanagement/./node_modules/imask/esm/controls/input.js","webpack://commercmanagement/./node_modules/imask/esm/core/change-details.js","webpack://commercmanagement/./node_modules/imask/esm/core/continuous-tail-details.js","webpack://commercmanagement/./node_modules/imask/esm/masked/base.js","webpack://commercmanagement/./node_modules/imask/esm/masked/pattern/chunk-tail-details.js","webpack://commercmanagement/./node_modules/imask/esm/masked/pattern/cursor.js","webpack://commercmanagement/./node_modules/imask/esm/masked/pattern/fixed-definition.js","webpack://commercmanagement/./node_modules/imask/esm/masked/pattern/input-definition.js","webpack://commercmanagement/./node_modules/imask/esm/masked/regexp.js","webpack://commercmanagement/./node_modules/imask/esm/masked/pattern.js","webpack://commercmanagement/./node_modules/imask/esm/masked/range.js","webpack://commercmanagement/./node_modules/imask/esm/masked/date.js","webpack://commercmanagement/./node_modules/imask/esm/masked/dynamic.js","webpack://commercmanagement/./node_modules/imask/esm/masked/enum.js","webpack://commercmanagement/./node_modules/imask/esm/masked/number.js","webpack://commercmanagement/./node_modules/imask/esm/masked/function.js","webpack://commercmanagement/./node_modules/imask/esm/masked/pipe.js","webpack://commercmanagement/./node_modules/imask/esm/masked/repeat.js","webpack://commercmanagement/./node_modules/imask/esm/index.js","webpack://commercmanagement/./#src/js/layouts/layouts.js","webpack://commercmanagement/./#src/js/assets/preloader.js","webpack://commercmanagement/./#src/js/main.js","webpack://commercmanagement/./#src/js/assets/validate-form.js","webpack://commercmanagement/./#src/js/assets/anchors-smooth-scrolling.js","webpack://commercmanagement/./#src/js/assets/dynamic-adaptive.js"],"sourcesContent":["/**\n * anime.js - ESM\n * @version v4.1.1\n * @author Julian Garnier\n * @license MIT\n * @copyright (c) 2025 Julian Garnier\n * @see https://animejs.com\n */\n\n// Global types ///////////////////////////////////////////////////////////////\n\n/**\n * @typedef {Object} DefaultsParams\n * @property {Number|String} [id]\n * @property {PercentageKeyframes|DurationKeyframes} [keyframes]\n * @property {EasingParam} [playbackEase]\n * @property {Number} [playbackRate]\n * @property {Number} [frameRate]\n * @property {Number|Boolean} [loop]\n * @property {Boolean} [reversed]\n * @property {Boolean} [alternate]\n * @property {Boolean|ScrollObserver} [autoplay]\n * @property {Number|FunctionValue} [duration]\n * @property {Number|FunctionValue} [delay]\n * @property {Number} [loopDelay]\n * @property {EasingParam} [ease]\n * @property {'none'|'replace'|'blend'|compositionTypes} [composition]\n * @property {(v: any) => any} [modifier]\n * @property {(tickable: Tickable) => void} [onBegin]\n * @property {(tickable: Tickable) => void} [onBeforeUpdate]\n * @property {(tickable: Tickable) => void} [onUpdate]\n * @property {(tickable: Tickable) => void} [onLoop]\n * @property {(tickable: Tickable) => void} [onPause]\n * @property {(tickable: Tickable) => void} [onComplete]\n * @property {(renderable: Renderable) => void} [onRender]\n */\n\n/** @typedef {JSAnimation|Timeline} Renderable */\n/** @typedef {Timer|Renderable} Tickable */\n/** @typedef {Timer&JSAnimation&Timeline} CallbackArgument */\n/** @typedef {Animatable|Tickable|Draggable|ScrollObserver|TextSplitter|Scope} Revertible */\n\n// Stagger types //////////////////////////////////////////////////////////////\n\n/**\n * @callback StaggerFunction\n * @param {Target} [target]\n * @param {Number} [index]\n * @param {Number} [length]\n * @param {Timeline} [tl]\n * @return {Number|String}\n */\n\n/**\n * @typedef  {Object} StaggerParams\n * @property {Number|String} [start]\n * @property {Number|'first'|'center'|'last'|'random'} [from]\n * @property {Boolean} [reversed]\n * @property {Array.<Number>} [grid]\n * @property {('x'|'y')} [axis]\n * @property {String|StaggerFunction} [use]\n * @property {Number} [total]\n * @property {EasingParam} [ease]\n * @property {TweenModifier} [modifier]\n */\n\n// Eases types ////////////////////////////////////////////////////////////////\n\n/**\n * @callback EasingFunction\n * @param {Number} time\n * @return {Number}\n */\n\n/**\n * @typedef {('linear'|'linear(x1, x2 25%, x3)'|'in'|'out'|'inOut'|'inQuad'|'outQuad'|'inOutQuad'|'inCubic'|'outCubic'|'inOutCubic'|'inQuart'|'outQuart'|'inOutQuart'|'inQuint'|'outQuint'|'inOutQuint'|'inSine'|'outSine'|'inOutSine'|'inCirc'|'outCirc'|'inOutCirc'|'inExpo'|'outExpo'|'inOutExpo'|'inBounce'|'outBounce'|'inOutBounce'|'inBack'|'outBack'|'inOutBack'|'inElastic'|'outElastic'|'inOutElastic'|'irregular'|'cubicBezier'|'steps'|'in(p = 1.675)'|'out(p = 1.675)'|'inOut(p = 1.675)'|'inBack(overshoot = 1.70158)'|'outBack(overshoot = 1.70158)'|'inOutBack(overshoot = 1.70158)'|'inElastic(amplitude = 1, period = .3)'|'outElastic(amplitude = 1, period = .3)'|'inOutElastic(amplitude = 1, period = .3)'|'irregular(length = 10, randomness = 1)'|'cubicBezier(x1, y1, x2, y2)'|'steps(steps = 10)')} EaseStringParamNames\n */\n\n// A hack to get both ease names suggestions AND allow any strings\n// https://github.com/microsoft/TypeScript/issues/29729#issuecomment-460346421\n/** @typedef {(String & {})|EaseStringParamNames|EasingFunction|Spring} EasingParam */\n\n/** @typedef {HTMLElement|SVGElement} DOMTarget */\n/** @typedef {Record<String, any>} JSTarget */\n/** @typedef {DOMTarget|JSTarget} Target */\n/** @typedef {Target|NodeList|String} TargetSelector */\n/** @typedef {DOMTarget|NodeList|String} DOMTargetSelector */\n/** @typedef {Array.<DOMTargetSelector>|DOMTargetSelector} DOMTargetsParam */\n/** @typedef {Array.<DOMTarget>} DOMTargetsArray */\n/** @typedef {Array.<JSTarget>|JSTarget} JSTargetsParam */\n/** @typedef {Array.<JSTarget>} JSTargetsArray */\n/** @typedef {Array.<TargetSelector>|TargetSelector} TargetsParam */\n/** @typedef {Array.<Target>} TargetsArray */\n\n // Callback types ////////////////////////////////////////////////////////////\n\n/**\n * @template T\n * @callback Callback\n * @param {T} self - Returns itself\n * @param {PointerEvent} [e]\n * @return {*}\n */\n\n/**\n * @template {object} T\n * @typedef {Object} TickableCallbacks\n * @property {Callback<T>} [onBegin]\n * @property {Callback<T>} [onBeforeUpdate]\n * @property {Callback<T>} [onUpdate]\n * @property {Callback<T>} [onLoop]\n * @property {Callback<T>} [onPause]\n * @property {Callback<T>} [onComplete]\n */\n\n/**\n * @template {object} T\n * @typedef {Object} RenderableCallbacks\n * @property {Callback<T>} [onRender]\n */\n\n// Timer types ////////////////////////////////////////////////////////////////\n\n/**\n * @typedef {Object} TimerOptions\n * @property {Number|String} [id]\n * @property {TweenParamValue} [duration]\n * @property {TweenParamValue} [delay]\n * @property {Number} [loopDelay]\n * @property {Boolean} [reversed]\n * @property {Boolean} [alternate]\n * @property {Boolean|Number} [loop]\n * @property {Boolean|ScrollObserver} [autoplay]\n * @property {Number} [frameRate]\n * @property {Number} [playbackRate]\n */\n\n/**\n\n/**\n * @typedef {TimerOptions & TickableCallbacks<Timer>} TimerParams\n */\n\n// Tween types ////////////////////////////////////////////////////////////////\n\n/**\n * @callback FunctionValue\n * @param {Target} target - The animated target\n * @param {Number} index - The target index\n * @param {Number} length - The total number of animated targets\n * @return {Number|String|TweenObjectValue|Array.<Number|String|TweenObjectValue>}\n */\n\n/**\n * @callback TweenModifier\n * @param {Number} value - The animated value\n * @return {Number|String}\n */\n\n/** @typedef {[Number, Number, Number, Number]} ColorArray */\n\n/**\n * @typedef {Object} Tween\n * @property {Number} id\n * @property {JSAnimation} parent\n * @property {String} property\n * @property {Target} target\n * @property {String|Number} _value\n * @property {Function|null} _func\n * @property {EasingFunction} _ease\n * @property {Array.<Number>} _fromNumbers\n * @property {Array.<Number>} _toNumbers\n * @property {Array.<String>} _strings\n * @property {Number} _fromNumber\n * @property {Number} _toNumber\n * @property {Array.<Number>} _numbers\n * @property {Number} _number\n * @property {String} _unit\n * @property {TweenModifier} _modifier\n * @property {Number} _currentTime\n * @property {Number} _delay\n * @property {Number} _updateDuration\n * @property {Number} _startTime\n * @property {Number} _changeDuration\n * @property {Number} _absoluteStartTime\n * @property {tweenTypes} _tweenType\n * @property {valueTypes} _valueType\n * @property {Number} _composition\n * @property {Number} _isOverlapped\n * @property {Number} _isOverridden\n * @property {Number} _renderTransforms\n * @property {Tween} _prevRep\n * @property {Tween} _nextRep\n * @property {Tween} _prevAdd\n * @property {Tween} _nextAdd\n * @property {Tween} _prev\n * @property {Tween} _next\n */\n\n/**\n * @typedef TweenDecomposedValue\n * @property {Number} t - Type\n * @property {Number} n - Single number value\n * @property {String} u - Value unit\n * @property {String} o - Value operator\n * @property {Array.<Number>} d - Array of Numbers (in case of complex value type)\n * @property {Array.<String>} s - Strings (in case of complex value type)\n */\n\n/** @typedef {{_head: null|Tween, _tail: null|Tween}} TweenPropertySiblings */\n/** @typedef {Record<String, TweenPropertySiblings>} TweenLookups */\n/** @typedef {WeakMap.<Target, TweenLookups>} TweenReplaceLookups */\n/** @typedef {Map.<Target, TweenLookups>} TweenAdditiveLookups */\n\n// Animation types ////////////////////////////////////////////////////////////\n\n/**\n * @typedef {Number|String|FunctionValue} TweenParamValue\n */\n\n/**\n * @typedef {TweenParamValue|[TweenParamValue, TweenParamValue]} TweenPropValue\n */\n\n/**\n * @typedef {(String & {})|'none'|'replace'|'blend'|compositionTypes} TweenComposition\n */\n\n/**\n * @typedef {Object} TweenParamsOptions\n * @property {TweenParamValue} [duration]\n * @property {TweenParamValue} [delay]\n * @property {EasingParam} [ease]\n * @property {TweenModifier} [modifier]\n * @property {TweenComposition} [composition]\n */\n\n/**\n * @typedef {Object} TweenValues\n * @property {TweenParamValue} [from]\n * @property {TweenPropValue} [to]\n * @property {TweenPropValue} [fromTo]\n */\n\n/**\n * @typedef {TweenParamsOptions & TweenValues} TweenKeyValue\n */\n\n/**\n * @typedef {Array.<TweenKeyValue|TweenPropValue>} ArraySyntaxValue\n */\n\n/**\n * @typedef {TweenParamValue|ArraySyntaxValue|TweenKeyValue} TweenOptions\n */\n\n/**\n * @typedef {Partial<{to: TweenParamValue|Array.<TweenParamValue>; from: TweenParamValue|Array.<TweenParamValue>; fromTo: TweenParamValue|Array.<TweenParamValue>;}>} TweenObjectValue\n */\n\n/**\n * @typedef {Object} PercentageKeyframeOptions\n * @property {EasingParam} [ease]\n */\n\n/**\n * @typedef {Record<String, TweenParamValue>} PercentageKeyframeParams\n */\n\n/**\n * @typedef {Record<String, PercentageKeyframeParams & PercentageKeyframeOptions>} PercentageKeyframes\n */\n\n/**\n * @typedef {Array<Record<String, TweenOptions | TweenModifier | boolean> & TweenParamsOptions>} DurationKeyframes\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {PercentageKeyframes|DurationKeyframes} [keyframes]\n * @property {EasingParam} [playbackEase]\n */\n\n// TODO: Currently setting TweenModifier to the intersected Record<> makes the FunctionValue type target param any if only one parameter is set\n/**\n * @typedef {Record<String, TweenOptions | Callback<JSAnimation> | TweenModifier | boolean | PercentageKeyframes | DurationKeyframes | ScrollObserver> & TimerOptions & AnimationOptions & TweenParamsOptions & TickableCallbacks<JSAnimation> & RenderableCallbacks<JSAnimation>} AnimationParams\n */\n\n// Timeline types /////////////////////////////////////////////////////////////\n\n/**\n * @typedef {Object} TimelineOptions\n * @property {DefaultsParams} [defaults]\n * @property {EasingParam} [playbackEase]\n */\n\n/**\n * @typedef {TimerOptions & TimelineOptions & TickableCallbacks<Timeline> & RenderableCallbacks<Timeline>} TimelineParams\n */\n\n// Animatable types ///////////////////////////////////////////////////////////\n\n/**\n * @callback AnimatablePropertySetter\n * @param  {Number|Array.<Number>} to\n * @param  {Number} [duration]\n * @param  {EasingParam} [ease]\n * @return {AnimatableObject}\n */\n\n/**\n * @callback AnimatablePropertyGetter\n * @return {Number|Array.<Number>}\n */\n\n/**\n * @typedef {AnimatablePropertySetter & AnimatablePropertyGetter} AnimatableProperty\n */\n\n/**\n * @typedef {Animatable & Record<String, AnimatableProperty>} AnimatableObject\n */\n\n/**\n * @typedef {Object} AnimatablePropertyParamsOptions\n * @property {String} [unit]\n * @property {TweenParamValue} [duration]\n * @property {EasingParam} [ease]\n * @property {TweenModifier} [modifier]\n * @property {TweenComposition} [composition]\n */\n\n/**\n * @typedef {Record<String, TweenParamValue | EasingParam | TweenModifier | TweenComposition | AnimatablePropertyParamsOptions> & AnimatablePropertyParamsOptions} AnimatableParams\n */\n\n// Scope types ////////////////////////////////////////////////////////////////\n\n/**\n * @typedef {Object} ReactRef\n * @property {HTMLElement|SVGElement|null} [current]\n */\n\n/**\n * @typedef {Object} AngularRef\n * @property {HTMLElement|SVGElement} [nativeElement]\n */\n\n/**\n * @typedef {Object} ScopeParams\n * @property {DOMTargetSelector|ReactRef|AngularRef} [root]\n * @property {DefaultsParams} [defaults]\n * @property {Record<String, String>} [mediaQueries]\n */\n\n/**\n * @template T\n * @callback ScopedCallback\n * @param {Scope} scope\n * @return {T}\n */\n\n/**\n * @callback ScopeCleanupCallback\n * @param {Scope} [scope]\n */\n\n/**\n * @callback ScopeConstructorCallback\n * @param {Scope} [scope]\n * @return {ScopeCleanupCallback|void}\n */\n\n/**\n * @callback ScopeMethod\n * @param {...*} args\n * @return {ScopeCleanupCallback|void}\n */\n\n// Draggable types ////////////////////////////////////////////////////////////\n\n/**\n * @typedef {Object} DraggableAxisParam\n * @property {String} [mapTo]\n * @property {TweenModifier} [modifier]\n * @property {TweenComposition} [composition]\n * @property {Number|Array<Number>|((draggable: Draggable) => Number|Array<Number>)} [snap]\n */\n\n/**\n * @typedef {Object} DraggableCursorParams\n * @property {String} [onHover]\n * @property {String} [onGrab]\n */\n\n/**\n * @typedef {Object} DraggableParams\n * @property {DOMTargetSelector} [trigger]\n * @property {DOMTargetSelector|Array<Number>|((draggable: Draggable) => DOMTargetSelector|Array<Number>)} [container]\n * @property {Boolean|DraggableAxisParam} [x]\n * @property {Boolean|DraggableAxisParam} [y]\n * @property {TweenModifier} [modifier]\n * @property {Number|Array<Number>|((draggable: Draggable) => Number|Array<Number>)} [snap]\n * @property {Number|Array<Number>|((draggable: Draggable) => Number|Array<Number>)} [containerPadding]\n * @property {Number|((draggable: Draggable) => Number)} [containerFriction]\n * @property {Number|((draggable: Draggable) => Number)} [releaseContainerFriction]\n * @property {Number|((draggable: Draggable) => Number)} [dragSpeed]\n * @property {Number|((draggable: Draggable) => Number)} [scrollSpeed]\n * @property {Number|((draggable: Draggable) => Number)} [scrollThreshold]\n * @property {Number|((draggable: Draggable) => Number)} [minVelocity]\n * @property {Number|((draggable: Draggable) => Number)} [maxVelocity]\n * @property {Number|((draggable: Draggable) => Number)} [velocityMultiplier]\n * @property {Number} [releaseMass]\n * @property {Number} [releaseStiffness]\n * @property {Number} [releaseDamping]\n * @property {Boolean} [releaseDamping]\n * @property {EasingParam} [releaseEase]\n * @property {Boolean|DraggableCursorParams|((draggable: Draggable) => Boolean|DraggableCursorParams)} [cursor]\n * @property {Callback<Draggable>} [onGrab]\n * @property {Callback<Draggable>} [onDrag]\n * @property {Callback<Draggable>} [onRelease]\n * @property {Callback<Draggable>} [onUpdate]\n * @property {Callback<Draggable>} [onSettle]\n * @property {Callback<Draggable>} [onSnap]\n * @property {Callback<Draggable>} [onResize]\n * @property {Callback<Draggable>} [onAfterResize]\n */\n\n// Text types /////////////////////////////////////////////////////////////////\n\n/**\n * @typedef {Object} splitTemplateParams\n * @property {false|String} [class]\n * @property {Boolean|'hidden'|'clip'|'visible'|'scroll'|'auto'} [wrap]\n * @property {Boolean|'top'|'right'|'bottom'|'left'|'center'} [clone]\n */\n\n/**\n * @typedef {Boolean|String} SplitValue\n */\n\n/**\n * @callback SplitFunctionValue\n * @param {Node|HTMLElement} [value]\n * @return String\n */\n\n/**\n * @typedef {Object} TextSplitterParams\n * @property {SplitValue|splitTemplateParams|SplitFunctionValue} [lines]\n * @property {SplitValue|splitTemplateParams|SplitFunctionValue} [words]\n * @property {SplitValue|splitTemplateParams|SplitFunctionValue} [chars]\n * @property {Boolean} [accessible]\n * @property {Boolean} [includeSpaces]\n * @property {Boolean} [debug]\n */\n\n// SVG types //////////////////////////////////////////////////////////////////\n\n/**\n * @typedef {SVGGeometryElement & {\n *   setAttribute(name: 'draw', value: `${number} ${number}`): void;\n *   draw: `${number} ${number}`;\n * }} DrawableSVGGeometry\n */\n\n\n// Environments\n\n// TODO: Do we need to check if we're running inside a worker ?\nconst isBrowser = typeof window !== 'undefined';\n\n/** @type {Object|Null} */\nconst win = isBrowser ? window : null;\n\n/** @type {Document} */\nconst doc = isBrowser ? document : null;\n\n// Enums\n\n/** @enum {Number} */\nconst tweenTypes = {\n  OBJECT: 0,\n  ATTRIBUTE: 1,\n  CSS: 2,\n  TRANSFORM: 3,\n  CSS_VAR: 4,\n};\n\n/** @enum {Number} */\nconst valueTypes = {\n  NUMBER: 0,\n  UNIT: 1,\n  COLOR: 2,\n  COMPLEX: 3,\n};\n\n/** @enum {Number} */\nconst tickModes = {\n  NONE: 0,\n  AUTO: 1,\n  FORCE: 2,\n};\n\n/** @enum {Number} */\nconst compositionTypes = {\n  replace: 0,\n  none: 1,\n  blend: 2,\n};\n\n// Cache symbols\n\nconst isRegisteredTargetSymbol = Symbol();\nconst isDomSymbol = Symbol();\nconst isSvgSymbol = Symbol();\nconst transformsSymbol = Symbol();\nconst morphPointsSymbol = Symbol();\nconst proxyTargetSymbol = Symbol();\n\n// Numbers\n\nconst minValue = 1e-11;\nconst maxValue = 1e12;\nconst K = 1e3;\nconst maxFps = 120;\n\n// Strings\n\nconst emptyString = '';\nconst shortTransforms = /*#__PURE__*/ (() => {\n  const map = new Map();\n  map.set('x', 'translateX');\n  map.set('y', 'translateY');\n  map.set('z', 'translateZ');\n  return map;\n})();\n\nconst validTransforms = [\n  'translateX',\n  'translateY',\n  'translateZ',\n  'rotate',\n  'rotateX',\n  'rotateY',\n  'rotateZ',\n  'scale',\n  'scaleX',\n  'scaleY',\n  'scaleZ',\n  'skew',\n  'skewX',\n  'skewY',\n  'perspective',\n  'matrix',\n  'matrix3d',\n];\n\nconst transformsFragmentStrings = /*#__PURE__*/ validTransforms.reduce((a, v) => ({...a, [v]: v + '('}), {});\n\n// Functions\n\n/** @return {void} */\nconst noop = () => {};\n\n// Regex\n\nconst hexTestRgx = /(^#([\\da-f]{3}){1,2}$)|(^#([\\da-f]{4}){1,2}$)/i;\nconst rgbExecRgx = /rgb\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/i;\nconst rgbaExecRgx = /rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(-?\\d+|-?\\d*.\\d+)\\s*\\)/i;\nconst hslExecRgx = /hsl\\(\\s*(-?\\d+|-?\\d*.\\d+)\\s*,\\s*(-?\\d+|-?\\d*.\\d+)%\\s*,\\s*(-?\\d+|-?\\d*.\\d+)%\\s*\\)/i;\nconst hslaExecRgx = /hsla\\(\\s*(-?\\d+|-?\\d*.\\d+)\\s*,\\s*(-?\\d+|-?\\d*.\\d+)%\\s*,\\s*(-?\\d+|-?\\d*.\\d+)%\\s*,\\s*(-?\\d+|-?\\d*.\\d+)\\s*\\)/i;\n// export const digitWithExponentRgx = /[-+]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?/g;\nconst digitWithExponentRgx = /[-+]?\\d*\\.?\\d+(?:e[-+]?\\d)?/gi;\n// export const unitsExecRgx = /^([-+]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?)+([a-z]+|%)$/i;\nconst unitsExecRgx = /^([-+]?\\d*\\.?\\d+(?:e[-+]?\\d+)?)([a-z]+|%)$/i;\nconst lowerCaseRgx = /([a-z])([A-Z])/g;\nconst transformsExecRgx = /(\\w+)(\\([^)]+\\)+)/g; // Match inline transforms with cacl() values, returns the value wrapped in ()\nconst relativeValuesExecRgx = /(\\*=|\\+=|-=)/;\n\n\n\n\n/** @type {DefaultsParams} */\nconst defaults = {\n  id: null,\n  keyframes: null,\n  playbackEase: null,\n  playbackRate: 1,\n  frameRate: maxFps,\n  loop: 0,\n  reversed: false,\n  alternate: false,\n  autoplay: true,\n  duration: K,\n  delay: 0,\n  loopDelay: 0,\n  ease: 'out(2)',\n  composition: compositionTypes.replace,\n  modifier: v => v,\n  onBegin: noop,\n  onBeforeUpdate: noop,\n  onUpdate: noop,\n  onLoop: noop,\n  onPause: noop,\n  onComplete: noop,\n  onRender: noop,\n};\n\nconst scope = {\n  /** @type {Scope} */\n  current: null,\n  /** @type {Document|DOMTarget} */\n  root: doc,\n};\n\nconst globals = {\n  /** @type {DefaultsParams} */\n  defaults,\n  /** @type {Number} */\n  precision: 4,\n  /** @type {Number} */\n  timeScale: 1,\n  /** @type {Number} */\n  tickThreshold: 200,\n};\n\nconst globalVersions = { version: '4.1.1', engine: null };\n\nif (isBrowser) {\n  if (!win.AnimeJS) win.AnimeJS = [];\n  win.AnimeJS.push(globalVersions);\n}\n\n// Strings\n\n/**\n * @param  {String} str\n * @return {String}\n */\nconst toLowerCase = str => str.replace(lowerCaseRgx, '$1-$2').toLowerCase();\n\n/**\n * Prioritize this method instead of regex when possible\n * @param  {String} str\n * @param  {String} sub\n * @return {Boolean}\n */\nconst stringStartsWith = (str, sub) => str.indexOf(sub) === 0;\n\n// Time\n// Note: Date.now is used instead of performance.now since it is precise enough for timings calculations, performs slightly faster and works in Node.js environement.\nconst now = Date.now;\n\n// Types checkers\n\nconst isArr = Array.isArray;\n/**@param {any} a @return {a is Record<String, any>} */\nconst isObj = a => a && a.constructor === Object;\n/**@param {any} a @return {a is Number} */\nconst isNum = a => typeof a === 'number' && !isNaN(a);\n/**@param {any} a @return {a is String} */\nconst isStr = a => typeof a === 'string';\n/**@param {any} a @return {a is Function} */\nconst isFnc = a => typeof a === 'function';\n/**@param {any} a @return {a is undefined} */\nconst isUnd = a => typeof a === 'undefined';\n/**@param {any} a @return {a is null | undefined} */\nconst isNil = a => isUnd(a) || a === null;\n/**@param {any} a @return {a is SVGElement} */\nconst isSvg = a => isBrowser && a instanceof SVGElement;\n/**@param {any} a @return {Boolean} */\nconst isHex = a => hexTestRgx.test(a);\n/**@param {any} a @return {Boolean} */\nconst isRgb = a => stringStartsWith(a, 'rgb');\n/**@param {any} a @return {Boolean} */\nconst isHsl = a => stringStartsWith(a, 'hsl');\n/**@param {any} a @return {Boolean} */\nconst isCol = a => isHex(a) || isRgb(a) || isHsl(a);\n/**@param {any} a @return {Boolean} */\nconst isKey = a => !globals.defaults.hasOwnProperty(a);\n\n// Number\n\n/**\n * @param  {Number|String} str\n * @return {Number}\n */\nconst parseNumber = str => isStr(str) ?\n  parseFloat(/** @type {String} */(str)) :\n  /** @type {Number} */(str);\n\n// Math\n\nconst pow = Math.pow;\nconst sqrt = Math.sqrt;\nconst sin = Math.sin;\nconst cos = Math.cos;\nconst abs = Math.abs;\nconst exp = Math.exp;\nconst ceil = Math.ceil;\nconst floor = Math.floor;\nconst asin = Math.asin;\nconst max = Math.max;\nconst atan2 = Math.atan2;\nconst PI = Math.PI;\nconst _round = Math.round;\n\n/**\n * @param  {Number} v\n * @param  {Number} min\n * @param  {Number} max\n * @return {Number}\n */\nconst clamp = (v, min, max) => v < min ? min : v > max ? max : v;\n\nconst powCache = {};\n\n/**\n * @param  {Number} v\n * @param  {Number} decimalLength\n * @return {Number}\n */\nconst round = (v, decimalLength) => {\n  if (decimalLength < 0) return v;\n  if (!decimalLength) return _round(v);\n  let p = powCache[decimalLength];\n  if (!p) p = powCache[decimalLength] = 10 ** decimalLength;\n  return _round(v * p) / p;\n};\n\n/**\n * @param  {Number} v\n * @param  {Number|Array<Number>} increment\n * @return {Number}\n */\nconst snap = (v, increment) => isArr(increment) ? increment.reduce((closest, cv) => (abs(cv - v) < abs(closest - v) ? cv : closest)) : increment ? _round(v / increment) * increment : v;\n\n/**\n * @param  {Number} start\n * @param  {Number} end\n * @param  {Number} progress\n * @return {Number}\n */\nconst interpolate = (start, end, progress) => start + (end - start) * progress;\n\n/**\n * @param  {Number} min\n * @param  {Number} max\n * @param  {Number} [decimalLength]\n * @return {Number}\n */\nconst random = (min, max, decimalLength) => { const m = 10 ** (decimalLength || 0); return floor((Math.random() * (max - min + (1 / m)) + min) * m) / m };\n\n/**\n * Adapted from https://bost.ocks.org/mike/shuffle/\n * @param  {Array} items\n * @return {Array}\n */\nconst shuffle = items => {\n  let m = items.length, t, i;\n  while (m) { i = random(0, --m); t = items[m]; items[m] = items[i]; items[i] = t; }\n  return items;\n};\n\n/**\n * @param  {Number} v\n * @return {Number}\n */\nconst clampInfinity = v => v === Infinity ? maxValue : v === -Infinity ? -1e12 : v;\n\n/**\n * @param  {Number} v\n * @return {Number}\n */\nconst normalizeTime = v => v <= minValue ? minValue : clampInfinity(round(v, 11));\n\n// Arrays\n\n/**\n * @template T\n * @param {T[]} a\n * @return {T[]}\n */\nconst cloneArray = a => isArr(a) ? [ ...a ] : a;\n\n// Objects\n\n/**\n * @template T\n * @template U\n * @param {T} o1\n * @param {U} o2\n * @return {T & U}\n */\nconst mergeObjects = (o1, o2) => {\n  const merged = /** @type {T & U} */({ ...o1 });\n  for (let p in o2) {\n    const o1p = /** @type {T & U} */(o1)[p];\n    merged[p] = isUnd(o1p) ? /** @type {T & U} */(o2)[p] : o1p;\n  }  return merged;\n};\n\n// Linked lists\n\n/**\n * @param {Object} parent\n * @param {Function} callback\n * @param {Boolean} [reverse]\n * @param {String} [prevProp]\n * @param {String} [nextProp]\n * @return {void}\n */\nconst forEachChildren = (parent, callback, reverse, prevProp = '_prev', nextProp = '_next') => {\n  let next = parent._head;\n  let adjustedNextProp = nextProp;\n  if (reverse) {\n    next = parent._tail;\n    adjustedNextProp = prevProp;\n  }\n  while (next) {\n    const currentNext = next[adjustedNextProp];\n    callback(next);\n    next = currentNext;\n  }\n};\n\n/**\n * @param  {Object} parent\n * @param  {Object} child\n * @param  {String} [prevProp]\n * @param  {String} [nextProp]\n * @return {void}\n */\nconst removeChild = (parent, child, prevProp = '_prev', nextProp = '_next') => {\n  const prev = child[prevProp];\n  const next = child[nextProp];\n  prev ? prev[nextProp] = next : parent._head = next;\n  next ? next[prevProp] = prev : parent._tail = prev;\n  child[prevProp] = null;\n  child[nextProp] = null;\n};\n\n/**\n * @param  {Object} parent\n * @param  {Object} child\n * @param  {Function} [sortMethod]\n * @param  {String} prevProp\n * @param  {String} nextProp\n * @return {void}\n */\nconst addChild = (parent, child, sortMethod, prevProp = '_prev', nextProp = '_next') => {\n  let prev = parent._tail;\n  while (prev && sortMethod && sortMethod(prev, child)) prev = prev[prevProp];\n  const next = prev ? prev[nextProp] : parent._head;\n  prev ? prev[nextProp] = child : parent._head = child;\n  next ? next[prevProp] = child : parent._tail = child;\n  child[prevProp] = prev;\n  child[nextProp] = next;\n};\n\n/**\n * @param  {(...args: any[]) => Tickable | ((...args: any[]) => void)} constructor\n * @return {(...args: any[]) => Tickable | ((...args: any[]) => void)}\n */\nconst createRefreshable = constructor => {\n  /** @type {Tickable} */\n  let tracked;\n  return (...args) => {\n    let currentIteration, currentIterationProgress, reversed, alternate;\n    if (tracked) {\n      currentIteration = tracked.currentIteration;\n      currentIterationProgress = tracked.iterationProgress;\n      reversed = tracked.reversed;\n      alternate = tracked._alternate;\n      tracked.revert();\n    }\n    const cleanup = constructor(...args);\n    if (cleanup && !isFnc(cleanup) && cleanup.revert) tracked = cleanup;\n    if (!isUnd(currentIterationProgress)) {\n      /** @type {Tickable} */(tracked).currentIteration = currentIteration;\n      /** @type {Tickable} */(tracked).iterationProgress = (alternate ? !(currentIteration % 2) ? reversed : !reversed : reversed) ? 1 - currentIterationProgress : currentIterationProgress;\n    }\n    return cleanup || noop;\n  }\n};\n\n/*\n * Base class to control framerate and playback rate.\n * Inherited by Engine, Timer, Animation and Timeline.\n */\nclass Clock {\n\n  /** @param {Number} [initTime] */\n  constructor(initTime = 0) {\n    /** @type {Number} */\n    this.deltaTime = 0;\n    /** @type {Number} */\n    this._currentTime = initTime;\n    /** @type {Number} */\n    this._elapsedTime = initTime;\n    /** @type {Number} */\n    this._startTime = initTime;\n    /** @type {Number} */\n    this._lastTime = initTime;\n    /** @type {Number} */\n    this._scheduledTime = 0;\n    /** @type {Number} */\n    this._frameDuration = round(K / maxFps, 0);\n    /** @type {Number} */\n    this._fps = maxFps;\n    /** @type {Number} */\n    this._speed = 1;\n    /** @type {Boolean} */\n    this._hasChildren = false;\n    /** @type {Tickable|Tween} */\n    this._head = null;\n    /** @type {Tickable|Tween} */\n    this._tail = null;\n  }\n\n  get fps() {\n    return this._fps;\n  }\n\n  set fps(frameRate) {\n    const previousFrameDuration = this._frameDuration;\n    const fr = +frameRate;\n    const fps = fr < minValue ? minValue : fr;\n    const frameDuration = round(K / fps, 0);\n    this._fps = fps;\n    this._frameDuration = frameDuration;\n    this._scheduledTime += frameDuration - previousFrameDuration;\n  }\n\n  get speed() {\n    return this._speed;\n  }\n\n  set speed(playbackRate) {\n    const pbr = +playbackRate;\n    this._speed = pbr < minValue ? minValue : pbr;\n  }\n\n  /**\n   * @param  {Number} time\n   * @return {tickModes}\n   */\n  requestTick(time) {\n    const scheduledTime = this._scheduledTime;\n    const elapsedTime = this._elapsedTime;\n    this._elapsedTime += (time - elapsedTime);\n    // If the elapsed time is lower than the scheduled time\n    // this means not enough time has passed to hit one frameDuration\n    // so skip that frame\n    if (elapsedTime < scheduledTime) return tickModes.NONE;\n    const frameDuration = this._frameDuration;\n    const frameDelta = elapsedTime - scheduledTime;\n    // Ensures that _scheduledTime progresses in steps of at least 1 frameDuration.\n    // Skips ahead if the actual elapsed time is higher.\n    this._scheduledTime += frameDelta < frameDuration ? frameDuration : frameDelta;\n    return tickModes.AUTO;\n  }\n\n  /**\n   * @param  {Number} time\n   * @return {Number}\n   */\n  computeDeltaTime(time) {\n    const delta = time - this._lastTime;\n    this.deltaTime = delta;\n    this._lastTime = time;\n    return delta;\n  }\n\n}\n\n\n\n\n/**\n * @param  {Tickable} tickable\n * @param  {Number} time\n * @param  {Number} muteCallbacks\n * @param  {Number} internalRender\n * @param  {tickModes} tickMode\n * @return {Number}\n */\nconst render = (tickable, time, muteCallbacks, internalRender, tickMode) => {\n\n  const parent = tickable.parent;\n  const duration = tickable.duration;\n  const completed = tickable.completed;\n  const iterationDuration = tickable.iterationDuration;\n  const iterationCount = tickable.iterationCount;\n  const _currentIteration = tickable._currentIteration;\n  const _loopDelay = tickable._loopDelay;\n  const _reversed = tickable._reversed;\n  const _alternate = tickable._alternate;\n  const _hasChildren = tickable._hasChildren;\n  const tickableDelay = tickable._delay;\n  const tickablePrevAbsoluteTime = tickable._currentTime; // TODO: rename ._currentTime to ._absoluteCurrentTime\n\n  const tickableEndTime = tickableDelay + iterationDuration;\n  const tickableAbsoluteTime = time - tickableDelay;\n  const tickablePrevTime = clamp(tickablePrevAbsoluteTime, -tickableDelay, duration);\n  const tickableCurrentTime = clamp(tickableAbsoluteTime, -tickableDelay, duration);\n  const deltaTime = tickableAbsoluteTime - tickablePrevAbsoluteTime;\n  const isCurrentTimeAboveZero = tickableCurrentTime > 0;\n  const isCurrentTimeEqualOrAboveDuration = tickableCurrentTime >= duration;\n  const isSetter = duration <= minValue;\n  const forcedTick = tickMode === tickModes.FORCE;\n\n  let isOdd = 0;\n  let iterationElapsedTime = tickableAbsoluteTime;\n  // Render checks\n  // Used to also check if the children have rendered in order to trigger the onRender callback on the parent timer\n  let hasRendered = 0;\n\n  // Execute the \"expensive\" iterations calculations only when necessary\n  if (iterationCount > 1) {\n    // bitwise NOT operator seems to be generally faster than Math.floor() across browsers\n    const currentIteration = ~~(tickableCurrentTime / (iterationDuration + (isCurrentTimeEqualOrAboveDuration ? 0 : _loopDelay)));\n    tickable._currentIteration = clamp(currentIteration, 0, iterationCount);\n    // Prevent the iteration count to go above the max iterations when reaching the end of the animation\n    if (isCurrentTimeEqualOrAboveDuration) tickable._currentIteration--;\n    isOdd = tickable._currentIteration % 2;\n    iterationElapsedTime = tickableCurrentTime % (iterationDuration + _loopDelay) || 0;\n  }\n\n  // Checks if exactly one of _reversed and (_alternate && isOdd) is true\n  const isReversed = _reversed ^ (_alternate && isOdd);\n  const _ease = /** @type {Renderable} */(tickable)._ease;\n  let iterationTime = isCurrentTimeEqualOrAboveDuration ? isReversed ? 0 : duration : isReversed ? iterationDuration - iterationElapsedTime : iterationElapsedTime;\n  if (_ease) iterationTime = iterationDuration * _ease(iterationTime / iterationDuration) || 0;\n  const isRunningBackwards = (parent ? parent.backwards : tickableAbsoluteTime < tickablePrevAbsoluteTime) ? !isReversed : !!isReversed;\n\n  tickable._currentTime = tickableAbsoluteTime;\n  tickable._iterationTime = iterationTime;\n  tickable.backwards = isRunningBackwards;\n\n  if (isCurrentTimeAboveZero && !tickable.began) {\n    tickable.began = true;\n    if (!muteCallbacks && !(parent && (isRunningBackwards || !parent.began))) {\n      tickable.onBegin(/** @type {CallbackArgument} */(tickable));\n    }\n  } else if (tickableAbsoluteTime <= 0) {\n    tickable.began = false;\n  }\n\n  // Only triggers onLoop for tickable without children, otherwise call the the onLoop callback in the tick function\n  // Make sure to trigger the onLoop before rendering to allow .refresh() to pickup the current values\n  if (!muteCallbacks && !_hasChildren && isCurrentTimeAboveZero && tickable._currentIteration !== _currentIteration) {\n    tickable.onLoop(/** @type {CallbackArgument} */(tickable));\n  }\n\n  if (\n    forcedTick ||\n    tickMode === tickModes.AUTO && (\n      time >= tickableDelay && time <= tickableEndTime || // Normal render\n      time <= tickableDelay && tickablePrevTime > tickableDelay || // Playhead is before the animation start time so make sure the animation is at its initial state\n      time >= tickableEndTime && tickablePrevTime !== duration // Playhead is after the animation end time so make sure the animation is at its end state\n    ) ||\n    iterationTime >= tickableEndTime && tickablePrevTime !== duration ||\n    iterationTime <= tickableDelay && tickablePrevTime > 0 ||\n    time <= tickablePrevTime && tickablePrevTime === duration && completed || // Force a render if a seek occurs on an completed animation\n    isCurrentTimeEqualOrAboveDuration && !completed && isSetter // This prevents 0 duration tickables to be skipped\n  ) {\n\n    if (isCurrentTimeAboveZero) {\n      // Trigger onUpdate callback before rendering\n      tickable.computeDeltaTime(tickablePrevTime);\n      if (!muteCallbacks) tickable.onBeforeUpdate(/** @type {CallbackArgument} */(tickable));\n    }\n\n    // Start tweens rendering\n    if (!_hasChildren) {\n\n      // Time has jumped more than globals.tickThreshold so consider this tick manual\n      const forcedRender = forcedTick || (isRunningBackwards ? deltaTime * -1 : deltaTime) >= globals.tickThreshold;\n      const absoluteTime = tickable._offset + (parent ? parent._offset : 0) + tickableDelay + iterationTime;\n\n      // Only Animation can have tweens, Timer returns undefined\n      let tween = /** @type {Tween} */(/** @type {JSAnimation} */(tickable)._head);\n      let tweenTarget;\n      let tweenStyle;\n      let tweenTargetTransforms;\n      let tweenTargetTransformsProperties;\n      let tweenTransformsNeedUpdate = 0;\n\n      while (tween) {\n\n        const tweenComposition = tween._composition;\n        const tweenCurrentTime = tween._currentTime;\n        const tweenChangeDuration = tween._changeDuration;\n        const tweenAbsEndTime = tween._absoluteStartTime + tween._changeDuration;\n        const tweenNextRep = tween._nextRep;\n        const tweenPrevRep = tween._prevRep;\n        const tweenHasComposition = tweenComposition !== compositionTypes.none;\n\n        if ((forcedRender || (\n            (tweenCurrentTime !== tweenChangeDuration || absoluteTime <= tweenAbsEndTime + (tweenNextRep ? tweenNextRep._delay : 0)) &&\n            (tweenCurrentTime !== 0 || absoluteTime >= tween._absoluteStartTime)\n          )) && (!tweenHasComposition || (\n            !tween._isOverridden &&\n            (!tween._isOverlapped || absoluteTime <= tweenAbsEndTime) &&\n            (!tweenNextRep || (tweenNextRep._isOverridden || absoluteTime <= tweenNextRep._absoluteStartTime)) &&\n            (!tweenPrevRep || (tweenPrevRep._isOverridden || (absoluteTime >= (tweenPrevRep._absoluteStartTime + tweenPrevRep._changeDuration) + tween._delay)))\n          ))\n        ) {\n\n          const tweenNewTime = tween._currentTime = clamp(iterationTime - tween._startTime, 0, tweenChangeDuration);\n          const tweenProgress = tween._ease(tweenNewTime / tween._updateDuration);\n          const tweenModifier = tween._modifier;\n          const tweenValueType = tween._valueType;\n          const tweenType = tween._tweenType;\n          const tweenIsObject = tweenType === tweenTypes.OBJECT;\n          const tweenIsNumber = tweenValueType === valueTypes.NUMBER;\n          // Only round the in-between frames values if the final value is a string\n          const tweenPrecision = (tweenIsNumber && tweenIsObject) || tweenProgress === 0 || tweenProgress === 1 ? -1 : globals.precision;\n\n          // Recompose tween value\n          /** @type {String|Number} */\n          let value;\n          /** @type {Number} */\n          let number;\n\n          if (tweenIsNumber) {\n            value = number = /** @type {Number} */(tweenModifier(round(interpolate(tween._fromNumber, tween._toNumber,  tweenProgress), tweenPrecision )));\n          } else if (tweenValueType === valueTypes.UNIT) {\n            // Rounding the values speed up string composition\n            number = /** @type {Number} */(tweenModifier(round(interpolate(tween._fromNumber, tween._toNumber,  tweenProgress), tweenPrecision)));\n            value = `${number}${tween._unit}`;\n          } else if (tweenValueType === valueTypes.COLOR) {\n            const fn = tween._fromNumbers;\n            const tn = tween._toNumbers;\n            const r = round(clamp(/** @type {Number} */(tweenModifier(interpolate(fn[0], tn[0], tweenProgress))), 0, 255), 0);\n            const g = round(clamp(/** @type {Number} */(tweenModifier(interpolate(fn[1], tn[1], tweenProgress))), 0, 255), 0);\n            const b = round(clamp(/** @type {Number} */(tweenModifier(interpolate(fn[2], tn[2], tweenProgress))), 0, 255), 0);\n            const a = clamp(/** @type {Number} */(tweenModifier(round(interpolate(fn[3], tn[3], tweenProgress), tweenPrecision))), 0, 1);\n            value = `rgba(${r},${g},${b},${a})`;\n            if (tweenHasComposition) {\n              const ns = tween._numbers;\n              ns[0] = r;\n              ns[1] = g;\n              ns[2] = b;\n              ns[3] = a;\n            }\n          } else if (tweenValueType === valueTypes.COMPLEX) {\n            value = tween._strings[0];\n            for (let j = 0, l = tween._toNumbers.length; j < l; j++) {\n              const n = /** @type {Number} */(tweenModifier(round(interpolate(tween._fromNumbers[j], tween._toNumbers[j], tweenProgress), tweenPrecision)));\n              const s = tween._strings[j + 1];\n              value += `${s ? n + s : n}`;\n              if (tweenHasComposition) {\n                tween._numbers[j] = n;\n              }\n            }\n          }\n\n          // For additive tweens and Animatables\n          if (tweenHasComposition) {\n            tween._number = number;\n          }\n\n          if (!internalRender && tweenComposition !== compositionTypes.blend) {\n\n            const tweenProperty = tween.property;\n            tweenTarget = tween.target;\n\n            if (tweenIsObject) {\n              tweenTarget[tweenProperty] = value;\n            } else if (tweenType === tweenTypes.ATTRIBUTE) {\n              /** @type {DOMTarget} */(tweenTarget).setAttribute(tweenProperty, /** @type {String} */(value));\n            } else {\n              tweenStyle = /** @type {DOMTarget} */(tweenTarget).style;\n              if (tweenType === tweenTypes.TRANSFORM) {\n                if (tweenTarget !== tweenTargetTransforms) {\n                  tweenTargetTransforms = tweenTarget;\n                  // NOTE: Referencing the cachedTransforms in the tween property directly can be a little bit faster but appears to increase memory usage.\n                  tweenTargetTransformsProperties = tweenTarget[transformsSymbol];\n                }\n                tweenTargetTransformsProperties[tweenProperty] = value;\n                tweenTransformsNeedUpdate = 1;\n              } else if (tweenType === tweenTypes.CSS) {\n                tweenStyle[tweenProperty] = value;\n              } else if (tweenType === tweenTypes.CSS_VAR) {\n                tweenStyle.setProperty(tweenProperty,/** @type {String} */(value));\n              }\n            }\n\n            if (isCurrentTimeAboveZero) hasRendered = 1;\n\n          } else {\n            // Used for composing timeline tweens without having to do a real render\n            tween._value = value;\n          }\n\n        }\n\n        // NOTE: Possible improvement: Use translate(x,y) / translate3d(x,y,z) syntax\n        // to reduce memory usage on string composition\n        if (tweenTransformsNeedUpdate && tween._renderTransforms) {\n          let str = emptyString;\n          for (let key in tweenTargetTransformsProperties) {\n            str += `${transformsFragmentStrings[key]}${tweenTargetTransformsProperties[key]}) `;\n          }\n          tweenStyle.transform = str;\n          tweenTransformsNeedUpdate = 0;\n        }\n\n        tween = tween._next;\n      }\n\n      if (!muteCallbacks && hasRendered) {\n        /** @type {JSAnimation} */(tickable).onRender(/** @type {JSAnimation} */(tickable));\n      }\n    }\n\n    if (!muteCallbacks && isCurrentTimeAboveZero) {\n      tickable.onUpdate(/** @type {CallbackArgument} */(tickable));\n    }\n\n  }\n\n  // End tweens rendering\n\n  // Handle setters on timeline differently and allow re-trigering the onComplete callback when seeking backwards\n  if (parent && isSetter) {\n    if (!muteCallbacks && (\n      (parent.began && !isRunningBackwards && tickableAbsoluteTime >= duration && !completed) ||\n      (isRunningBackwards && tickableAbsoluteTime <= minValue && completed)\n    )) {\n      tickable.onComplete(/** @type {CallbackArgument} */(tickable));\n      tickable.completed = !isRunningBackwards;\n    }\n  // If currentTime is both above 0 and at least equals to duration, handles normal onComplete or infinite loops\n  } else if (isCurrentTimeAboveZero && isCurrentTimeEqualOrAboveDuration) {\n    if (iterationCount === Infinity) {\n      // Offset the tickable _startTime with its duration to reset _currentTime to 0 and continue the infinite timer\n      tickable._startTime += tickable.duration;\n    } else if (tickable._currentIteration >= iterationCount - 1) {\n      // By setting paused to true, we tell the engine loop to not render this tickable and removes it from the list on the next tick\n      tickable.paused = true;\n      if (!completed && !_hasChildren) {\n        // If the tickable has children, triggers onComplete() only when all children have completed in the tick function\n        tickable.completed = true;\n        if (!muteCallbacks && !(parent && (isRunningBackwards || !parent.began))) {\n          tickable.onComplete(/** @type {CallbackArgument} */(tickable));\n          tickable._resolve(/** @type {CallbackArgument} */(tickable));\n        }\n      }\n    }\n  // Otherwise set the completed flag to false\n  } else {\n    tickable.completed = false;\n  }\n\n  // NOTE: hasRendered * direction (negative for backwards) this way we can remove the tickable.backwards property completly ?\n  return hasRendered;\n};\n\n/**\n * @param  {Tickable} tickable\n * @param  {Number} time\n * @param  {Number} muteCallbacks\n * @param  {Number} internalRender\n * @param  {Number} tickMode\n * @return {void}\n */\nconst tick = (tickable, time, muteCallbacks, internalRender, tickMode) => {\n  const _currentIteration = tickable._currentIteration;\n  render(tickable, time, muteCallbacks, internalRender, tickMode);\n  if (tickable._hasChildren) {\n    const tl = /** @type {Timeline} */(tickable);\n    const tlIsRunningBackwards = tl.backwards;\n    const tlChildrenTime = internalRender ? time : tl._iterationTime;\n    const tlCildrenTickTime = now();\n\n    let tlChildrenHasRendered = 0;\n    let tlChildrenHaveCompleted = true;\n\n    // If the timeline has looped forward, we need to manually triggers children skipped callbacks\n    if (!internalRender && tl._currentIteration !== _currentIteration) {\n      const tlIterationDuration = tl.iterationDuration;\n      forEachChildren(tl, (/** @type {JSAnimation} */child) => {\n        if (!tlIsRunningBackwards) {\n          // Force an internal render to trigger the callbacks if the child has not completed on loop\n          if (!child.completed && !child.backwards && child._currentTime < child.iterationDuration) {\n            render(child, tlIterationDuration, muteCallbacks, 1, tickModes.FORCE);\n          }\n          // Reset their began and completed flags to allow retrigering callbacks on the next iteration\n          child.began = false;\n          child.completed = false;\n        } else {\n          const childDuration = child.duration;\n          const childStartTime = child._offset + child._delay;\n          const childEndTime = childStartTime + childDuration;\n          // Triggers the onComplete callback on reverse for children on the edges of the timeline\n          if (!muteCallbacks && childDuration <= minValue && (!childStartTime || childEndTime === tlIterationDuration)) {\n            child.onComplete(child);\n          }\n        }\n      });\n      if (!muteCallbacks) tl.onLoop(/** @type {CallbackArgument} */(tl));\n    }\n\n    forEachChildren(tl, (/** @type {JSAnimation} */child) => {\n      const childTime = round((tlChildrenTime - child._offset) * child._speed, 12); // Rounding is needed when using seconds\n      const childTickMode = child._fps < tl._fps ? child.requestTick(tlCildrenTickTime) : tickMode;\n      tlChildrenHasRendered += render(child, childTime, muteCallbacks, internalRender, childTickMode);\n      if (!child.completed && tlChildrenHaveCompleted) tlChildrenHaveCompleted = false;\n    }, tlIsRunningBackwards);\n\n    // Renders on timeline are triggered by its children so it needs to be set after rendering the children\n    if (!muteCallbacks && tlChildrenHasRendered) tl.onRender(/** @type {CallbackArgument} */(tl));\n\n    // Triggers the timeline onComplete() once all chindren all completed and the current time has reached the end\n    if (tlChildrenHaveCompleted && tl._currentTime >= tl.duration) {\n      // Make sure the paused flag is false in case it has been skipped in the render function\n      tl.paused = true;\n      if (!tl.completed) {\n        tl.completed = true;\n        if (!muteCallbacks) {\n          tl.onComplete(/** @type {CallbackArgument} */(tl));\n          tl._resolve(/** @type {CallbackArgument} */(tl));\n        }\n      }\n    }\n  }\n};\n\n\n\n\nconst additive = {\n  animation: null,\n  update: noop,\n};\n\n/**\n * @typedef AdditiveAnimation\n * @property {Number} duration\n * @property {Number} _offset\n * @property {Number} _delay\n * @property {Tween} _head\n * @property {Tween} _tail\n */\n\n/**\n * @param  {TweenAdditiveLookups} lookups\n * @return {AdditiveAnimation}\n */\nconst addAdditiveAnimation = lookups => {\n  let animation = additive.animation;\n  if (!animation) {\n    animation = {\n      duration: minValue,\n      computeDeltaTime: noop,\n      _offset: 0,\n      _delay: 0,\n      _head: null,\n      _tail: null,\n    };\n    additive.animation = animation;\n    additive.update = () => {\n      lookups.forEach(propertyAnimation => {\n        for (let propertyName in propertyAnimation) {\n          const tweens = propertyAnimation[propertyName];\n          const lookupTween = tweens._head;\n          if (lookupTween) {\n            const valueType = lookupTween._valueType;\n            const additiveValues = valueType === valueTypes.COMPLEX || valueType === valueTypes.COLOR ? cloneArray(lookupTween._fromNumbers) : null;\n            let additiveValue = lookupTween._fromNumber;\n            let tween = tweens._tail;\n            while (tween && tween !== lookupTween) {\n              if (additiveValues) {\n                for (let i = 0, l = tween._numbers.length; i < l; i++) additiveValues[i] += tween._numbers[i];\n              } else {\n                additiveValue += tween._number;\n              }\n              tween = tween._prevAdd;\n            }\n            lookupTween._toNumber = additiveValue;\n            lookupTween._toNumbers = additiveValues;\n          }\n        }\n      });\n      // TODO: Avoid polymorphism here, idealy the additive animation should be a regular animation with a higher priority in the render loop\n      render(animation, 1, 1, 0, tickModes.FORCE);\n    };\n  }\n  return animation;\n};\n\nconst engineTickMethod = /*#__PURE__*/ (() => isBrowser ? requestAnimationFrame : setImmediate)();\nconst engineCancelMethod = /*#__PURE__*/ (() => isBrowser ? cancelAnimationFrame : clearImmediate)();\n\nclass Engine extends Clock {\n\n  /** @param {Number} [initTime] */\n  constructor(initTime) {\n    super(initTime);\n    this.useDefaultMainLoop = true;\n    this.pauseOnDocumentHidden = true;\n    /** @type {DefaultsParams} */\n    this.defaults = defaults;\n    this.paused = isBrowser && doc.hidden ? true  : false;\n    /** @type {Number|NodeJS.Immediate} */\n    this.reqId = null;\n  }\n\n  update() {\n    const time = this._currentTime = now();\n    if (this.requestTick(time)) {\n      this.computeDeltaTime(time);\n      const engineSpeed = this._speed;\n      const engineFps = this._fps;\n      let activeTickable = /** @type {Tickable} */(this._head);\n      while (activeTickable) {\n        const nextTickable = activeTickable._next;\n        if (!activeTickable.paused) {\n          tick(\n            activeTickable,\n            (time - activeTickable._startTime) * activeTickable._speed * engineSpeed,\n            0, // !muteCallbacks\n            0, // !internalRender\n            activeTickable._fps < engineFps ? activeTickable.requestTick(time) : tickModes.AUTO\n          );\n        } else {\n          removeChild(this, activeTickable);\n          this._hasChildren = !!this._tail;\n          activeTickable._running = false;\n          if (activeTickable.completed && !activeTickable._cancelled) {\n            activeTickable.cancel();\n          }\n        }\n        activeTickable = nextTickable;\n      }\n      additive.update();\n    }\n  }\n\n  wake() {\n    if (this.useDefaultMainLoop && !this.reqId && !this.paused) {\n      this.reqId = engineTickMethod(tickEngine);\n    }\n    return this;\n  }\n\n  pause() {\n    this.paused = true;\n    return killEngine();\n  }\n\n  resume() {\n    if (!this.paused) return;\n    this.paused = false;\n    forEachChildren(this, (/** @type {Tickable} */child) => child.resetTime());\n    return this.wake();\n  }\n\n  // Getter and setter for speed\n  get speed() {\n    return this._speed * (globals.timeScale === 1 ? 1 : K);\n  }\n\n  set speed(playbackRate) {\n    this._speed = playbackRate * globals.timeScale;\n    forEachChildren(this, (/** @type {Tickable} */child) => child.speed = child._speed);\n  }\n\n  // Getter and setter for timeUnit\n  get timeUnit() {\n    return globals.timeScale === 1 ? 'ms' : 's';\n  };\n\n  set timeUnit(unit) {\n    const secondsScale = 0.001;\n    const isSecond = unit === 's';\n    const newScale = isSecond ? secondsScale : 1;\n    if (globals.timeScale !== newScale) {\n      globals.timeScale = newScale;\n      globals.tickThreshold = 200 * newScale;\n      const scaleFactor = isSecond ? secondsScale : K;\n      /** @type {Number} */\n      (this.defaults.duration) *= scaleFactor;\n      this._speed *= scaleFactor;\n    }\n  }\n\n  // Getter and setter for precision\n  get precision() {\n    return globals.precision;\n  }\n\n  set precision(precision) {\n    globals.precision = precision;\n  }\n\n}\nconst engine = /*#__PURE__*/(() => {\n  const engine = new Engine(now());\n  if (isBrowser) {\n    globalVersions.engine = engine;\n    doc.addEventListener('visibilitychange', () => {\n      if (!engine.pauseOnDocumentHidden) return;\n      doc.hidden ? engine.pause() : engine.resume();\n    });\n  }\n  return engine;\n})();\n\n\nconst tickEngine = () => {\n  if (engine._head) {\n    engine.reqId = engineTickMethod(tickEngine);\n    engine.update();\n  } else {\n    engine.reqId = 0;\n  }\n};\n\nconst killEngine = () => {\n  engineCancelMethod(/** @type {NodeJS.Immediate & Number} */(engine.reqId));\n  engine.reqId = 0;\n  return engine;\n};\n\n\n\n\n/**\n * @param  {DOMTarget} target\n * @param  {String} propName\n * @param  {Object} animationInlineStyles\n * @return {String}\n */\nconst parseInlineTransforms = (target, propName, animationInlineStyles) => {\n  const inlineTransforms = target.style.transform;\n  let inlinedStylesPropertyValue;\n  if (inlineTransforms) {\n    const cachedTransforms = target[transformsSymbol];\n    let t; while (t = transformsExecRgx.exec(inlineTransforms)) {\n      const inlinePropertyName = t[1];\n      // const inlinePropertyValue = t[2];\n      const inlinePropertyValue = t[2].slice(1, -1);\n      cachedTransforms[inlinePropertyName] = inlinePropertyValue;\n      if (inlinePropertyName === propName) {\n        inlinedStylesPropertyValue = inlinePropertyValue;\n        // Store the new parsed inline styles if animationInlineStyles is provided\n        if (animationInlineStyles) {\n          animationInlineStyles[propName] = inlinePropertyValue;\n        }\n      }\n    }\n  }\n  return inlineTransforms && !isUnd(inlinedStylesPropertyValue) ? inlinedStylesPropertyValue :\n    stringStartsWith(propName, 'scale') ? '1' :\n    stringStartsWith(propName, 'rotate') || stringStartsWith(propName, 'skew') ? '0deg' : '0px';\n};\n\n\n\n\n/**\n * @param  {DOMTargetsParam|TargetsParam} v\n * @return {NodeList|HTMLCollection}\n */\nfunction getNodeList(v) {\n  const n = isStr(v) ? scope.root.querySelectorAll(v) : v;\n  if (n instanceof NodeList || n instanceof HTMLCollection) return n;\n}\n\n/**\n * @overload\n * @param  {DOMTargetsParam} targets\n * @return {DOMTargetsArray}\n *\n * @overload\n * @param  {JSTargetsParam} targets\n * @return {JSTargetsArray}\n *\n * @overload\n * @param  {TargetsParam} targets\n * @return {TargetsArray}\n *\n * @param  {DOMTargetsParam|JSTargetsParam|TargetsParam} targets\n */\nfunction parseTargets(targets) {\n  if (isNil(targets)) return /** @type {TargetsArray} */([]);\n  if (isArr(targets)) {\n    const flattened = targets.flat(Infinity);\n    /** @type {TargetsArray} */\n    const parsed = [];\n    for (let i = 0, l = flattened.length; i < l; i++) {\n      const item = flattened[i];\n      if (!isNil(item)) {\n        const nodeList = getNodeList(item);\n        if (nodeList) {\n          for (let j = 0, jl = nodeList.length; j < jl; j++) {\n            const subItem = nodeList[j];\n            if (!isNil(subItem)) {\n              let isDuplicate = false;\n              for (let k = 0, kl = parsed.length; k < kl; k++) {\n                if (parsed[k] === subItem) {\n                  isDuplicate = true;\n                  break;\n                }\n              }\n              if (!isDuplicate) {\n                parsed.push(subItem);\n              }\n            }\n          }\n        } else {\n          let isDuplicate = false;\n          for (let j = 0, jl = parsed.length; j < jl; j++) {\n            if (parsed[j] === item) {\n              isDuplicate = true;\n              break;\n            }\n          }\n          if (!isDuplicate) {\n            parsed.push(item);\n          }\n        }\n      }\n    }\n    return parsed;\n  }\n  if (!isBrowser) return /** @type {JSTargetsArray} */([targets]);\n  const nodeList = getNodeList(targets);\n  if (nodeList) return /** @type {DOMTargetsArray} */(Array.from(nodeList));\n  return /** @type {TargetsArray} */([targets]);\n}\n\n/**\n * @overload\n * @param  {DOMTargetsParam} targets\n * @return {DOMTargetsArray}\n *\n * @overload\n * @param  {JSTargetsParam} targets\n * @return {JSTargetsArray}\n *\n * @overload\n * @param  {TargetsParam} targets\n * @return {TargetsArray}\n *\n * @param  {DOMTargetsParam|JSTargetsParam|TargetsParam} targets\n */\nfunction registerTargets(targets) {\n  const parsedTargetsArray = parseTargets(targets);\n  const parsedTargetsLength = parsedTargetsArray.length;\n  if (parsedTargetsLength) {\n    for (let i = 0; i < parsedTargetsLength; i++) {\n      const target = parsedTargetsArray[i];\n      if (!target[isRegisteredTargetSymbol]) {\n        target[isRegisteredTargetSymbol] = true;\n        const isSvgType = isSvg(target);\n        const isDom = /** @type {DOMTarget} */(target).nodeType || isSvgType;\n        if (isDom) {\n          target[isDomSymbol] = true;\n          target[isSvgSymbol] = isSvgType;\n          target[transformsSymbol] = {};\n        }\n      }\n    }\n  }\n  return parsedTargetsArray;\n}\n\n\n\n\n/**\n * @param  {TargetsParam} path\n * @return {SVGGeometryElement|undefined}\n */\nconst getPath = path => {\n  const parsedTargets = parseTargets(path);\n  const $parsedSvg = /** @type {SVGGeometryElement} */(parsedTargets[0]);\n  if (!$parsedSvg || !isSvg($parsedSvg)) return;\n  return $parsedSvg;\n};\n\n/**\n * @param  {TargetsParam} path2\n * @param  {Number} [precision]\n * @return {FunctionValue}\n */\nconst morphTo = (path2, precision = .33) => ($path1) => {\n  const $path2 = /** @type {SVGGeometryElement} */(getPath(path2));\n  if (!$path2) return;\n  const isPath = $path1.tagName === 'path';\n  const separator = isPath ? ' ' : ',';\n  const previousPoints = $path1[morphPointsSymbol];\n  if (previousPoints) $path1.setAttribute(isPath ? 'd' : 'points', previousPoints);\n\n  let v1 = '', v2 = '';\n\n  if (!precision) {\n    v1 = $path1.getAttribute(isPath ? 'd' : 'points');\n    v2 = $path2.getAttribute(isPath ? 'd' : 'points');\n  } else {\n    const length1 = /** @type {SVGGeometryElement} */($path1).getTotalLength();\n    const length2 = $path2.getTotalLength();\n    const maxPoints = Math.max(Math.ceil(length1 * precision), Math.ceil(length2 * precision));\n    for (let i = 0; i < maxPoints; i++) {\n      const t = i / (maxPoints - 1);\n      const pointOnPath1 = /** @type {SVGGeometryElement} */($path1).getPointAtLength(length1 * t);\n      const pointOnPath2 = $path2.getPointAtLength(length2 * t);\n      const prefix = isPath ? (i === 0 ? 'M' : 'L') : '';\n      v1 += prefix + round(pointOnPath1.x, 3) + separator + pointOnPath1.y + ' ';\n      v2 += prefix + round(pointOnPath2.x, 3) + separator + pointOnPath2.y + ' ';\n    }\n  }\n\n  $path1[morphPointsSymbol] = v2;\n\n  return [v1, v2];\n};\n\n/**\n * @param {SVGGeometryElement} [$el]\n * @return {Number}\n */\nconst getScaleFactor = $el => {\n  let scaleFactor = 1;\n  if ($el && $el.getCTM) {\n    const ctm = $el.getCTM();\n    if (ctm) {\n      const scaleX = sqrt(ctm.a * ctm.a + ctm.b * ctm.b);\n      const scaleY = sqrt(ctm.c * ctm.c + ctm.d * ctm.d);\n      scaleFactor = (scaleX + scaleY) / 2;\n    }\n  }\n  return scaleFactor;\n};\n\n/**\n * Creates a proxy that wraps an SVGGeometryElement and adds drawing functionality.\n * @param {SVGGeometryElement} $el - The SVG element to transform into a drawable\n * @param {number} start - Starting position (0-1)\n * @param {number} end - Ending position (0-1)\n * @return {DrawableSVGGeometry} - Returns a proxy that preserves the original element's type with additional 'draw' attribute functionality\n */\nconst createDrawableProxy = ($el, start, end) => {\n  const pathLength = K;\n  const computedStyles = getComputedStyle($el);\n  const strokeLineCap = computedStyles.strokeLinecap;\n  // @ts-ignore\n  const $scalled = computedStyles.vectorEffect === 'non-scaling-stroke' ? $el : null;\n  let currentCap = strokeLineCap;\n\n  const proxy = new Proxy($el, {\n    get(target, property) {\n      const value = target[property];\n      if (property === proxyTargetSymbol) return target;\n      if (property === 'setAttribute') {\n        return (...args) => {\n          if (args[0] === 'draw') {\n            const value = args[1];\n            const values = value.split(' ');\n            const v1 = +values[0];\n            const v2 = +values[1];\n            // TOTO: Benchmark if performing two slices is more performant than one split\n            // const spaceIndex = value.indexOf(' ');\n            // const v1 = round(+value.slice(0, spaceIndex), precision);\n            // const v2 = round(+value.slice(spaceIndex + 1), precision);\n            const scaleFactor = getScaleFactor($scalled);\n            const os = v1 * -1e3 * scaleFactor;\n            const d1 = (v2 * pathLength * scaleFactor) + os;\n            const d2 = (pathLength * scaleFactor +\n                      ((v1 === 0 && v2 === 1) || (v1 === 1 && v2 === 0) ? 0 : 10 * scaleFactor) - d1);\n            if (strokeLineCap !== 'butt') {\n              const newCap = v1 === v2 ? 'butt' : strokeLineCap;\n              if (currentCap !== newCap) {\n                target.style.strokeLinecap = `${newCap}`;\n                currentCap = newCap;\n              }\n            }\n            target.setAttribute('stroke-dashoffset', `${os}`);\n            target.setAttribute('stroke-dasharray', `${d1} ${d2}`);\n          }\n          return Reflect.apply(value, target, args);\n        };\n      }\n\n      if (isFnc(value)) {\n        return (...args) => Reflect.apply(value, target, args);\n      } else {\n        return value;\n      }\n    }\n  });\n\n  if ($el.getAttribute('pathLength') !== `${pathLength}`) {\n    $el.setAttribute('pathLength', `${pathLength}`);\n    proxy.setAttribute('draw', `${start} ${end}`);\n  }\n\n  return /** @type {DrawableSVGGeometry} */(proxy);\n};\n\n/**\n * Creates drawable proxies for multiple SVG elements.\n * @param {TargetsParam} selector - CSS selector, SVG element, or array of elements and selectors\n * @param {number} [start=0] - Starting position (0-1)\n * @param {number} [end=0] - Ending position (0-1)\n * @return {Array<DrawableSVGGeometry>} - Array of proxied elements with drawing functionality\n */\nconst createDrawable = (selector, start = 0, end = 0) => {\n  const els = parseTargets(selector);\n  return els.map($el => createDrawableProxy(\n    /** @type {SVGGeometryElement} */($el),\n    start,\n    end\n  ));\n};\n\n// Motion path animation\n\n/**\n * @param {SVGGeometryElement} $path\n * @param {Number} progress\n * @param {Number}lookup\n * @return {DOMPoint}\n */\nconst getPathPoint = ($path, progress, lookup = 0) => {\n  return $path.getPointAtLength(progress + lookup >= 1 ? progress + lookup : 0);\n};\n\n/**\n * @param {SVGGeometryElement} $path\n * @param {String} pathProperty\n * @return {FunctionValue}\n */\nconst getPathProgess = ($path, pathProperty) => {\n  return $el => {\n    const totalLength = +($path.getTotalLength());\n    const inSvg = $el[isSvgSymbol];\n    const ctm = $path.getCTM();\n    /** @type {TweenObjectValue} */\n    return {\n      from: 0,\n      to: totalLength,\n      /** @type {TweenModifier} */\n      modifier: progress => {\n        if (pathProperty === 'a') {\n          const p0 = getPathPoint($path, progress, -1);\n          const p1 = getPathPoint($path, progress, 1);\n          return atan2(p1.y - p0.y, p1.x - p0.x) * 180 / PI;\n        } else {\n          const p = getPathPoint($path, progress, 0);\n          return pathProperty === 'x' ?\n            inSvg || !ctm ? p.x : p.x * ctm.a + p.y * ctm.c + ctm.e :\n            inSvg || !ctm ? p.y : p.x * ctm.b + p.y * ctm.d + ctm.f\n        }\n      }\n    }\n  }\n};\n\n/**\n * @param {TargetsParam} path\n */\nconst createMotionPath = path => {\n  const $path = getPath(path);\n  if (!$path) return;\n  return {\n    translateX: getPathProgess($path, 'x'),\n    translateY: getPathProgess($path, 'y'),\n    rotate: getPathProgess($path, 'a'),\n  }\n};\n\n// Check for valid SVG attribute\n\nconst cssReservedProperties = ['opacity', 'rotate', 'overflow', 'color'];\n\n/**\n * @param  {Target} el\n * @param  {String} propertyName\n * @return {Boolean}\n */\nconst isValidSVGAttribute = (el, propertyName) => {\n  // Return early and use CSS opacity animation instead (already better default values (opacity: 1 instead of 0)) and rotate should be considered a transform\n  if (cssReservedProperties.includes(propertyName)) return false;\n  if (el.getAttribute(propertyName) || propertyName in el) {\n    if (propertyName === 'scale') { // Scale\n      const elParentNode = /** @type {SVGGeometryElement} */(/** @type {DOMTarget} */(el).parentNode);\n      // Only consider scale as a valid SVG attribute on filter element\n      return elParentNode && elParentNode.tagName === 'filter';\n    }\n    return true;\n  }\n};\n\nconst svg = {\n  morphTo,\n  createMotionPath,\n  createDrawable,\n};\n\n\n\n\n/**\n * RGB / RGBA Color value string -> RGBA values array\n * @param  {String} rgbValue\n * @return {ColorArray}\n */\nconst rgbToRgba = rgbValue => {\n  const rgba = rgbExecRgx.exec(rgbValue) || rgbaExecRgx.exec(rgbValue);\n  const a = !isUnd(rgba[4]) ? +rgba[4] : 1;\n  return [\n    +rgba[1],\n    +rgba[2],\n    +rgba[3],\n    a\n  ]\n};\n\n/**\n * HEX3 / HEX3A / HEX6 / HEX6A Color value string -> RGBA values array\n * @param  {String} hexValue\n * @return {ColorArray}\n */\nconst hexToRgba = hexValue => {\n  const hexLength = hexValue.length;\n  const isShort = hexLength === 4 || hexLength === 5;\n  return [\n    +('0x' + hexValue[1] + hexValue[isShort ? 1 : 2]),\n    +('0x' + hexValue[isShort ? 2 : 3] + hexValue[isShort ? 2 : 4]),\n    +('0x' + hexValue[isShort ? 3 : 5] + hexValue[isShort ? 3 : 6]),\n    ((hexLength === 5 || hexLength === 9) ? +(+('0x' + hexValue[isShort ? 4 : 7] + hexValue[isShort ? 4 : 8]) / 255).toFixed(3) : 1)\n  ]\n};\n\n/**\n * @param  {Number} p\n * @param  {Number} q\n * @param  {Number} t\n * @return {Number}\n */\nconst hue2rgb = (p, q, t) => {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  return t < 1 / 6 ? p + (q - p) * 6 * t :\n         t < 1 / 2 ? q :\n         t < 2 / 3 ? p + (q - p) * (2 / 3 - t) * 6 :\n         p;\n};\n\n/**\n * HSL / HSLA Color value string -> RGBA values array\n * @param  {String} hslValue\n * @return {ColorArray}\n */\nconst hslToRgba = hslValue => {\n  const hsla = hslExecRgx.exec(hslValue) || hslaExecRgx.exec(hslValue);\n  const h = +hsla[1] / 360;\n  const s = +hsla[2] / 100;\n  const l = +hsla[3] / 100;\n  const a = !isUnd(hsla[4]) ? +hsla[4] : 1;\n  let r, g, b;\n  if (s === 0) {\n    r = g = b = l;\n  } else {\n    const q = l < .5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = round(hue2rgb(p, q, h + 1 / 3) * 255, 0);\n    g = round(hue2rgb(p, q, h) * 255, 0);\n    b = round(hue2rgb(p, q, h - 1 / 3) * 255, 0);\n  }\n  return [r, g, b, a];\n};\n\n/**\n * All in one color converter that converts a color string value into an array of RGBA values\n * @param  {String} colorString\n * @return {ColorArray}\n */\nconst convertColorStringValuesToRgbaArray = colorString => {\n  return isRgb(colorString) ? rgbToRgba(colorString) :\n         isHex(colorString) ? hexToRgba(colorString) :\n         isHsl(colorString) ? hslToRgba(colorString) :\n         [0, 0, 0, 1];\n};\n\n\n\n\n/**\n * @template T, D\n * @param {T|undefined} targetValue\n * @param {D} defaultValue\n * @return {T|D}\n */\nconst setValue = (targetValue, defaultValue) => {\n  return isUnd(targetValue) ? defaultValue : targetValue;\n};\n\n/**\n * @param  {TweenPropValue} value\n * @param  {Target} target\n * @param  {Number} index\n * @param  {Number} total\n * @param  {Object} [store]\n * @return {any}\n */\nconst getFunctionValue = (value, target, index, total, store) => {\n  if (isFnc(value)) {\n    const func = () => {\n      const computed = /** @type {Function} */(value)(target, index, total);\n      // Fallback to 0 if the function returns undefined / NaN / null / false / 0\n      return !isNaN(+computed) ? +computed : computed || 0;\n    };\n    if (store) {\n      store.func = func;\n    }\n    return func();\n  } else {\n    return value;\n  }\n};\n\n/**\n * @param  {Target} target\n * @param  {String} prop\n * @return {tweenTypes}\n */\nconst getTweenType = (target, prop) => {\n  return !target[isDomSymbol] ? tweenTypes.OBJECT :\n    // Handle SVG attributes\n    target[isSvgSymbol] && isValidSVGAttribute(target, prop) ? tweenTypes.ATTRIBUTE :\n    // Handle CSS Transform properties differently than CSS to allow individual animations\n    validTransforms.includes(prop) || shortTransforms.get(prop) ? tweenTypes.TRANSFORM :\n    // CSS variables\n    stringStartsWith(prop, '--') ? tweenTypes.CSS_VAR :\n    // All other CSS properties\n    prop in /** @type {DOMTarget} */(target).style ? tweenTypes.CSS :\n    // Handle other DOM Attributes\n    prop in target ? tweenTypes.OBJECT :\n    tweenTypes.ATTRIBUTE;\n};\n\n/**\n * @param  {DOMTarget} target\n * @param  {String} propName\n * @param  {Object} animationInlineStyles\n * @return {String}\n */\nconst getCSSValue = (target, propName, animationInlineStyles) => {\n  const inlineStyles = target.style[propName];\n  if (inlineStyles && animationInlineStyles) {\n    animationInlineStyles[propName] = inlineStyles;\n  }\n  const value = inlineStyles || getComputedStyle(target[proxyTargetSymbol] || target).getPropertyValue(propName);\n  return value === 'auto' ? '0' : value;\n};\n\n/**\n * @param {Target} target\n * @param {String} propName\n * @param {tweenTypes} [tweenType]\n * @param {Object|void} [animationInlineStyles]\n * @return {String|Number}\n */\nconst getOriginalAnimatableValue = (target, propName, tweenType, animationInlineStyles) => {\n  const type = !isUnd(tweenType) ? tweenType : getTweenType(target, propName);\n  return type === tweenTypes.OBJECT ? target[propName] || 0 :\n         type === tweenTypes.ATTRIBUTE ? /** @type {DOMTarget} */(target).getAttribute(propName) :\n         type === tweenTypes.TRANSFORM ? parseInlineTransforms(/** @type {DOMTarget} */(target), propName, animationInlineStyles) :\n         type === tweenTypes.CSS_VAR ? getCSSValue(/** @type {DOMTarget} */(target), propName, animationInlineStyles).trimStart() :\n         getCSSValue(/** @type {DOMTarget} */(target), propName, animationInlineStyles);\n};\n\n/**\n * @param  {Number} x\n * @param  {Number} y\n * @param  {String} operator\n * @return {Number}\n */\nconst getRelativeValue = (x, y, operator) => {\n  return operator === '-' ? x - y :\n         operator === '+' ? x + y :\n         x * y;\n};\n\n/** @return {TweenDecomposedValue} */\nconst createDecomposedValueTargetObject = () => {\n  return {\n    /** @type {valueTypes} */\n    t: valueTypes.NUMBER,\n    n: 0,\n    u: null,\n    o: null,\n    d: null,\n    s: null,\n  }\n};\n\n/**\n * @param  {String|Number} rawValue\n * @param  {TweenDecomposedValue} targetObject\n * @return {TweenDecomposedValue}\n */\nconst decomposeRawValue = (rawValue, targetObject) => {\n  /** @type {valueTypes} */\n  targetObject.t = valueTypes.NUMBER;\n  targetObject.n = 0;\n  targetObject.u = null;\n  targetObject.o = null;\n  targetObject.d = null;\n  targetObject.s = null;\n  if (!rawValue) return targetObject;\n  const num = +rawValue;\n  if (!isNaN(num)) {\n    // It's a number\n    targetObject.n = num;\n    return targetObject;\n  } else {\n    // let str = /** @type {String} */(rawValue).trim();\n    let str = /** @type {String} */(rawValue);\n    // Parsing operators (+=, -=, *=) manually is much faster than using regex here\n    if (str[1] === '=') {\n      targetObject.o = str[0];\n      str = str.slice(2);\n    }\n    // Skip exec regex if the value type is complex or color to avoid long regex backtracking\n    const unitMatch = str.includes(' ') ? false : unitsExecRgx.exec(str);\n    if (unitMatch) {\n      // Has a number and a unit\n      targetObject.t = valueTypes.UNIT;\n      targetObject.n = +unitMatch[1];\n      targetObject.u = unitMatch[2];\n      return targetObject;\n    } else if (targetObject.o) {\n      // Has an operator (+=, -=, *=)\n      targetObject.n = +str;\n      return targetObject;\n    } else if (isCol(str)) {\n      // Is a color\n      targetObject.t = valueTypes.COLOR;\n      targetObject.d = convertColorStringValuesToRgbaArray(str);\n      return targetObject;\n    } else {\n      // Is a more complex string (generally svg coords, calc() or filters CSS values)\n      const matchedNumbers = str.match(digitWithExponentRgx);\n      targetObject.t = valueTypes.COMPLEX;\n      targetObject.d = matchedNumbers ? matchedNumbers.map(Number) : [];\n      targetObject.s = str.split(digitWithExponentRgx) || [];\n      return targetObject;\n    }\n  }\n};\n\n/**\n * @param  {Tween} tween\n * @param  {TweenDecomposedValue} targetObject\n * @return {TweenDecomposedValue}\n */\nconst decomposeTweenValue = (tween, targetObject) => {\n  targetObject.t = tween._valueType;\n  targetObject.n = tween._toNumber;\n  targetObject.u = tween._unit;\n  targetObject.o = null;\n  targetObject.d = cloneArray(tween._toNumbers);\n  targetObject.s = cloneArray(tween._strings);\n  return targetObject;\n};\n\nconst decomposedOriginalValue = createDecomposedValueTargetObject();\n\n\n\n\nconst lookups = {\n  /** @type {TweenReplaceLookups} */\n  _rep: new WeakMap(),\n  /** @type {TweenAdditiveLookups} */\n  _add: new Map(),\n};\n\n/**\n * @param  {Target} target\n * @param  {String} property\n * @param  {String} lookup\n * @return {TweenPropertySiblings}\n */\nconst getTweenSiblings = (target, property, lookup = '_rep') => {\n  const lookupMap = lookups[lookup];\n  let targetLookup = lookupMap.get(target);\n  if (!targetLookup) {\n    targetLookup = {};\n    lookupMap.set(target, targetLookup);\n  }\n  return targetLookup[property] ? targetLookup[property] : targetLookup[property] = {\n    _head: null,\n    _tail: null,\n  }\n};\n\n/**\n * @param  {Tween} p\n * @param  {Tween} c\n * @return {Number|Boolean}\n */\nconst addTweenSortMethod = (p, c) => {\n  return p._isOverridden || p._absoluteStartTime > c._absoluteStartTime;\n};\n\n/**\n * @param {Tween} tween\n */\nconst overrideTween = tween => {\n  tween._isOverlapped = 1;\n  tween._isOverridden = 1;\n  tween._changeDuration = minValue;\n  tween._currentTime = minValue;\n};\n\n/**\n * @param  {Tween} tween\n * @param  {TweenPropertySiblings} siblings\n * @return {Tween}\n */\nconst composeTween = (tween, siblings) => {\n\n  const tweenCompositionType = tween._composition;\n\n  // Handle replaced tweens\n\n  if (tweenCompositionType === compositionTypes.replace) {\n\n    const tweenAbsStartTime = tween._absoluteStartTime;\n\n    addChild(siblings, tween, addTweenSortMethod, '_prevRep', '_nextRep');\n\n    const prevSibling = tween._prevRep;\n\n    // Update the previous siblings for composition replace tweens\n\n    if (prevSibling) {\n\n      const prevParent = prevSibling.parent;\n      const prevAbsEndTime = prevSibling._absoluteStartTime + prevSibling._changeDuration;\n\n      // Handle looped animations tween\n\n      if (\n        // Check if the previous tween is from a different animation\n        tween.parent.id !== prevParent.id &&\n        // Check if the animation has loops\n        prevParent.iterationCount> 1 &&\n        // Check if _absoluteChangeEndTime of last loop overlaps the current tween\n        prevAbsEndTime + (prevParent.duration - prevParent.iterationDuration) > tweenAbsStartTime\n      ) {\n\n        // TODO: Find a way to only override the iterations overlapping with the tween\n        overrideTween(prevSibling);\n\n        let prevPrevSibling = prevSibling._prevRep;\n\n        // If the tween was part of a set of keyframes, override its siblings\n        while (prevPrevSibling && prevPrevSibling.parent.id === prevParent.id) {\n          overrideTween(prevPrevSibling);\n          prevPrevSibling = prevPrevSibling._prevRep;\n        }\n\n      }\n\n      const absoluteUpdateStartTime = tweenAbsStartTime - tween._delay;\n\n      if (prevAbsEndTime > absoluteUpdateStartTime) {\n\n        const prevChangeStartTime = prevSibling._startTime;\n        const prevTLOffset = prevAbsEndTime - (prevChangeStartTime + prevSibling._updateDuration);\n\n        prevSibling._changeDuration = absoluteUpdateStartTime - prevTLOffset - prevChangeStartTime;\n        prevSibling._currentTime = prevSibling._changeDuration;\n        prevSibling._isOverlapped = 1;\n\n        if (prevSibling._changeDuration < minValue) {\n          overrideTween(prevSibling);\n        }\n      }\n\n      // Pause (and cancel) the parent if it only contains overlapped tweens\n\n      let pausePrevParentAnimation = true;\n\n      forEachChildren(prevParent, (/** @type Tween */t) => {\n        if (!t._isOverlapped) pausePrevParentAnimation = false;\n      });\n\n      if (pausePrevParentAnimation) {\n        const prevParentTL = prevParent.parent;\n        if (prevParentTL) {\n          let pausePrevParentTL = true;\n          forEachChildren(prevParentTL, (/** @type JSAnimation */a) => {\n            if (a !== prevParent) {\n              forEachChildren(a, (/** @type Tween */t) => {\n                if (!t._isOverlapped) pausePrevParentTL = false;\n              });\n            }\n          });\n          if (pausePrevParentTL) {\n            prevParentTL.cancel();\n          }\n        } else {\n          prevParent.cancel();\n          // Previously, calling .cancel() on a timeline child would affect the render order of other children\n          // Worked around this by marking it as .completed and using .pause() for safe removal in the engine loop\n          // This is no longer needed since timeline tween composition is now handled separatly\n          // Keeping this here for reference\n          // prevParent.completed = true;\n          // prevParent.pause();\n        }\n      }\n\n    }\n\n    // let nextSibling = tween._nextRep;\n\n    // // All the next siblings are automatically overridden\n\n    // if (nextSibling && nextSibling._absoluteStartTime >= tweenAbsStartTime) {\n    //   while (nextSibling) {\n    //     overrideTween(nextSibling);\n    //     nextSibling = nextSibling._nextRep;\n    //   }\n    // }\n\n    // if (nextSibling && nextSibling._absoluteStartTime < tweenAbsStartTime) {\n    //   while (nextSibling) {\n    //     overrideTween(nextSibling);\n    //     console.log(tween.id, nextSibling.id);\n    //     nextSibling = nextSibling._nextRep;\n    //   }\n    // }\n\n  // Handle additive tweens composition\n\n  } else if (tweenCompositionType === compositionTypes.blend) {\n\n    const additiveTweenSiblings = getTweenSiblings(tween.target, tween.property, '_add');\n    const additiveAnimation = addAdditiveAnimation(lookups._add);\n\n    let lookupTween = additiveTweenSiblings._head;\n\n    if (!lookupTween) {\n      lookupTween = { ...tween };\n      lookupTween._composition = compositionTypes.replace;\n      lookupTween._updateDuration = minValue;\n      lookupTween._startTime = 0;\n      lookupTween._numbers = cloneArray(tween._fromNumbers);\n      lookupTween._number = 0;\n      lookupTween._next = null;\n      lookupTween._prev = null;\n      addChild(additiveTweenSiblings, lookupTween);\n      addChild(additiveAnimation, lookupTween);\n    }\n\n    // Convert the values of TO to FROM and set TO to 0\n\n    const toNumber = tween._toNumber;\n    tween._fromNumber = lookupTween._fromNumber - toNumber;\n    tween._toNumber = 0;\n    tween._numbers = cloneArray(tween._fromNumbers);\n    tween._number = 0;\n    lookupTween._fromNumber = toNumber;\n\n    if (tween._toNumbers) {\n      const toNumbers = cloneArray(tween._toNumbers);\n      if (toNumbers) {\n        toNumbers.forEach((value, i) => {\n          tween._fromNumbers[i] = lookupTween._fromNumbers[i] - value;\n          tween._toNumbers[i] = 0;\n        });\n      }\n      lookupTween._fromNumbers = toNumbers;\n    }\n\n    addChild(additiveTweenSiblings, tween, null, '_prevAdd', '_nextAdd');\n\n  }\n\n  return tween;\n\n};\n\n/**\n * @param  {Tween} tween\n * @return {Tween}\n */\nconst removeTweenSliblings = tween => {\n  const tweenComposition = tween._composition;\n  if (tweenComposition !== compositionTypes.none) {\n    const tweenTarget = tween.target;\n    const tweenProperty = tween.property;\n    const replaceTweensLookup = lookups._rep;\n    const replaceTargetProps = replaceTweensLookup.get(tweenTarget);\n    const tweenReplaceSiblings = replaceTargetProps[tweenProperty];\n    removeChild(tweenReplaceSiblings, tween, '_prevRep', '_nextRep');\n    if (tweenComposition === compositionTypes.blend) {\n      const addTweensLookup = lookups._add;\n      const addTargetProps = addTweensLookup.get(tweenTarget);\n      if (!addTargetProps) return;\n      const additiveTweenSiblings = addTargetProps[tweenProperty];\n      const additiveAnimation = additive.animation;\n      removeChild(additiveTweenSiblings, tween, '_prevAdd', '_nextAdd');\n      // If only one tween is left in the additive lookup, it's the tween lookup\n      const lookupTween = additiveTweenSiblings._head;\n      if (lookupTween && lookupTween === additiveTweenSiblings._tail) {\n        removeChild(additiveTweenSiblings, lookupTween, '_prevAdd', '_nextAdd');\n        removeChild(additiveAnimation, lookupTween);\n        let shouldClean = true;\n        for (let prop in addTargetProps) {\n          if (addTargetProps[prop]._head) {\n            shouldClean = false;\n            break;\n          }\n        }\n        if (shouldClean) {\n          addTweensLookup.delete(tweenTarget);\n        }\n      }\n    }\n  }\n  return tween;\n};\n\n\n\n\n/**\n * @param  {Timer} timer\n * @return {Timer}\n */\nconst resetTimerProperties = timer => {\n  timer.paused = true;\n  timer.began = false;\n  timer.completed = false;\n  return timer;\n};\n\n/**\n * @param  {Timer} timer\n * @return {Timer}\n */\nconst reviveTimer = timer => {\n  if (!timer._cancelled) return timer;\n  if (timer._hasChildren) {\n    forEachChildren(timer, reviveTimer);\n  } else {\n    forEachChildren(timer, (/** @type {Tween} tween*/tween) => {\n      if (tween._composition !== compositionTypes.none) {\n        composeTween(tween, getTweenSiblings(tween.target, tween.property));\n      }\n    });\n  }\n  timer._cancelled = 0;\n  return timer;\n};\n\nlet timerId = 0;\n\n/**\n * Base class used to create Timers, Animations and Timelines\n */\nclass Timer extends Clock {\n  /**\n   * @param {TimerParams} [parameters]\n   * @param {Timeline} [parent]\n   * @param {Number} [parentPosition]\n   */\n  constructor(parameters = {}, parent = null, parentPosition = 0) {\n\n    super(0);\n\n    const {\n      id,\n      delay,\n      duration,\n      reversed,\n      alternate,\n      loop,\n      loopDelay,\n      autoplay,\n      frameRate,\n      playbackRate,\n      onComplete,\n      onLoop,\n      onPause,\n      onBegin,\n      onBeforeUpdate,\n      onUpdate,\n    } = parameters;\n\n    if (scope.current) scope.current.register(this);\n\n    const timerInitTime = parent ? 0 : engine._elapsedTime;\n    const timerDefaults = parent ? parent.defaults : globals.defaults;\n    const timerDelay = /** @type {Number} */(isFnc(delay) || isUnd(delay) ? timerDefaults.delay : +delay);\n    const timerDuration = isFnc(duration) || isUnd(duration) ? Infinity : +duration;\n    const timerLoop = setValue(loop, timerDefaults.loop);\n    const timerLoopDelay = setValue(loopDelay, timerDefaults.loopDelay);\n    const timerIterationCount = timerLoop === true ||\n                                timerLoop === Infinity ||\n                                /** @type {Number} */(timerLoop) < 0 ? Infinity :\n                                /** @type {Number} */(timerLoop) + 1;\n\n    let offsetPosition = 0;\n\n    if (parent) {\n      offsetPosition = parentPosition;\n    } else {\n      let startTime = now();\n      // Make sure to tick the engine once if suspended to avoid big gaps with the following offsetPosition calculation\n      if (engine.paused) {\n        engine.requestTick(startTime);\n        startTime = engine._elapsedTime;\n      }\n      offsetPosition = startTime - engine._startTime;\n    }\n\n    // Timer's parameters\n    this.id = !isUnd(id) ? id : ++timerId;\n    /** @type {Timeline} */\n    this.parent = parent;\n    // Total duration of the timer\n    this.duration = clampInfinity(((timerDuration + timerLoopDelay) * timerIterationCount) - timerLoopDelay) || minValue;\n    /** @type {Boolean} */\n    this.backwards = false;\n    /** @type {Boolean} */\n    this.paused = true;\n    /** @type {Boolean} */\n    this.began = false;\n    /** @type {Boolean} */\n    this.completed = false;\n    /** @type {Callback<this>} */\n    this.onBegin = onBegin || timerDefaults.onBegin;\n    /** @type {Callback<this>} */\n    this.onBeforeUpdate = onBeforeUpdate || timerDefaults.onBeforeUpdate;\n    /** @type {Callback<this>} */\n    this.onUpdate = onUpdate || timerDefaults.onUpdate;\n    /** @type {Callback<this>} */\n    this.onLoop = onLoop || timerDefaults.onLoop;\n    /** @type {Callback<this>} */\n    this.onPause = onPause || timerDefaults.onPause;\n    /** @type {Callback<this>} */\n    this.onComplete = onComplete || timerDefaults.onComplete;\n    /** @type {Number} */\n    this.iterationDuration = timerDuration; // Duration of one loop\n    /** @type {Number} */\n    this.iterationCount = timerIterationCount; // Number of loops\n    /** @type {Boolean|ScrollObserver} */\n    this._autoplay = parent ? false : setValue(autoplay, timerDefaults.autoplay);\n    /** @type {Number} */\n    this._offset = offsetPosition;\n    /** @type {Number} */\n    this._delay = timerDelay;\n    /** @type {Number} */\n    this._loopDelay = timerLoopDelay;\n    /** @type {Number} */\n    this._iterationTime = 0;\n    /** @type {Number} */\n    this._currentIteration = 0; // Current loop index\n    /** @type {Function} */\n    this._resolve = noop; // Used by .then()\n    /** @type {Boolean} */\n    this._running = false;\n    /** @type {Number} */\n    this._reversed = +setValue(reversed, timerDefaults.reversed);\n    /** @type {Number} */\n    this._reverse = this._reversed;\n    /** @type {Number} */\n    this._cancelled = 0;\n    /** @type {Boolean} */\n    this._alternate = setValue(alternate, timerDefaults.alternate);\n    /** @type {Renderable} */\n    this._prev = null;\n    /** @type {Renderable} */\n    this._next = null;\n\n    // Clock's parameters\n    /** @type {Number} */\n    this._elapsedTime = timerInitTime;\n    /** @type {Number} */\n    this._startTime = timerInitTime;\n    /** @type {Number} */\n    this._lastTime = timerInitTime;\n    /** @type {Number} */\n    this._fps = setValue(frameRate, timerDefaults.frameRate);\n    /** @type {Number} */\n    this._speed = setValue(playbackRate, timerDefaults.playbackRate);\n  }\n\n  get cancelled() {\n    return !!this._cancelled;\n  }\n\n  /** @param {Boolean} cancelled  */\n  set cancelled(cancelled) {\n    cancelled ? this.cancel() : this.reset(1).play();\n  }\n\n  get currentTime() {\n    return clamp(round(this._currentTime, globals.precision), -this._delay, this.duration);\n  }\n\n  /** @param {Number} time  */\n  set currentTime(time) {\n    const paused = this.paused;\n    // Pausing the timer is necessary to avoid time jumps on a running instance\n    this.pause().seek(+time);\n    if (!paused) this.resume();\n  }\n\n  get iterationCurrentTime() {\n    return round(this._iterationTime, globals.precision);\n  }\n\n  /** @param {Number} time  */\n  set iterationCurrentTime(time) {\n    this.currentTime = (this.iterationDuration * this._currentIteration) + time;\n  }\n\n  get progress() {\n    return clamp(round(this._currentTime / this.duration, 10), 0, 1);\n  }\n\n  /** @param {Number} progress  */\n  set progress(progress) {\n    this.currentTime = this.duration * progress;\n  }\n\n  get iterationProgress() {\n    return clamp(round(this._iterationTime / this.iterationDuration, 10), 0, 1);\n  }\n\n  /** @param {Number} progress  */\n  set iterationProgress(progress) {\n    const iterationDuration = this.iterationDuration;\n    this.currentTime = (iterationDuration * this._currentIteration) + (iterationDuration * progress);\n  }\n\n  get currentIteration() {\n    return this._currentIteration;\n  }\n\n  /** @param {Number} iterationCount  */\n  set currentIteration(iterationCount) {\n    this.currentTime = (this.iterationDuration * clamp(+iterationCount, 0, this.iterationCount - 1));\n  }\n\n  get reversed() {\n    return !!this._reversed;\n  }\n\n  /** @param {Boolean} reverse  */\n  set reversed(reverse) {\n    reverse ? this.reverse() : this.play();\n  }\n\n  get speed() {\n    return super.speed;\n  }\n\n  /** @param {Number} playbackRate  */\n  set speed(playbackRate) {\n    super.speed = playbackRate;\n    this.resetTime();\n  }\n\n  /**\n   * @param  {Number} internalRender\n   * @return {this}\n   */\n  reset(internalRender = 0) {\n    // If cancelled, revive the timer before rendering in order to have propertly composed tweens siblings\n    reviveTimer(this);\n    if (this._reversed && !this._reverse) this.reversed = false;\n    // Rendering before updating the completed flag to prevent skips and to make sure the properties are not overridden\n    // Setting the iterationTime at the end to force the rendering to happend backwards, otherwise calling .reset() on Timelines might not render children in the right order\n    // NOTE: This is only required for Timelines and might be better to move to the Timeline class?\n    this._iterationTime = this.iterationDuration;\n    // Set tickMode to tickModes.FORCE to force rendering\n    tick(this, 0, 1, internalRender, tickModes.FORCE);\n    // Reset timer properties after revive / render to make sure the props are not updated again\n    resetTimerProperties(this);\n    // Also reset children properties\n    if (this._hasChildren) {\n      forEachChildren(this, resetTimerProperties);\n    }\n    return this;\n  }\n\n  /**\n   * @param  {Number} internalRender\n   * @return {this}\n   */\n  init(internalRender = 0) {\n    this.fps = this._fps;\n    this.speed = this._speed;\n    // Manually calling .init() on timelines should render all children intial state\n    // Forces all children to render once then render to 0 when reseted\n    if (!internalRender && this._hasChildren) {\n      tick(this, this.duration, 1, internalRender, tickModes.FORCE);\n    }\n    this.reset(internalRender);\n    // Make sure to set autoplay to false to child timers so it doesn't attempt to autoplay / link\n    const autoplay = this._autoplay;\n    if (autoplay === true) {\n      this.resume();\n    } else if (autoplay && !isUnd(/** @type {ScrollObserver} */(autoplay).linked)) {\n      /** @type {ScrollObserver} */(autoplay).link(this);\n    }\n    return this;\n  }\n\n  /** @return {this} */\n  resetTime() {\n    const timeScale = 1 / (this._speed * engine._speed);\n    this._startTime = now() - (this._currentTime + this._delay) * timeScale;\n    return this;\n  }\n\n  /** @return {this} */\n  pause() {\n    if (this.paused) return this;\n    this.paused = true;\n    this.onPause(this);\n    return this;\n  }\n\n  /** @return {this} */\n  resume() {\n    if (!this.paused) return this;\n    this.paused = false;\n    // We can safely imediatly render a timer that has no duration and no children\n    if (this.duration <= minValue && !this._hasChildren) {\n      tick(this, minValue, 0, 0, tickModes.FORCE);\n    } else {\n      if (!this._running) {\n        addChild(engine, this);\n        engine._hasChildren = true;\n        this._running = true;\n      }\n      this.resetTime();\n      // Forces the timer to advance by at least one frame when the next tick occurs\n      this._startTime -= 12;\n      engine.wake();\n    }\n    return this;\n  }\n\n  /** @return {this} */\n  restart() {\n    return this.reset(0).resume();\n  }\n\n  /**\n   * @param  {Number} time\n   * @param  {Boolean|Number} [muteCallbacks]\n   * @param  {Boolean|Number} [internalRender]\n   * @return {this}\n   */\n  seek(time, muteCallbacks = 0, internalRender = 0) {\n    // Recompose the tween siblings in case the timer has been cancelled\n    reviveTimer(this);\n    // If you seek a completed animation, otherwise the next play will starts at 0\n    this.completed = false;\n    const isPaused = this.paused;\n    this.paused = true;\n    // timer, time, muteCallbacks, internalRender, tickMode\n    tick(this, time + this._delay, ~~muteCallbacks, ~~internalRender, tickModes.AUTO);\n    return isPaused ? this : this.resume();\n  }\n\n  /** @return {this} */\n  alternate() {\n    const reversed = this._reversed;\n    const count = this.iterationCount;\n    const duration = this.iterationDuration;\n    // Calculate the maximum iterations possible given the iteration duration\n    const iterations = count === Infinity ? floor(maxValue / duration) : count;\n    this._reversed = +(this._alternate && !(iterations % 2) ? reversed : !reversed);\n    if (count === Infinity) {\n      // Handle infinite loops to loop on themself\n      this.iterationProgress = this._reversed ? 1 - this.iterationProgress : this.iterationProgress;\n    } else {\n      this.seek((duration * iterations) - this._currentTime);\n    }\n    this.resetTime();\n    return this;\n  }\n\n  /** @return {this} */\n  play() {\n    if (this._reversed) this.alternate();\n    return this.resume();\n  }\n\n  /** @return {this} */\n  reverse() {\n    if (!this._reversed) this.alternate();\n    return this.resume();\n  }\n\n  // TODO: Move all the animation / tweens / children related code to Animation / Timeline\n\n  /** @return {this} */\n  cancel() {\n    if (this._hasChildren) {\n      forEachChildren(this, (/** @type {Renderable} */child) => child.cancel(), true);\n    } else {\n      forEachChildren(this, removeTweenSliblings);\n    }\n    this._cancelled = 1;\n    // Pausing the timer removes it from the engine\n    return this.pause();\n  }\n\n  /**\n   * @param  {Number} newDuration\n   * @return {this}\n   */\n  stretch(newDuration) {\n    const currentDuration = this.duration;\n    const normlizedDuration = normalizeTime(newDuration);\n    if (currentDuration === normlizedDuration) return this;\n    const timeScale = newDuration / currentDuration;\n    const isSetter = newDuration <= minValue;\n    this.duration = isSetter ? minValue : normlizedDuration;\n    this.iterationDuration = isSetter ? minValue : normalizeTime(this.iterationDuration * timeScale);\n    this._offset *= timeScale;\n    this._delay *= timeScale;\n    this._loopDelay *= timeScale;\n    return this;\n  }\n\n /**\n   * Cancels the timer by seeking it back to 0 and reverting the attached scroller if necessary\n   * @return {this}\n   */\n  revert() {\n    tick(this, 0, 1, 0, tickModes.AUTO);\n    const ap = /** @type {ScrollObserver} */(this._autoplay);\n    if (ap && ap.linked && ap.linked === this) ap.revert();\n    return this.cancel();\n  }\n\n /**\n   * Imediatly completes the timer, cancels it and triggers the onComplete callback\n   * @return {this}\n   */\n  complete() {\n    return this.seek(this.duration).cancel();\n  }\n\n  /**\n   * @param  {Callback<this>} [callback]\n   * @return {Promise}\n   */\n  then(callback = noop) {\n    const then = this.then;\n    const onResolve = () => {\n      // this.then = null prevents infinite recursion if returned by an async function\n      // https://github.com/juliangarnierorg/anime-beta/issues/26\n      this.then = null;\n      callback(this);\n      this.then = then;\n      this._resolve = noop;\n    };\n    return new Promise(r => {\n      this._resolve = () => r(onResolve());\n      // Make sure to resolve imediatly if the timer has already completed\n      if (this.completed) this._resolve();\n      return this;\n    });\n  }\n\n}\n\n\n/**\n * @param {TimerParams} [parameters]\n * @return {Timer}\n */\nconst createTimer = parameters => new Timer(parameters, null, 0).init();\n\n\n\n\n/** @type {EasingFunction} */\nconst none = t => t;\n\n// Cubic Bezier solver adapted from https://github.com/gre/bezier-ease © Gaëtan Renaudeau\n\n/**\n * @param  {Number} aT\n * @param  {Number} aA1\n * @param  {Number} aA2\n * @return {Number}\n */\nconst calcBezier = (aT, aA1, aA2) => (((1 - 3 * aA2 + 3 * aA1) * aT + (3 * aA2 - 6 * aA1)) * aT + (3 * aA1)) * aT;\n\n/**\n * @param  {Number} aX\n * @param  {Number} mX1\n * @param  {Number} mX2\n * @return {Number}\n */\nconst binarySubdivide = (aX, mX1, mX2) => {\n  let aA = 0, aB = 1, currentX, currentT, i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (abs(currentX) > .0000001 && ++i < 100);\n  return currentT;\n};\n\n/**\n * @param  {Number} [mX1]\n * @param  {Number} [mY1]\n * @param  {Number} [mX2]\n * @param  {Number} [mY2]\n * @return {EasingFunction}\n */\n\nconst cubicBezier = (mX1 = 0.5, mY1 = 0.0, mX2 = 0.5, mY2 = 1.0) => (mX1 === mY1 && mX2 === mY2) ? none :\n  t => t === 0 || t === 1 ? t :\n  calcBezier(binarySubdivide(t, mX1, mX2), mY1, mY2);\n\n/**\n * Steps ease implementation https://developer.mozilla.org/fr/docs/Web/CSS/transition-timing-function\n * Only covers 'end' and 'start' jumpterms\n * @param  {Number} steps\n * @param  {Boolean} [fromStart]\n * @return {EasingFunction}\n */\nconst steps = (steps = 10, fromStart) => {\n  const roundMethod = fromStart ? ceil : floor;\n  return t => roundMethod(clamp(t, 0, 1) * steps) * (1 / steps);\n};\n\n/**\n * Without parameters, the linear function creates a non-eased transition.\n * Parameters, if used, creates a piecewise linear easing by interpolating linearly between the specified points.\n * @param  {...String|Number} [args] - Points\n * @return {EasingFunction}\n */\nconst linear = (...args) => {\n  const argsLength = args.length;\n  if (!argsLength) return none;\n  const totalPoints = argsLength - 1;\n  const firstArg = args[0];\n  const lastArg = args[totalPoints];\n  const xPoints = [0];\n  const yPoints = [parseNumber(firstArg)];\n  for (let i = 1; i < totalPoints; i++) {\n    const arg = args[i];\n    const splitValue = isStr(arg) ?\n    /** @type {String} */(arg).trim().split(' ') :\n    [arg];\n    const value = splitValue[0];\n    const percent = splitValue[1];\n    xPoints.push(!isUnd(percent) ? parseNumber(percent) / 100 : i / totalPoints);\n    yPoints.push(parseNumber(value));\n  }\n  yPoints.push(parseNumber(lastArg));\n  xPoints.push(1);\n  return function easeLinear(t) {\n    for (let i = 1, l = xPoints.length; i < l; i++) {\n      const currentX = xPoints[i];\n      if (t <= currentX) {\n        const prevX = xPoints[i - 1];\n        const prevY = yPoints[i - 1];\n        return prevY + (yPoints[i] - prevY) * (t - prevX) / (currentX - prevX);\n      }\n    }\n    return yPoints[yPoints.length - 1];\n  }\n};\n\n/**\n * Generate random steps\n * @param  {Number} [length] - The number of steps\n * @param  {Number} [randomness] - How strong the randomness is\n * @return {EasingFunction}\n */\nconst irregular = (length = 10, randomness = 1) => {\n  const values = [0];\n  const total = length - 1;\n  for (let i = 1; i < total; i++) {\n    const previousValue = values[i - 1];\n    const spacing = i / total;\n    const segmentEnd = (i + 1) / total;\n    const randomVariation = spacing + (segmentEnd - spacing) * Math.random();\n    // Mix the even spacing and random variation based on the randomness parameter\n    const randomValue = spacing * (1 - randomness) + randomVariation * randomness;\n    values.push(clamp(randomValue, previousValue, 1));\n  }\n  values.push(1);\n  return linear(...values);\n};\n\n// Easing functions adapted from http://www.robertpenner.com/ease © Robert Penner\n\n/**\n * @callback PowerEasing\n * @param {Number|String} [power=1.675]\n * @return {EasingFunction}\n */\n\n/**\n * @callback BackEasing\n * @param {Number|String} [overshoot=1.70158]\n * @return {EasingFunction}\n */\n\n/**\n * @callback ElasticEasing\n * @param {Number|String} [amplitude=1]\n * @param {Number|String} [period=.3]\n * @return {EasingFunction}\n */\n\n/**\n * @callback EaseFactory\n * @param {Number|String} [paramA]\n * @param {Number|String} [paramB]\n * @return {EasingFunction|Number}\n */\n\n/** @typedef {PowerEasing|BackEasing|ElasticEasing} EasesFactory */\n\nconst halfPI = PI / 2;\nconst doublePI = PI * 2;\n/** @type {PowerEasing} */\nconst easeInPower = (p = 1.68) => t => pow(t, +p);\n\n/** @type {Record<String, EasesFactory|EasingFunction>} */\nconst easeInFunctions = {\n  [emptyString]: easeInPower,\n  Quad: easeInPower(2),\n  Cubic: easeInPower(3),\n  Quart: easeInPower(4),\n  Quint: easeInPower(5),\n  /** @type {EasingFunction} */\n  Sine: t => 1 - cos(t * halfPI),\n  /** @type {EasingFunction} */\n  Circ: t => 1 - sqrt(1 - t * t),\n  /** @type {EasingFunction} */\n  Expo: t => t ? pow(2, 10 * t - 10) : 0,\n  /** @type {EasingFunction} */\n  Bounce: t => {\n    let pow2, b = 4;\n    while (t < ((pow2 = pow(2, --b)) - 1) / 11);\n    return 1 / pow(4, 3 - b) - 7.5625 * pow((pow2 * 3 - 2) / 22 - t, 2);\n  },\n  /** @type {BackEasing} */\n  Back: (overshoot = 1.70158) => t => (+overshoot + 1) * t * t * t - +overshoot * t * t,\n  /** @type {ElasticEasing} */\n  Elastic: (amplitude = 1, period = .3) => {\n    const a = clamp(+amplitude, 1, 10);\n    const p = clamp(+period, minValue, 2);\n    const s = (p / doublePI) * asin(1 / a);\n    const e = doublePI / p;\n    return t => t === 0 || t === 1 ? t : -a * pow(2, -10 * (1 - t)) * sin(((1 - t) - s) * e);\n  }\n};\n\n/**\n * @callback EaseType\n * @param {EasingFunction} Ease\n * @return {EasingFunction}\n */\n\n/** @type {Record<String, EaseType>} */\nconst easeTypes = {\n  in: easeIn => t => easeIn(t),\n  out: easeIn => t => 1 - easeIn(1 - t),\n  inOut: easeIn => t => t < .5 ? easeIn(t * 2) / 2 : 1 - easeIn(t * -2 + 2) / 2,\n  outIn: easeIn => t => t < .5 ? (1 - easeIn(1 - t * 2)) / 2 : (easeIn(t * 2 - 1) + 1) / 2,\n};\n\n/**\n * @param  {String} string\n * @param  {Record<String, EasesFactory|EasingFunction>} easesFunctions\n * @param  {Object} easesLookups\n * @return {EasingFunction}\n */\nconst parseEaseString = (string, easesFunctions, easesLookups) => {\n  if (easesLookups[string]) return easesLookups[string];\n  if (string.indexOf('(') <= -1) {\n    const hasParams = easeTypes[string] || string.includes('Back') || string.includes('Elastic');\n    const parsedFn = /** @type {EasingFunction} */(hasParams ? /** @type {EasesFactory} */(easesFunctions[string])() : easesFunctions[string]);\n    return parsedFn ? easesLookups[string] = parsedFn : none;\n  } else {\n    const split = string.slice(0, -1).split('(');\n    const parsedFn = /** @type {EasesFactory} */(easesFunctions[split[0]]);\n    return parsedFn ? easesLookups[string] = parsedFn(...split[1].split(',')) : none;\n  }\n};\n\n/**\n * @typedef  {Object} EasesFunctions\n * @property {typeof linear} linear\n * @property {typeof irregular} irregular\n * @property {typeof steps} steps\n * @property {typeof cubicBezier} cubicBezier\n * @property {PowerEasing} in\n * @property {PowerEasing} out\n * @property {PowerEasing} inOut\n * @property {PowerEasing} outIn\n * @property {EasingFunction} inQuad\n * @property {EasingFunction} outQuad\n * @property {EasingFunction} inOutQuad\n * @property {EasingFunction} outInQuad\n * @property {EasingFunction} inCubic\n * @property {EasingFunction} outCubic\n * @property {EasingFunction} inOutCubic\n * @property {EasingFunction} outInCubic\n * @property {EasingFunction} inQuart\n * @property {EasingFunction} outQuart\n * @property {EasingFunction} inOutQuart\n * @property {EasingFunction} outInQuart\n * @property {EasingFunction} inQuint\n * @property {EasingFunction} outQuint\n * @property {EasingFunction} inOutQuint\n * @property {EasingFunction} outInQuint\n * @property {EasingFunction} inSine\n * @property {EasingFunction} outSine\n * @property {EasingFunction} inOutSine\n * @property {EasingFunction} outInSine\n * @property {EasingFunction} inCirc\n * @property {EasingFunction} outCirc\n * @property {EasingFunction} inOutCirc\n * @property {EasingFunction} outInCirc\n * @property {EasingFunction} inExpo\n * @property {EasingFunction} outExpo\n * @property {EasingFunction} inOutExpo\n * @property {EasingFunction} outInExpo\n * @property {EasingFunction} inBounce\n * @property {EasingFunction} outBounce\n * @property {EasingFunction} inOutBounce\n * @property {EasingFunction} outInBounce\n * @property {BackEasing} inBack\n * @property {BackEasing} outBack\n * @property {BackEasing} inOutBack\n * @property {BackEasing} outInBack\n * @property {ElasticEasing} inElastic\n * @property {ElasticEasing} outElastic\n * @property {ElasticEasing} inOutElastic\n * @property {ElasticEasing} outInElastic\n */\n\nconst eases = (/*#__PURE__*/ (() => {\n  const list = { linear, irregular, steps, cubicBezier };\n  for (let type in easeTypes) {\n    for (let name in easeInFunctions) {\n      const easeIn = easeInFunctions[name];\n      const easeType = easeTypes[type];\n      list[type + name] = /** @type {EasesFactory|EasingFunction} */(\n        name === emptyString || name === 'Back' || name === 'Elastic' ?\n        (a, b) => easeType(/** @type {EasesFactory} */(easeIn)(a, b)) :\n        easeType(/** @type {EasingFunction} */(easeIn))\n      );\n    }\n  }\n  return /** @type {EasesFunctions} */(list);\n})());\n\n/** @type {Record<String, EasingFunction>} */\nconst JSEasesLookups = { linear: none };\n\n/**\n * @param  {EasingParam} ease\n * @return {EasingFunction}\n */\nconst parseEasings = ease => isFnc(ease) ? ease :\n  isStr(ease) ? parseEaseString(/** @type {String} */(ease), eases, JSEasesLookups) :\n  none;\n\n\n\n\nconst propertyNamesCache = {};\n\n/**\n * @param  {String} propertyName\n * @param  {Target} target\n * @param  {tweenTypes} tweenType\n * @return {String}\n */\nconst sanitizePropertyName = (propertyName, target, tweenType) => {\n  if (tweenType === tweenTypes.TRANSFORM) {\n    const t = shortTransforms.get(propertyName);\n    return t ? t : propertyName;\n  } else if (\n    tweenType === tweenTypes.CSS ||\n    // Handle special cases where properties like \"strokeDashoffset\" needs to be set as \"stroke-dashoffset\"\n    // but properties like \"baseFrequency\" should stay in lowerCamelCase\n    (tweenType === tweenTypes.ATTRIBUTE && (isSvg(target) && propertyName in /** @type {DOMTarget} */(target).style))\n  ) {\n    const cachedPropertyName = propertyNamesCache[propertyName];\n    if (cachedPropertyName) {\n      return cachedPropertyName;\n    } else {\n      const lowerCaseName = propertyName ? toLowerCase(propertyName) : propertyName;\n      propertyNamesCache[propertyName] = lowerCaseName;\n      return lowerCaseName;\n    }\n  } else {\n    return propertyName;\n  }\n};\n\n\n\n\nconst angleUnitsMap = { 'deg': 1, 'rad': 180 / PI, 'turn': 360 };\nconst convertedValuesCache = {};\n\n/**\n * @param  {DOMTarget} el\n * @param  {TweenDecomposedValue} decomposedValue\n * @param  {String} unit\n * @param  {Boolean} [force]\n * @return {TweenDecomposedValue}\n */\nconst convertValueUnit = (el, decomposedValue, unit, force = false) => {\n  const currentUnit = decomposedValue.u;\n  const currentNumber = decomposedValue.n;\n  if (decomposedValue.t === valueTypes.UNIT && currentUnit === unit) { // TODO: Check if checking against the same unit string is necessary\n    return decomposedValue;\n  }\n  const cachedKey = currentNumber + currentUnit + unit;\n  const cached = convertedValuesCache[cachedKey];\n  if (!isUnd(cached) && !force) {\n    decomposedValue.n = cached;\n  } else {\n    let convertedValue;\n    if (currentUnit in angleUnitsMap) {\n      convertedValue = currentNumber * angleUnitsMap[currentUnit] / angleUnitsMap[unit];\n    } else {\n      const baseline = 100;\n      const tempEl = /** @type {DOMTarget} */(el.cloneNode());\n      const parentNode = el.parentNode;\n      const parentEl = (parentNode && (parentNode !== doc)) ? parentNode : doc.body;\n      parentEl.appendChild(tempEl);\n      const elStyle = tempEl.style;\n      elStyle.width = baseline + currentUnit;\n      const currentUnitWidth = /** @type {HTMLElement} */(tempEl).offsetWidth || baseline;\n      elStyle.width = baseline + unit;\n      const newUnitWidth = /** @type {HTMLElement} */(tempEl).offsetWidth || baseline;\n      const factor = currentUnitWidth / newUnitWidth;\n      parentEl.removeChild(tempEl);\n      convertedValue = factor * currentNumber;\n    }\n    decomposedValue.n = convertedValue;\n    convertedValuesCache[cachedKey] = convertedValue;\n  }\n  decomposedValue.t === valueTypes.UNIT;\n  decomposedValue.u = unit;\n  return decomposedValue;\n};\n\n\n\n\n/**\n * @template {Renderable} T\n * @param {T} renderable\n * @return {T}\n */\nconst cleanInlineStyles = renderable => {\n  // Allow cleanInlineStyles() to be called on timelines\n  if (renderable._hasChildren) {\n    forEachChildren(renderable, cleanInlineStyles, true);\n  } else {\n    const animation = /** @type {JSAnimation} */(renderable);\n    animation.pause();\n    forEachChildren(animation, (/** @type {Tween} */tween) => {\n      const tweenProperty = tween.property;\n      const tweenTarget = tween.target;\n      if (tweenTarget[isDomSymbol]) {\n        const targetStyle = /** @type {DOMTarget} */(tweenTarget).style;\n        const originalInlinedValue = animation._inlineStyles[tweenProperty];\n        if (tween._tweenType === tweenTypes.TRANSFORM) {\n          const cachedTransforms = tweenTarget[transformsSymbol];\n          if (isUnd(originalInlinedValue) || originalInlinedValue === emptyString) {\n            delete cachedTransforms[tweenProperty];\n          } else {\n            cachedTransforms[tweenProperty] = originalInlinedValue;\n          }\n          if (tween._renderTransforms) {\n            if (!Object.keys(cachedTransforms).length) {\n              targetStyle.removeProperty('transform');\n            } else {\n              let str = emptyString;\n              for (let key in cachedTransforms) {\n                str += transformsFragmentStrings[key] + cachedTransforms[key] + ') ';\n              }\n              targetStyle.transform = str;\n            }\n          }\n        } else {\n          if (isUnd(originalInlinedValue) || originalInlinedValue === emptyString) {\n            targetStyle.removeProperty(tweenProperty);\n          } else {\n            targetStyle[tweenProperty] = originalInlinedValue;\n          }\n        }\n        if (animation._tail === tween) {\n          animation.targets.forEach(t => {\n            if (t.getAttribute && t.getAttribute('style') === emptyString) {\n              t.removeAttribute('style');\n            }          });\n        }\n      }\n    });\n  }\n  return renderable;\n};\n\n// Defines decomposed values target objects only once and mutate their properties later to avoid GC\n// TODO: Maybe move the objects creation to values.js and use the decompose function to create the base object\nconst fromTargetObject = createDecomposedValueTargetObject();\nconst toTargetObject = createDecomposedValueTargetObject();\nconst toFunctionStore = { func: null };\nconst keyframesTargetArray = [null];\nconst fastSetValuesArray = [null, null];\n/** @type {TweenKeyValue} */\nconst keyObjectTarget = { to: null };\n\nlet tweenId = 0;\nlet keyframes;\n/** @type {TweenParamsOptions & TweenValues} */\nlet key;\n\n/**\n * @param {DurationKeyframes | PercentageKeyframes} keyframes\n * @param {AnimationParams} parameters\n * @return {AnimationParams}\n */\nconst generateKeyframes = (keyframes, parameters) => {\n  /** @type {AnimationParams} */\n  const properties = {};\n  if (isArr(keyframes)) {\n    const propertyNames = [].concat(.../** @type {DurationKeyframes} */(keyframes).map(key => Object.keys(key))).filter(isKey);\n    for (let i = 0, l = propertyNames.length; i < l; i++) {\n      const propName = propertyNames[i];\n      const propArray = /** @type {DurationKeyframes} */(keyframes).map(key => {\n        /** @type {TweenKeyValue} */\n        const newKey = {};\n        for (let p in key) {\n          const keyValue = /** @type {TweenPropValue} */(key[p]);\n          if (isKey(p)) {\n            if (p === propName) {\n              newKey.to = keyValue;\n            }\n          } else {\n            newKey[p] = keyValue;\n          }\n        }\n        return newKey;\n      });\n      properties[propName] = /** @type {ArraySyntaxValue} */(propArray);\n    }\n\n  } else {\n    const totalDuration = /** @type {Number} */(setValue(parameters.duration, globals.defaults.duration));\n    const keys = Object.keys(keyframes)\n    .map(key => { return {o: parseFloat(key) / 100, p: keyframes[key]} })\n    .sort((a, b) => a.o - b.o);\n    keys.forEach(key => {\n      const offset = key.o;\n      const prop = key.p;\n      for (let name in prop) {\n        if (isKey(name)) {\n          let propArray = /** @type {Array} */(properties[name]);\n          if (!propArray) propArray = properties[name] = [];\n          const duration = offset * totalDuration;\n          let length = propArray.length;\n          let prevKey = propArray[length - 1];\n          const keyObj = { to: prop[name] };\n          let durProgress = 0;\n          for (let i = 0; i < length; i++) {\n            durProgress += propArray[i].duration;\n          }\n          if (length === 1) {\n            keyObj.from = prevKey.to;\n          }\n          if (prop.ease) {\n            keyObj.ease = prop.ease;\n          }\n          keyObj.duration = duration - (length ? durProgress : 0);\n          propArray.push(keyObj);\n        }\n      }\n      return key;\n    });\n\n    for (let name in properties) {\n      const propArray = /** @type {Array} */(properties[name]);\n      let prevEase;\n      // let durProgress = 0\n      for (let i = 0, l = propArray.length; i < l; i++) {\n        const prop = propArray[i];\n        // Emulate WAPPI easing parameter position\n        const currentEase = prop.ease;\n        prop.ease = prevEase ? prevEase : undefined;\n        prevEase = currentEase;\n        // durProgress += prop.duration;\n        // if (i === l - 1 && durProgress !== totalDuration) {\n        //   propArray.push({ from: prop.to, ease: prop.ease, duration: totalDuration - durProgress })\n        // }\n      }\n      if (!propArray[0].duration) {\n        propArray.shift();\n      }\n    }\n\n  }\n\n  return properties;\n};\n\nclass JSAnimation extends Timer {\n  /**\n   * @param {TargetsParam} targets\n   * @param {AnimationParams} parameters\n   * @param {Timeline} [parent]\n   * @param {Number} [parentPosition]\n   * @param {Boolean} [fastSet=false]\n   * @param {Number} [index=0]\n   * @param {Number} [length=0]\n   */\n  constructor(\n    targets,\n    parameters,\n    parent,\n    parentPosition,\n    fastSet = false,\n    index = 0,\n    length = 0\n  ) {\n\n    super(/** @type {TimerParams&AnimationParams} */(parameters), parent, parentPosition);\n\n    const parsedTargets = registerTargets(targets);\n    const targetsLength = parsedTargets.length;\n\n    // If the parameters object contains a \"keyframes\" property, convert all the keyframes values to regular properties\n\n    const kfParams = /** @type {AnimationParams} */(parameters).keyframes;\n    const params = /** @type {AnimationParams} */(kfParams ? mergeObjects(generateKeyframes(/** @type {DurationKeyframes} */(kfParams), parameters), parameters) : parameters);\n\n    const {\n      delay,\n      duration,\n      ease,\n      playbackEase,\n      modifier,\n      composition,\n      onRender,\n    } = params;\n\n    const animDefaults = parent ? parent.defaults : globals.defaults;\n    const animaPlaybackEase = setValue(playbackEase, animDefaults.playbackEase);\n    const animEase = animaPlaybackEase ? parseEasings(animaPlaybackEase) : null;\n    const hasSpring = !isUnd(ease) && !isUnd(/** @type {Spring} */(ease).ease);\n    const tEasing = hasSpring ? /** @type {Spring} */(ease).ease : setValue(ease, animEase ? 'linear' : animDefaults.ease);\n    const tDuration = hasSpring ? /** @type {Spring} */(ease).duration : setValue(duration, animDefaults.duration);\n    const tDelay = setValue(delay, animDefaults.delay);\n    const tModifier = modifier || animDefaults.modifier;\n    // If no composition is defined and the targets length is high (>= 1000) set the composition to 'none' (0) for faster tween creation\n    const tComposition = isUnd(composition) && targetsLength >= K ? compositionTypes.none : !isUnd(composition) ? composition : animDefaults.composition;\n    // TODO: Do not create an empty object until we know the animation will generate inline styles\n    const animInlineStyles = {};\n    // const absoluteOffsetTime = this._offset;\n    const absoluteOffsetTime = this._offset + (parent ? parent._offset : 0);\n\n    let iterationDuration = NaN;\n    let iterationDelay = NaN;\n    let animationAnimationLength = 0;\n    let shouldTriggerRender = 0;\n\n    for (let targetIndex = 0; targetIndex < targetsLength; targetIndex++) {\n\n      const target = parsedTargets[targetIndex];\n      const ti = index || targetIndex;\n      const tl = length || targetsLength;\n\n      let lastTransformGroupIndex = NaN;\n      let lastTransformGroupLength = NaN;\n\n      for (let p in params) {\n\n        if (isKey(p)) {\n\n          const tweenType = getTweenType(target, p);\n\n          const propName = sanitizePropertyName(p, target, tweenType);\n\n          let propValue = params[p];\n\n          const isPropValueArray = isArr(propValue);\n\n          if (fastSet && !isPropValueArray) {\n            fastSetValuesArray[0] = propValue;\n            fastSetValuesArray[1] = propValue;\n            propValue = fastSetValuesArray;\n          }\n\n          // TODO: Allow nested keyframes inside ObjectValue value (prop: { to: [.5, 1, .75, 2, 3] })\n          // Normalize property values to valid keyframe syntax:\n          // [x, y] to [{to: [x, y]}] or {to: x} to [{to: x}] or keep keys syntax [{}, {}, {}...]\n          // const keyframes = isArr(propValue) ? propValue.length === 2 && !isObj(propValue[0]) ? [{ to: propValue }] : propValue : [propValue];\n          if (isPropValueArray) {\n            const arrayLength = /** @type {Array} */(propValue).length;\n            const isNotObjectValue = !isObj(propValue[0]);\n            // Convert [x, y] to [{to: [x, y]}]\n            if (arrayLength === 2 && isNotObjectValue) {\n              keyObjectTarget.to = /** @type {TweenParamValue} */(/** @type {unknown} */(propValue));\n              keyframesTargetArray[0] = keyObjectTarget;\n              keyframes = keyframesTargetArray;\n            // Convert [x, y, z] to [[x, y], z]\n            } else if (arrayLength > 2 && isNotObjectValue) {\n              keyframes = [];\n              /** @type {Array.<Number>} */(propValue).forEach((v, i) => {\n                if (!i) {\n                  fastSetValuesArray[0] = v;\n                } else if (i === 1) {\n                  fastSetValuesArray[1] = v;\n                  keyframes.push(fastSetValuesArray);\n                } else {\n                  keyframes.push(v);\n                }\n              });\n            } else {\n              keyframes = /** @type {Array.<TweenKeyValue>} */(propValue);\n            }\n          } else {\n            keyframesTargetArray[0] = propValue;\n            keyframes = keyframesTargetArray;\n          }\n\n          let siblings = null;\n          let prevTween = null;\n          let firstTweenChangeStartTime = NaN;\n          let lastTweenChangeEndTime = 0;\n          let tweenIndex = 0;\n\n          for (let l = keyframes.length; tweenIndex < l; tweenIndex++) {\n\n            const keyframe = keyframes[tweenIndex];\n\n            if (isObj(keyframe)) {\n              key = keyframe;\n            } else {\n              keyObjectTarget.to = /** @type {TweenParamValue} */(keyframe);\n              key = keyObjectTarget;\n            }\n\n            toFunctionStore.func = null;\n\n            const computedToValue = getFunctionValue(key.to, target, ti, tl, toFunctionStore);\n\n            let tweenToValue;\n            // Allows function based values to return an object syntax value ({to: v})\n            if (isObj(computedToValue) && !isUnd(computedToValue.to)) {\n              key = computedToValue;\n              tweenToValue = computedToValue.to;\n            } else {\n              tweenToValue = computedToValue;\n            }\n            const tweenFromValue = getFunctionValue(key.from, target, ti, tl);\n            const keyEasing = key.ease;\n            const hasSpring = !isUnd(keyEasing) && !isUnd(/** @type {Spring} */(keyEasing).ease);\n            // Easing are treated differently and don't accept function based value to prevent having to pass a function wrapper that returns an other function all the time\n            const tweenEasing = hasSpring ? /** @type {Spring} */(keyEasing).ease : keyEasing || tEasing;\n            // Calculate default individual keyframe duration by dividing the tl of keyframes\n            const tweenDuration = hasSpring ? /** @type {Spring} */(keyEasing).duration : getFunctionValue(setValue(key.duration, (l > 1 ? getFunctionValue(tDuration, target, ti, tl) / l : tDuration)), target, ti, tl);\n            // Default delay value should only be applied to the first tween\n            const tweenDelay = getFunctionValue(setValue(key.delay, (!tweenIndex ? tDelay : 0)), target, ti, tl);\n            const computedComposition = getFunctionValue(setValue(key.composition, tComposition), target, ti, tl);\n            const tweenComposition = isNum(computedComposition) ? computedComposition : compositionTypes[computedComposition];\n            // Modifiers are treated differently and don't accept function based value to prevent having to pass a function wrapper\n            const tweenModifier = key.modifier || tModifier;\n            const hasFromvalue = !isUnd(tweenFromValue);\n            const hasToValue = !isUnd(tweenToValue);\n            const isFromToArray = isArr(tweenToValue);\n            const isFromToValue = isFromToArray || (hasFromvalue && hasToValue);\n            const tweenStartTime = prevTween ? lastTweenChangeEndTime + tweenDelay : tweenDelay;\n            const absoluteStartTime = absoluteOffsetTime + tweenStartTime;\n\n            // Force a onRender callback if the animation contains at least one from value and autoplay is set to false\n            if (!shouldTriggerRender && (hasFromvalue || isFromToArray)) shouldTriggerRender = 1;\n\n            let prevSibling = prevTween;\n\n            if (tweenComposition !== compositionTypes.none) {\n              if (!siblings) siblings = getTweenSiblings(target, propName);\n              let nextSibling = siblings._head;\n              // Iterate trough all the next siblings until we find a sibling with an equal or inferior start time\n              while (nextSibling && !nextSibling._isOverridden && nextSibling._absoluteStartTime <= absoluteStartTime) {\n                prevSibling = nextSibling;\n                nextSibling = nextSibling._nextRep;\n                // Overrides all the next siblings if the next sibling starts at the same time of after as the new tween start time\n                if (nextSibling && nextSibling._absoluteStartTime >= absoluteStartTime) {\n                  while (nextSibling) {\n                    overrideTween(nextSibling);\n                    // This will ends both the current while loop and the upper one once all the next sibllings have been overriden\n                    nextSibling = nextSibling._nextRep;\n                  }\n                }\n              }\n            }\n\n            // Decompose values\n            if (isFromToValue) {\n              decomposeRawValue(isFromToArray ? getFunctionValue(tweenToValue[0], target, ti, tl) : tweenFromValue, fromTargetObject);\n              decomposeRawValue(isFromToArray ? getFunctionValue(tweenToValue[1], target, ti, tl, toFunctionStore) : tweenToValue, toTargetObject);\n              if (fromTargetObject.t === valueTypes.NUMBER) {\n                if (prevSibling) {\n                  if (prevSibling._valueType === valueTypes.UNIT) {\n                    fromTargetObject.t = valueTypes.UNIT;\n                    fromTargetObject.u = prevSibling._unit;\n                  }\n                } else {\n                  decomposeRawValue(\n                    getOriginalAnimatableValue(target, propName, tweenType, animInlineStyles),\n                    decomposedOriginalValue\n                  );\n                  if (decomposedOriginalValue.t === valueTypes.UNIT) {\n                    fromTargetObject.t = valueTypes.UNIT;\n                    fromTargetObject.u = decomposedOriginalValue.u;\n                  }\n                }\n              }\n            } else {\n              if (hasToValue) {\n                decomposeRawValue(tweenToValue, toTargetObject);\n              } else {\n                if (prevTween) {\n                  decomposeTweenValue(prevTween, toTargetObject);\n                } else {\n                  // No need to get and parse the original value if the tween is part of a timeline and has a previous sibling part of the same timeline\n                  decomposeRawValue(parent && prevSibling && prevSibling.parent.parent === parent ? prevSibling._value :\n                  getOriginalAnimatableValue(target, propName, tweenType, animInlineStyles), toTargetObject);\n                }\n              }\n              if (hasFromvalue) {\n                decomposeRawValue(tweenFromValue, fromTargetObject);\n              } else {\n                if (prevTween) {\n                  decomposeTweenValue(prevTween, fromTargetObject);\n                } else {\n                  decomposeRawValue(parent && prevSibling && prevSibling.parent.parent === parent ? prevSibling._value :\n                  // No need to get and parse the original value if the tween is part of a timeline and has a previous sibling part of the same timeline\n                  getOriginalAnimatableValue(target, propName, tweenType, animInlineStyles), fromTargetObject);\n                }\n              }\n            }\n\n            // Apply operators\n            if (fromTargetObject.o) {\n              fromTargetObject.n = getRelativeValue(\n                !prevSibling ? decomposeRawValue(\n                  getOriginalAnimatableValue(target, propName, tweenType, animInlineStyles),\n                  decomposedOriginalValue\n                ).n : prevSibling._toNumber,\n                fromTargetObject.n,\n                fromTargetObject.o\n              );\n            }\n\n            if (toTargetObject.o) {\n              toTargetObject.n = getRelativeValue(fromTargetObject.n, toTargetObject.n, toTargetObject.o);\n            }\n\n            // Values omogenisation in cases of type difference between \"from\" and \"to\"\n            if (fromTargetObject.t !== toTargetObject.t) {\n              if (fromTargetObject.t === valueTypes.COMPLEX || toTargetObject.t === valueTypes.COMPLEX) {\n                const complexValue = fromTargetObject.t === valueTypes.COMPLEX ? fromTargetObject : toTargetObject;\n                const notComplexValue = fromTargetObject.t === valueTypes.COMPLEX ? toTargetObject : fromTargetObject;\n                notComplexValue.t = valueTypes.COMPLEX;\n                notComplexValue.s = cloneArray(complexValue.s);\n                notComplexValue.d = complexValue.d.map(() => notComplexValue.n);\n              } else if (fromTargetObject.t === valueTypes.UNIT || toTargetObject.t === valueTypes.UNIT) {\n                const unitValue = fromTargetObject.t === valueTypes.UNIT ? fromTargetObject : toTargetObject;\n                const notUnitValue = fromTargetObject.t === valueTypes.UNIT ? toTargetObject : fromTargetObject;\n                notUnitValue.t = valueTypes.UNIT;\n                notUnitValue.u = unitValue.u;\n              } else if (fromTargetObject.t === valueTypes.COLOR || toTargetObject.t === valueTypes.COLOR) {\n                const colorValue = fromTargetObject.t === valueTypes.COLOR ? fromTargetObject : toTargetObject;\n                const notColorValue = fromTargetObject.t === valueTypes.COLOR ? toTargetObject : fromTargetObject;\n                notColorValue.t = valueTypes.COLOR;\n                notColorValue.s = colorValue.s;\n                notColorValue.d = [0, 0, 0, 1];\n              }\n            }\n\n            // Unit conversion\n            if (fromTargetObject.u !== toTargetObject.u) {\n              let valueToConvert = toTargetObject.u ? fromTargetObject : toTargetObject;\n              valueToConvert = convertValueUnit(/** @type {DOMTarget} */(target), valueToConvert, toTargetObject.u ? toTargetObject.u : fromTargetObject.u, false);\n              // TODO:\n              // convertValueUnit(target, to.u ? from : to, to.u ? to.u : from.u);\n            }\n\n            // Fill in non existing complex values\n            if (toTargetObject.d && fromTargetObject.d && (toTargetObject.d.length !== fromTargetObject.d.length)) {\n              const longestValue = fromTargetObject.d.length > toTargetObject.d.length ? fromTargetObject : toTargetObject;\n              const shortestValue = longestValue === fromTargetObject ? toTargetObject : fromTargetObject;\n              // TODO: Check if n should be used instead of 0 for default complex values\n              shortestValue.d = longestValue.d.map((_, i) => isUnd(shortestValue.d[i]) ? 0 : shortestValue.d[i]);\n              shortestValue.s = cloneArray(longestValue.s);\n            }\n\n            // Tween factory\n\n            // Rounding is necessary here to minimize floating point errors\n            const tweenUpdateDuration = round(+tweenDuration || minValue, 12);\n\n            /** @type {Tween} */\n            const tween = {\n              parent: this,\n              id: tweenId++,\n              property: propName,\n              target: target,\n              _value: null,\n              _func: toFunctionStore.func,\n              _ease: parseEasings(tweenEasing),\n              _fromNumbers: cloneArray(fromTargetObject.d),\n              _toNumbers: cloneArray(toTargetObject.d),\n              _strings: cloneArray(toTargetObject.s),\n              _fromNumber: fromTargetObject.n,\n              _toNumber: toTargetObject.n,\n              _numbers: cloneArray(fromTargetObject.d), // For additive tween and animatables\n              _number: fromTargetObject.n, // For additive tween and animatables\n              _unit: toTargetObject.u,\n              _modifier: tweenModifier,\n              _currentTime: 0,\n              _startTime: tweenStartTime,\n              _delay: +tweenDelay,\n              _updateDuration: tweenUpdateDuration,\n              _changeDuration: tweenUpdateDuration,\n              _absoluteStartTime: absoluteStartTime,\n              // NOTE: Investigate bit packing to stores ENUM / BOOL\n              _tweenType: tweenType,\n              _valueType: toTargetObject.t,\n              _composition: tweenComposition,\n              _isOverlapped: 0,\n              _isOverridden: 0,\n              _renderTransforms: 0,\n              _prevRep: null, // For replaced tween\n              _nextRep: null, // For replaced tween\n              _prevAdd: null, // For additive tween\n              _nextAdd: null, // For additive tween\n              _prev: null,\n              _next: null,\n            };\n\n            if (tweenComposition !== compositionTypes.none) {\n              composeTween(tween, siblings);\n            }\n\n            if (isNaN(firstTweenChangeStartTime)) {\n              firstTweenChangeStartTime = tween._startTime;\n            }\n            // Rounding is necessary here to minimize floating point errors\n            lastTweenChangeEndTime = round(tweenStartTime + tweenUpdateDuration, 12);\n            prevTween = tween;\n            animationAnimationLength++;\n\n            addChild(this, tween);\n\n          }\n\n          // Update animation timings with the added tweens properties\n\n          if (isNaN(iterationDelay) || firstTweenChangeStartTime < iterationDelay) {\n            iterationDelay = firstTweenChangeStartTime;\n          }\n\n          if (isNaN(iterationDuration) || lastTweenChangeEndTime > iterationDuration) {\n            iterationDuration = lastTweenChangeEndTime;\n          }\n\n          // TODO: Find a way to inline tween._renderTransforms = 1 here\n          if (tweenType === tweenTypes.TRANSFORM) {\n            lastTransformGroupIndex = animationAnimationLength - tweenIndex;\n            lastTransformGroupLength = animationAnimationLength;\n          }\n\n        }\n\n      }\n\n      // Set _renderTransforms to last transform property to correctly render the transforms list\n      if (!isNaN(lastTransformGroupIndex)) {\n        let i = 0;\n        forEachChildren(this, (/** @type {Tween} */tween) => {\n          if (i >= lastTransformGroupIndex && i < lastTransformGroupLength) {\n            tween._renderTransforms = 1;\n            if (tween._composition === compositionTypes.blend) {\n              forEachChildren(additive.animation, (/** @type {Tween} */additiveTween) => {\n                if (additiveTween.id === tween.id) {\n                  additiveTween._renderTransforms = 1;\n                }\n              });\n            }\n          }\n          i++;\n        });\n      }\n\n    }\n\n    if (!targetsLength) {\n      console.warn(`No target found. Make sure the element you're trying to animate is accessible before creating your animation.`);\n    }\n\n    if (iterationDelay) {\n      forEachChildren(this, (/** @type {Tween} */tween) => {\n        // If (startTime - delay) equals 0, this means the tween is at the begining of the animation so we need to trim the delay too\n        if (!(tween._startTime - tween._delay)) {\n          tween._delay -= iterationDelay;\n        }\n        tween._startTime -= iterationDelay;\n      });\n      iterationDuration -= iterationDelay;\n    } else {\n      iterationDelay = 0;\n    }\n\n    // Prevents iterationDuration to be NaN if no valid animatable props have been provided\n    // Prevents _iterationCount to be NaN if no valid animatable props have been provided\n    if (!iterationDuration) {\n      iterationDuration = minValue;\n      this.iterationCount = 0;\n    }\n    /** @type {TargetsArray} */\n    this.targets = parsedTargets;\n    /** @type {Number} */\n    this.duration = iterationDuration === minValue ? minValue : clampInfinity(((iterationDuration + this._loopDelay) * this.iterationCount) - this._loopDelay) || minValue;\n    /** @type {Callback<this>} */\n    this.onRender = onRender || animDefaults.onRender;\n    /** @type {EasingFunction} */\n    this._ease = animEase;\n    /** @type {Number} */\n    this._delay = iterationDelay;\n    // NOTE: I'm keeping delay values separated from offsets in timelines because delays can override previous tweens and it could be confusing to debug a timeline with overridden tweens and no associated visible delays.\n    // this._delay = parent ? 0 : iterationDelay;\n    // this._offset += parent ? iterationDelay : 0;\n    /** @type {Number} */\n    this.iterationDuration = iterationDuration;\n    /** @type {{}} */\n    this._inlineStyles = animInlineStyles;\n\n    if (!this._autoplay && shouldTriggerRender) this.onRender(this);\n  }\n\n  /**\n   * @param  {Number} newDuration\n   * @return {this}\n   */\n  stretch(newDuration) {\n    const currentDuration = this.duration;\n    if (currentDuration === normalizeTime(newDuration)) return this;\n    const timeScale = newDuration / currentDuration;\n    // NOTE: Find a better way to handle the stretch of an animation after stretch = 0\n    forEachChildren(this, (/** @type {Tween} */tween) => {\n      // Rounding is necessary here to minimize floating point errors\n      tween._updateDuration = normalizeTime(tween._updateDuration * timeScale);\n      tween._changeDuration = normalizeTime(tween._changeDuration * timeScale);\n      tween._currentTime *= timeScale;\n      tween._startTime *= timeScale;\n      tween._absoluteStartTime *= timeScale;\n    });\n    return super.stretch(newDuration);\n  }\n\n  /**\n   * @return {this}\n   */\n  refresh() {\n    forEachChildren(this, (/** @type {Tween} */tween) => {\n      const tweenFunc = tween._func;\n      if (tweenFunc) {\n        const ogValue = getOriginalAnimatableValue(tween.target, tween.property, tween._tweenType);\n        decomposeRawValue(ogValue, decomposedOriginalValue);\n        decomposeRawValue(tweenFunc(), toTargetObject);\n        tween._fromNumbers = cloneArray(decomposedOriginalValue.d);\n        tween._fromNumber = decomposedOriginalValue.n;\n        tween._toNumbers = cloneArray(toTargetObject.d);\n        tween._strings = cloneArray(toTargetObject.s);\n        tween._toNumber = toTargetObject.n;\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Cancel the animation and revert all the values affected by this animation to their original state\n   * @return {this}\n   */\n  revert() {\n    super.revert();\n    return cleanInlineStyles(this);\n  }\n\n  /**\n   * @param  {Callback<this>} [callback]\n   * @return {Promise}\n   */\n  then(callback) {\n    return super.then(callback);\n  }\n\n}\n\n/**\n * @param {TargetsParam} targets\n * @param {AnimationParams} parameters\n * @return {JSAnimation}\n */\nconst animate = (targets, parameters) => new JSAnimation(targets, parameters, null, 0, false).init();\n\n\n\n\n/**\n * Converts an easing function into a valid CSS linear() timing function string\n * @param {EasingFunction} fn\n * @param {number} [samples=100]\n * @returns {string} CSS linear() timing function\n */\nconst easingToLinear = (fn, samples = 100) => {\n  const points = [];\n  for (let i = 0; i <= samples; i++) points.push(fn(i / samples));\n  return `linear(${points.join(', ')})`;\n};\n\nconst WAAPIEasesLookups = {\n  in: 'ease-in',\n  out: 'ease-out',\n  inOut: 'ease-in-out',\n};\n\nconst WAAPIeases = /*#__PURE__*/(() => {\n  const list = {};\n  for (let type in easeTypes) list[type] = a => easeTypes[type](easeInPower(a));\n  return /** @type {Record<String, EasingFunction>} */(list);\n})();\n\n/**\n * @param  {EasingParam} ease\n * @return {String}\n */\nconst parseWAAPIEasing = (ease) => {\n  let parsedEase = WAAPIEasesLookups[ease];\n  if (parsedEase) return parsedEase;\n  parsedEase = 'linear';\n  if (isStr(ease)) {\n    if (\n      stringStartsWith(ease, 'linear') ||\n      stringStartsWith(ease, 'cubic-') ||\n      stringStartsWith(ease, 'steps') ||\n      stringStartsWith(ease, 'ease')\n    ) {\n      parsedEase = ease;\n    } else if (stringStartsWith(ease, 'cubicB')) {\n      parsedEase = toLowerCase(ease);\n    } else {\n      const parsed = parseEaseString(ease, WAAPIeases, WAAPIEasesLookups);\n      if (isFnc(parsed)) parsedEase = parsed === none ? 'linear' : easingToLinear(parsed);\n    }\n    WAAPIEasesLookups[ease] = parsedEase;\n  } else if (isFnc(ease)) {\n    const easing = easingToLinear(ease);\n    if (easing) parsedEase = easing;\n  } else if (/** @type {Spring} */(ease).ease) {\n    parsedEase = easingToLinear(/** @type {Spring} */(ease).ease);\n  }\n  return parsedEase;\n};\n\n/**\n * @typedef {String|Number|Array<String>|Array<Number>} WAAPITweenValue\n */\n\n/**\n * @callback WAAPIFunctionvalue\n * @param {DOMTarget} target - The animated target\n * @param {Number} index - The target index\n * @param {Number} length - The total number of animated targets\n * @return {WAAPITweenValue}\n */\n\n/**\n * @typedef {WAAPITweenValue|WAAPIFunctionvalue|Array<String|Number|WAAPIFunctionvalue>} WAAPIKeyframeValue\n */\n\n/**\n * @typedef {(animation: WAAPIAnimation) => void} WAAPICallback\n */\n\n/**\n * @typedef {Object} WAAPITweenOptions\n * @property {WAAPIKeyframeValue} [to]\n * @property {WAAPIKeyframeValue} [from]\n * @property {Number|WAAPIFunctionvalue} [duration]\n * @property {Number|WAAPIFunctionvalue} [delay]\n * @property {EasingParam} [ease]\n * @property {CompositeOperation} [composition]\n */\n\n/**\n * @typedef {Object} WAAPIAnimationOptions\n * @property {Number|Boolean} [loop]\n * @property {Boolean} [Reversed]\n * @property {Boolean} [Alternate]\n * @property {Boolean|ScrollObserver} [autoplay]\n * @property {Number} [playbackRate]\n * @property {Number|WAAPIFunctionvalue} [duration]\n * @property {Number|WAAPIFunctionvalue} [delay]\n * @property {EasingParam} [ease]\n * @property {CompositeOperation} [composition]\n * @property {WAAPICallback} [onComplete]\n */\n\n/**\n * @typedef {Record<String, WAAPIKeyframeValue | WAAPIAnimationOptions | Boolean | ScrollObserver | WAAPICallback | EasingParam | WAAPITweenOptions> & WAAPIAnimationOptions} WAAPIAnimationParams\n */\n\nconst transformsShorthands = ['x', 'y', 'z'];\nconst commonDefaultPXProperties = [\n  'perspective',\n  'width',\n  'height',\n  'margin',\n  'padding',\n  'top',\n  'right',\n  'bottom',\n  'left',\n  'borderWidth',\n  'fontSize',\n  'borderRadius',\n  ...transformsShorthands\n];\n\nconst validIndividualTransforms = /*#__PURE__*/ (() => [...transformsShorthands, ...validTransforms.filter(t => ['X', 'Y', 'Z'].some(axis => t.endsWith(axis)))])();\n\nlet transformsPropertiesRegistered = null;\n\nconst WAAPIAnimationsLookups = {\n  _head: null,\n  _tail: null,\n};\n\n/**\n * @param {DOMTarget} $el\n * @param {String} [property]\n * @param {WAAPIAnimation} [parent]\n */\nconst removeWAAPIAnimation = ($el, property, parent) => {\n  let nextLookup = WAAPIAnimationsLookups._head;\n  while (nextLookup) {\n    const next = nextLookup._next;\n    const matchTarget = nextLookup.$el === $el;\n    const matchProperty = !property || nextLookup.property === property;\n    const matchParent = !parent || nextLookup.parent === parent;\n    if (matchTarget && matchProperty && matchParent) {\n      const anim = nextLookup.animation;\n      try { anim.commitStyles(); } catch {}      anim.cancel();\n      removeChild(WAAPIAnimationsLookups, nextLookup);\n      const lookupParent = nextLookup.parent;\n      if (lookupParent) {\n        lookupParent._completed++;\n        if (lookupParent.animations.length === lookupParent._completed) {\n          lookupParent.completed = true;\n          if (!lookupParent.muteCallbacks) {\n            lookupParent.paused = true;\n            lookupParent.onComplete(lookupParent);\n            lookupParent._resolve(lookupParent);\n          }\n        }\n      }\n    }\n    nextLookup = next;\n  }\n};\n\n/**\n * @param {WAAPIAnimation} parent\n * @param {DOMTarget} $el\n * @param {String} property\n * @param {PropertyIndexedKeyframes} keyframes\n * @param {KeyframeAnimationOptions} params\n * @retun {Animation}\n */\nconst addWAAPIAnimation = (parent, $el, property, keyframes, params) => {\n  const animation = $el.animate(keyframes, params);\n  const animTotalDuration = params.delay + (+params.duration * params.iterations);\n  animation.playbackRate = parent._speed;\n  if (parent.paused) animation.pause();\n  if (parent.duration < animTotalDuration) {\n    parent.duration = animTotalDuration;\n    parent.controlAnimation = animation;\n  }\n  parent.animations.push(animation);\n  removeWAAPIAnimation($el, property);\n  addChild(WAAPIAnimationsLookups, { parent, animation, $el, property, _next: null, _prev: null });\n  const handleRemove = () => { removeWAAPIAnimation($el, property, parent); };\n  animation.onremove = handleRemove;\n  animation.onfinish = handleRemove;\n  return animation;\n};\n\n/**\n * @param  {String} propName\n * @param  {WAAPIKeyframeValue} value\n * @param  {DOMTarget} $el\n * @param  {Number} i\n * @param  {Number} targetsLength\n * @return {String}\n */\nconst normalizeTweenValue = (propName, value, $el, i, targetsLength) => {\n  let v = getFunctionValue(/** @type {any} */(value), $el, i, targetsLength);\n  if (!isNum(v)) return v;\n  if (commonDefaultPXProperties.includes(propName) || stringStartsWith(propName, 'translate')) return `${v}px`;\n  if (stringStartsWith(propName, 'rotate') || stringStartsWith(propName, 'skew')) return `${v}deg`;\n  return `${v}`;\n};\n\n/**\n * @param  {DOMTarget} $el\n * @param  {String} propName\n * @param  {WAAPIKeyframeValue} from\n * @param  {WAAPIKeyframeValue} to\n * @param  {Number} i\n * @param  {Number} targetsLength\n * @return {WAAPITweenValue}\n */\nconst parseIndividualTweenValue = ($el, propName, from, to, i, targetsLength) => {\n  /** @type {WAAPITweenValue} */\n  let tweenValue = '0';\n  const computedTo = !isUnd(to) ? normalizeTweenValue(propName, to, $el, i, targetsLength) : getComputedStyle($el)[propName];\n  if (!isUnd(from)) {\n    const computedFrom = normalizeTweenValue(propName, from, $el, i, targetsLength);\n    tweenValue = [computedFrom, computedTo];\n  } else {\n    tweenValue = isArr(to) ? to.map((/** @type {any} */v) => normalizeTweenValue(propName, v, $el, i, targetsLength)) : computedTo;\n  }\n  return tweenValue;\n};\n\nclass WAAPIAnimation {\n/**\n * @param {DOMTargetsParam} targets\n * @param {WAAPIAnimationParams} params\n */\n  constructor(targets, params) {\n\n    if (scope.current) scope.current.register(this);\n\n    // Skip the registration and fallback to no animation in case CSS.registerProperty is not supported\n    if (isNil(transformsPropertiesRegistered)) {\n      if (isBrowser && (isUnd(CSS) || !Object.hasOwnProperty.call(CSS, 'registerProperty'))) {\n        transformsPropertiesRegistered = false;\n      } else {\n        validTransforms.forEach(t => {\n          const isSkew = stringStartsWith(t, 'skew');\n          const isScale = stringStartsWith(t, 'scale');\n          const isRotate = stringStartsWith(t, 'rotate');\n          const isTranslate = stringStartsWith(t, 'translate');\n          const isAngle = isRotate || isSkew;\n          const syntax = isAngle ? '<angle>' : isScale ? \"<number>\" : isTranslate ? \"<length-percentage>\" : \"*\";\n          try {\n            CSS.registerProperty({\n              name: '--' + t,\n              syntax,\n              inherits: false,\n              initialValue: isTranslate ? '0px' : isAngle ? '0deg' : isScale ? '1' : '0',\n            });\n          } catch {}        });\n        transformsPropertiesRegistered = true;\n      }\n    }\n\n    const parsedTargets = registerTargets(targets);\n    const targetsLength = parsedTargets.length;\n\n    if (!targetsLength) {\n      console.warn(`No target found. Make sure the element you're trying to animate is accessible before creating your animation.`);\n    }\n\n    const ease = setValue(params.ease, parseWAAPIEasing(globals.defaults.ease));\n    const spring = /** @type {Spring} */(ease).ease && ease;\n    const autoplay = setValue(params.autoplay, globals.defaults.autoplay);\n    const scroll = autoplay && /** @type {ScrollObserver} */(autoplay).link ? autoplay : false;\n    const alternate = params.alternate && /** @type {Boolean} */(params.alternate) === true;\n    const reversed = params.reversed && /** @type {Boolean} */(params.reversed) === true;\n    const loop = setValue(params.loop, globals.defaults.loop);\n    const iterations = /** @type {Number} */((loop === true || loop === Infinity) ? Infinity : isNum(loop) ? loop + 1 : 1);\n    /** @type {PlaybackDirection} */\n    const direction = alternate ? reversed ? 'alternate-reverse' : 'alternate' : reversed ? 'reverse' : 'normal';\n    /** @type {FillMode} */\n    const fill = 'forwards';\n    /** @type {String} */\n    const easing = parseWAAPIEasing(ease);\n    const timeScale = (globals.timeScale === 1 ? 1 : K);\n\n    /** @type {DOMTargetsArray}] */\n    this.targets = parsedTargets;\n    /** @type {Array<globalThis.Animation>}] */\n    this.animations = [];\n    /** @type {globalThis.Animation}] */\n    this.controlAnimation = null;\n    /** @type {Callback<this>} */\n    this.onComplete = params.onComplete || noop;\n    /** @type {Number} */\n    this.duration = 0;\n    /** @type {Boolean} */\n    this.muteCallbacks = false;\n    /** @type {Boolean} */\n    this.completed = false;\n    /** @type {Boolean} */\n    this.paused = !autoplay || scroll !== false;\n    /** @type {Boolean} */\n    this.reversed = reversed;\n    /** @type {Boolean|ScrollObserver} */\n    this.autoplay = autoplay;\n    /** @type {Number} */\n    this._speed = setValue(params.playbackRate, globals.defaults.playbackRate);\n    /** @type {Function} */\n    this._resolve = noop; // Used by .then()\n    /** @type {Number} */\n    this._completed = 0;\n    /** @type {Array<Object>}] */\n    this._inlineStyles = parsedTargets.map($el => $el.getAttribute('style'));\n\n    parsedTargets.forEach(($el, i) => {\n\n      const cachedTransforms = $el[transformsSymbol];\n\n      const hasIndividualTransforms = validIndividualTransforms.some(t => params.hasOwnProperty(t));\n\n      /** @type {Number} */\n      const duration = (spring ? /** @type {Spring} */(spring).duration : getFunctionValue(setValue(params.duration, globals.defaults.duration), $el, i, targetsLength)) * timeScale;\n      /** @type {Number} */\n      const delay = getFunctionValue(setValue(params.delay, globals.defaults.delay), $el, i, targetsLength) * timeScale;\n      /** @type {CompositeOperation} */\n      const composite = /** @type {CompositeOperation} */(setValue(params.composition, 'replace'));\n\n      for (let name in params) {\n        if (!isKey(name)) continue;\n        /** @type {PropertyIndexedKeyframes} */\n        const keyframes = {};\n        /** @type {KeyframeAnimationOptions} */\n        const tweenParams = { iterations, direction, fill, easing, duration, delay, composite };\n        const propertyValue = params[name];\n        const individualTransformProperty = hasIndividualTransforms ? validTransforms.includes(name) ? name : shortTransforms.get(name) : false;\n        let parsedPropertyValue;\n        if (isObj(propertyValue)) {\n          const tweenOptions = /** @type {WAAPITweenOptions} */(propertyValue);\n          const tweenOptionsEase = setValue(tweenOptions.ease, ease);\n          const tweenOptionsSpring = /** @type {Spring} */(tweenOptionsEase).ease && tweenOptionsEase;\n          const to = /** @type {WAAPITweenOptions} */(tweenOptions).to;\n          const from = /** @type {WAAPITweenOptions} */(tweenOptions).from;\n          /** @type {Number} */\n          tweenParams.duration = (tweenOptionsSpring ? /** @type {Spring} */(tweenOptionsSpring).duration : getFunctionValue(setValue(tweenOptions.duration, duration), $el, i, targetsLength)) * timeScale;\n          /** @type {Number} */\n          tweenParams.delay = getFunctionValue(setValue(tweenOptions.delay, delay), $el, i, targetsLength) * timeScale;\n          /** @type {CompositeOperation} */\n          tweenParams.composite = /** @type {CompositeOperation} */(setValue(tweenOptions.composition, composite));\n          /** @type {String} */\n          tweenParams.easing = parseWAAPIEasing(tweenOptionsEase);\n          parsedPropertyValue = parseIndividualTweenValue($el, name, from, to, i, targetsLength);\n          if (individualTransformProperty) {\n            keyframes[`--${individualTransformProperty}`] = parsedPropertyValue;\n            cachedTransforms[individualTransformProperty] = parsedPropertyValue;\n          } else {\n            keyframes[name] = parseIndividualTweenValue($el, name, from, to, i, targetsLength);\n          }\n          addWAAPIAnimation(this, $el, name, keyframes, tweenParams);\n          if (!isUnd(from)) {\n            if (!individualTransformProperty) {\n              $el.style[name] = keyframes[name][0];\n            } else {\n              const key = `--${individualTransformProperty}`;\n              $el.style.setProperty(key, keyframes[key][0]);\n            }\n          }\n        } else {\n          parsedPropertyValue = isArr(propertyValue) ?\n                                propertyValue.map((/** @type {any} */v) => normalizeTweenValue(name, v, $el, i, targetsLength)) :\n                                normalizeTweenValue(name, /** @type {any} */(propertyValue), $el, i, targetsLength);\n          if (individualTransformProperty) {\n            keyframes[`--${individualTransformProperty}`] = parsedPropertyValue;\n            cachedTransforms[individualTransformProperty] = parsedPropertyValue;\n          } else {\n            keyframes[name] = parsedPropertyValue;\n          }\n          addWAAPIAnimation(this, $el, name, keyframes, tweenParams);\n        }\n      }\n      if (hasIndividualTransforms) {\n        let transforms = emptyString;\n        for (let t in cachedTransforms) {\n          transforms += `${transformsFragmentStrings[t]}var(--${t})) `;\n        }\n        $el.style.transform = transforms;\n      }\n    });\n\n    if (scroll) {\n      /** @type {ScrollObserver} */(this.autoplay).link(this);\n    }\n  }\n\n  /**\n   * @callback forEachCallback\n   * @param {globalThis.Animation} animation\n   */\n\n  /**\n   * @param  {forEachCallback|String} callback\n   * @return {this}\n   */\n  forEach(callback) {\n    const cb = isStr(callback) ? a => a[callback]() : callback;\n    this.animations.forEach(cb);\n    return this;\n  }\n\n  get speed() {\n    return this._speed;\n  }\n\n  /** @param {Number} speed */\n  set speed(speed) {\n    this._speed = +speed;\n    this.forEach(anim => anim.playbackRate = speed);\n  }\n\n  get currentTime() {\n    const controlAnimation = this.controlAnimation;\n    const timeScale = globals.timeScale;\n    return this.completed ? this.duration : controlAnimation ? +controlAnimation.currentTime * (timeScale === 1 ? 1 : timeScale) : 0;\n  }\n\n  /** @param {Number} time */\n  set currentTime(time) {\n    const t = time * (globals.timeScale === 1 ? 1 : K);\n    this.forEach(anim => {\n      // Make sure the animation playState is not 'paused' in order to properly trigger an onfinish callback.\n      // The \"paused\" play state supersedes the \"finished\" play state; if the animation is both paused and finished, the \"paused\" state is the one that will be reported.\n      // https://developer.mozilla.org/en-US/docs/Web/API/Animation/finish_event\n      if (t >= this.duration) anim.play();\n      anim.currentTime = t;\n    });\n  }\n\n  get progress() {\n    return this.currentTime / this.duration;\n  }\n\n  /** @param {Number} progress */\n  set progress(progress) {\n    this.forEach(anim => anim.currentTime = progress * this.duration || 0);\n  }\n\n  resume() {\n    if (!this.paused) return this;\n    this.paused = false;\n    // TODO: Store the current time, and seek back to the last position\n    return this.forEach('play');\n  }\n\n  pause() {\n    if (this.paused) return this;\n    this.paused = true;\n    return this.forEach('pause');\n  }\n\n  alternate() {\n    this.reversed = !this.reversed;\n    this.forEach('reverse');\n    if (this.paused) this.forEach('pause');\n    return this;\n  }\n\n  play() {\n    if (this.reversed) this.alternate();\n    return this.resume();\n  }\n\n  reverse() {\n    if (!this.reversed) this.alternate();\n    return this.resume();\n  }\n\n /**\n  * @param {Number} time\n  * @param {Boolean} muteCallbacks\n  */\n  seek(time, muteCallbacks = false) {\n    if (muteCallbacks) this.muteCallbacks = true;\n    if (time < this.duration) this.completed = false;\n    this.currentTime = time;\n    this.muteCallbacks = false;\n    if (this.paused) this.pause();\n    return this;\n  }\n\n  restart() {\n    this.completed = false;\n    return this.seek(0, true).resume();\n  }\n\n  commitStyles() {\n    return this.forEach('commitStyles');\n  }\n\n  complete() {\n    return this.seek(this.duration);\n  }\n\n  cancel() {\n    this.forEach('cancel');\n    return this.pause();\n  }\n\n  revert() {\n    this.cancel();\n    this.targets.forEach(($el, i) => $el.setAttribute('style', this._inlineStyles[i]) );\n    return this;\n  }\n\n  /**\n   * @param  {WAAPICallback} [callback]\n   * @return {Promise}\n   */\n  then(callback = noop) {\n    const then = this.then;\n    const onResolve = () => {\n      this.then = null;\n      callback(this);\n      this.then = then;\n      this._resolve = noop;\n    };\n    return new Promise(r => {\n      this._resolve = () => r(onResolve());\n      if (this.completed) this._resolve();\n      return this;\n    });\n  }\n}\n\nconst waapi = {\n/**\n * @param {DOMTargetsParam} targets\n * @param {WAAPIAnimationParams} params\n * @return {WAAPIAnimation}\n */\n  animate: (targets, params) => new WAAPIAnimation(targets, params),\n  convertEase: easingToLinear\n};\n\n\n\n\n/**\n * @param  {Callback<Timer>} [callback]\n * @return {Timer}\n */\nconst sync = (callback = noop) => {\n  return new Timer({ duration: 1 * globals.timeScale, onComplete: callback }, null, 0).resume();\n};\n\n/**\n * @overload\n * @param  {DOMTargetSelector} targetSelector\n * @param  {String}            propName\n * @return {String}\n *\n * @overload\n * @param  {JSTargetsParam} targetSelector\n * @param  {String}         propName\n * @return {Number|String}\n *\n * @overload\n * @param  {DOMTargetsParam} targetSelector\n * @param  {String}          propName\n * @param  {String}          unit\n * @return {String}\n *\n * @overload\n * @param  {TargetsParam} targetSelector\n * @param  {String}       propName\n * @param  {Boolean}      unit\n * @return {Number}\n *\n * @param  {TargetsParam}   targetSelector\n * @param  {String}         propName\n * @param  {String|Boolean} [unit]\n */\nfunction getTargetValue(targetSelector, propName, unit) {\n  const targets = registerTargets(targetSelector);\n  if (!targets.length) return;\n  const [ target ] = targets;\n  const tweenType = getTweenType(target, propName);\n  const normalizePropName = sanitizePropertyName(propName, target, tweenType);\n  let originalValue = getOriginalAnimatableValue(target, normalizePropName);\n  if (isUnd(unit)) {\n    return originalValue;\n  } else {\n    decomposeRawValue(originalValue, decomposedOriginalValue);\n    if (decomposedOriginalValue.t === valueTypes.NUMBER || decomposedOriginalValue.t === valueTypes.UNIT) {\n      if (unit === false) {\n        return decomposedOriginalValue.n;\n      } else {\n        const convertedValue = convertValueUnit(/** @type {DOMTarget} */(target), decomposedOriginalValue, /** @type {String} */(unit), false);\n        return `${round(convertedValue.n, globals.precision)}${convertedValue.u}`;\n      }\n    }\n  }\n}\n\n/**\n * @param  {TargetsParam}    targets\n * @param  {AnimationParams} parameters\n * @return {JSAnimation}\n */\nconst setTargetValues = (targets, parameters) => {\n  if (isUnd(parameters)) return;\n  parameters.duration = minValue;\n  // Do not overrides currently active tweens by default\n  parameters.composition = setValue(parameters.composition, compositionTypes.none);\n  // Skip init() and force rendering by playing the animation\n  return new JSAnimation(targets, parameters, null, 0, true).resume();\n};\n\n/**\n * @param  {TargetsArray} targetsArray\n * @param  {JSAnimation}    animation\n * @param  {String}       [propertyName]\n * @return {Boolean}\n */\nconst removeTargetsFromAnimation = (targetsArray, animation, propertyName) => {\n  let tweensMatchesTargets = false;\n  forEachChildren(animation, (/**@type {Tween} */tween) => {\n    const tweenTarget = tween.target;\n    if (targetsArray.includes(tweenTarget)) {\n      const tweenName = tween.property;\n      const tweenType = tween._tweenType;\n      const normalizePropName = sanitizePropertyName(propertyName, tweenTarget, tweenType);\n      if (!normalizePropName || normalizePropName && normalizePropName === tweenName) {\n        // Make sure to flag the previous CSS transform tween to renderTransform\n        if (tween.parent._tail === tween &&\n            tween._tweenType === tweenTypes.TRANSFORM &&\n            tween._prev &&\n            tween._prev._tweenType === tweenTypes.TRANSFORM\n        ) {\n          tween._prev._renderTransforms = 1;\n        }\n        // Removes the tween from the selected animation\n        removeChild(animation, tween);\n        // Detach the tween from its siblings to make sure blended tweens are correctlly removed\n        removeTweenSliblings(tween);\n        tweensMatchesTargets = true;\n      }\n    }\n  }, true);\n  return tweensMatchesTargets;\n};\n\n/**\n * @param  {TargetsParam} targets\n * @param  {Renderable|WAAPIAnimation} [renderable]\n * @param  {String}                    [propertyName]\n * @return {TargetsArray}\n */\nconst remove = (targets, renderable, propertyName) => {\n  const targetsArray = parseTargets(targets);\n  const parent = /** @type {Renderable|typeof engine} **/(renderable ? renderable : engine);\n  const waapiAnimation = renderable && /** @type {WAAPIAnimation} */(renderable).controlAnimation && /** @type {WAAPIAnimation} */(renderable);\n  for (let i = 0, l = targetsArray.length; i < l; i++) {\n    const $el = /** @type {DOMTarget}  */(targetsArray[i]);\n    removeWAAPIAnimation($el, propertyName, waapiAnimation);\n  }\n  let removeMatches;\n  if (parent._hasChildren) {\n    let iterationDuration = 0;\n    forEachChildren(parent, (/** @type {Renderable} */child) => {\n      if (!child._hasChildren) {\n        removeMatches = removeTargetsFromAnimation(targetsArray, /** @type {JSAnimation} */(child), propertyName);\n        // Remove the child from its parent if no tweens and no children left after the removal\n        if (removeMatches && !child._head) {\n          child.cancel();\n          removeChild(parent, child);\n        } else {\n          // Calculate the new iterationDuration value to handle onComplete with last child in render()\n          const childTLOffset = child._offset + child._delay;\n          const childDur = childTLOffset + child.duration;\n          if (childDur > iterationDuration) {\n            iterationDuration = childDur;\n          }\n        }\n      }\n      // Make sure to also remove engine's children targets\n      // NOTE: Avoid recursion?\n      if (child._head) {\n        remove(targets, child, propertyName);\n      } else {\n        child._hasChildren = false;\n      }\n    }, true);\n    // Update iterationDuration value to handle onComplete with last child in render()\n    if (!isUnd(/** @type {Renderable} */(parent).iterationDuration)) {\n      /** @type {Renderable} */(parent).iterationDuration = iterationDuration;\n    }\n  } else {\n    removeMatches = removeTargetsFromAnimation(\n      targetsArray,\n      /** @type {JSAnimation} */(parent),\n      propertyName\n    );\n  }\n\n  if (removeMatches && !parent._head) {\n    parent._hasChildren = false;\n    // Cancel the parent if there are no tweens and no children left after the removal\n    // We have to check if the .cancel() method exist to handle cases where the parent is the engine itself\n    if (/** @type {Renderable} */(parent).cancel) /** @type {Renderable} */(parent).cancel();\n  }\n\n  return targetsArray;\n};\n\n/**\n * @param  {(...args: any[]) => Tickable} constructor\n * @return {(...args: any[]) => Tickable}\n */\nconst keepTime = createRefreshable;\n\n/**\n * @param  {String|Array} items\n * @return {any}\n */\nconst randomPick = items => items[random(0, items.length - 1)];\n\n/**\n * @param  {Number|String} v\n * @param  {Number} decimalLength\n * @return {String}\n */\nconst roundPad = (v, decimalLength) => (+v).toFixed(decimalLength);\n\n/**\n * @param  {Number} v\n * @param  {Number} totalLength\n * @param  {String} padString\n * @return {String}\n */\nconst padStart = (v, totalLength, padString) => `${v}`.padStart(totalLength, padString);\n\n/**\n * @param  {Number} v\n * @param  {Number} totalLength\n * @param  {String} padString\n * @return {String}\n */\nconst padEnd = (v, totalLength, padString) => `${v}`.padEnd(totalLength, padString);\n\n/**\n * @param  {Number} v\n * @param  {Number} min\n * @param  {Number} max\n * @return {Number}\n */\nconst wrap = (v, min, max) => (((v - min) % (max - min) + (max - min)) % (max - min)) + min;\n\n/**\n * @param  {Number} value\n * @param  {Number} inLow\n * @param  {Number} inHigh\n * @param  {Number} outLow\n * @param  {Number} outHigh\n * @return {Number}\n */\nconst mapRange = (value, inLow, inHigh, outLow, outHigh) => outLow + ((value - inLow) / (inHigh - inLow)) * (outHigh - outLow);\n\n/**\n * @param  {Number} degrees\n * @return {Number}\n */\nconst degToRad = degrees => degrees * PI / 180;\n\n/**\n * @param  {Number} radians\n * @return {Number}\n */\nconst radToDeg = radians => radians * 180 / PI;\n\n/**\n * https://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\n * @param  {Number} start\n * @param  {Number} end\n * @param  {Number} amount\n * @param  {Renderable|Boolean} [renderable]\n * @return {Number}\n */\nconst lerp = (start, end, amount, renderable) => {\n  let dt = K / globals.defaults.frameRate;\n  if (renderable !== false) {\n    const ticker = /** @type Renderable */\n                   (renderable) ||\n                   (engine._hasChildren && engine);\n    if (ticker && ticker.deltaTime) {\n      dt = ticker.deltaTime;\n    }\n  }\n  const t = 1 - Math.exp(-amount * dt * .1);\n  return !amount ? start : amount === 1 ? end : (1 - t) * start + t * end;\n};\n\n// Chain-able utilities\n\n/**\n * @callback UtilityFunction\n * @param {...*} args\n * @return {Number|String}\n *\n * @param {UtilityFunction} fn\n * @param {Number} [last=0]\n * @return {function(...(Number|String)): function(Number|String): (Number|String)}\n */\nconst curry = (fn, last = 0) => (...args) => last ? v => fn(...args, v) : v => fn(v, ...args);\n\n/**\n * @param {Function} fn\n * @return {function(...(Number|String))}\n */\nconst chain = fn => {\n   return (...args) => {\n    const result = fn(...args);\n    return new Proxy(noop, {\n      apply: (_, __, [v]) => result(v),\n      get: (_, prop) => chain(/**@param {...Number|String} nextArgs */(...nextArgs) => {\n        const nextResult = utils[prop](...nextArgs);\n        return (/**@type {Number|String} */v) => nextResult(result(v));\n      })\n    });\n  }\n};\n\n/**\n * @param {UtilityFunction} fn\n * @param {Number} [right]\n * @return {function(...(Number|String)): UtilityFunction}\n */\nconst makeChainable = (fn, right = 0) => (...args) => (args.length < fn.length ? chain(curry(fn, right)) : fn)(...args);\n\n/**\n * @callback ChainedUtilsResult\n * @param {Number} value\n * @return {Number}\n *\n * @typedef {Object} ChainableUtils\n * @property {ChainedClamp} clamp\n * @property {ChainedRound} round\n * @property {ChainedSnap} snap\n * @property {ChainedWrap} wrap\n * @property {ChainedInterpolate} interpolate\n * @property {ChainedMapRange} mapRange\n * @property {ChainedRoundPad} roundPad\n * @property {ChainedPadStart} padStart\n * @property {ChainedPadEnd} padEnd\n * @property {ChainedDegToRad} degToRad\n * @property {ChainedRadToDeg} radToDeg\n *\n * @typedef {ChainableUtils & ChainedUtilsResult} ChainableUtil\n *\n * @callback ChainedClamp\n * @param {Number} min\n * @param {Number} max\n * @return {ChainableUtil}\n *\n * @callback ChainedRound\n * @param {Number} decimalLength\n * @return {ChainableUtil}\n *\n * @callback ChainedSnap\n * @param {Number} increment\n * @return {ChainableUtil}\n *\n * @callback ChainedWrap\n * @param {Number} min\n * @param {Number} max\n * @return {ChainableUtil}\n *\n * @callback ChainedInterpolate\n * @param {Number} start\n * @param {Number} end\n * @return {ChainableUtil}\n *\n * @callback ChainedMapRange\n * @param {Number} inLow\n * @param {Number} inHigh\n * @param {Number} outLow\n * @param {Number} outHigh\n * @return {ChainableUtil}\n *\n * @callback ChainedRoundPad\n * @param {Number} decimalLength\n * @return {ChainableUtil}\n *\n * @callback ChainedPadStart\n * @param {Number} totalLength\n * @param {String} padString\n * @return {ChainableUtil}\n *\n * @callback ChainedPadEnd\n * @param {Number} totalLength\n * @param {String} padString\n * @return {ChainableUtil}\n *\n * @callback ChainedDegToRad\n * @return {ChainableUtil}\n *\n * @callback ChainedRadToDeg\n * @return {ChainableUtil}\n */\n\nconst utils = {\n  $: registerTargets,\n  get: getTargetValue,\n  set: setTargetValues,\n  remove,\n  cleanInlineStyles,\n  random,\n  randomPick,\n  shuffle,\n  lerp,\n  sync,\n  keepTime,\n  clamp: /** @type {typeof clamp & ChainedClamp} */(makeChainable(clamp)),\n  round: /** @type {typeof round & ChainedRound} */(makeChainable(round)),\n  snap: /** @type {typeof snap & ChainedSnap} */(makeChainable(snap)),\n  wrap: /** @type {typeof wrap & ChainedWrap} */(makeChainable(wrap)),\n  interpolate: /** @type {typeof interpolate & ChainedInterpolate} */(makeChainable(interpolate, 1)),\n  mapRange: /** @type {typeof mapRange & ChainedMapRange} */(makeChainable(mapRange)),\n  roundPad: /** @type {typeof roundPad & ChainedRoundPad} */(makeChainable(roundPad)),\n  padStart: /** @type {typeof padStart & ChainedPadStart} */(makeChainable(padStart)),\n  padEnd: /** @type {typeof padEnd & ChainedPadEnd} */(makeChainable(padEnd)),\n  degToRad: /** @type {typeof degToRad & ChainedDegToRad} */(makeChainable(degToRad)),\n  radToDeg: /** @type {typeof radToDeg & ChainedRadToDeg} */(makeChainable(radToDeg)),\n};\n\n\n\n\n/**\n * @typedef {Number|String|Function} TimePosition\n */\n\n/**\n * Timeline's children offsets positions parser\n * @param  {Timeline} timeline\n * @param  {String} timePosition\n * @return {Number}\n */\nconst getPrevChildOffset = (timeline, timePosition) => {\n  if (stringStartsWith(timePosition, '<')) {\n    const goToPrevAnimationOffset = timePosition[1] === '<';\n    const prevAnimation = /** @type {Tickable} */(timeline._tail);\n    const prevOffset = prevAnimation ? prevAnimation._offset + prevAnimation._delay : 0;\n    return goToPrevAnimationOffset ? prevOffset : prevOffset + prevAnimation.duration;\n  }\n};\n\n/**\n * @param  {Timeline} timeline\n * @param  {TimePosition} [timePosition]\n * @return {Number}\n */\nconst parseTimelinePosition = (timeline, timePosition) => {\n  let tlDuration = timeline.iterationDuration;\n  if (tlDuration === minValue) tlDuration = 0;\n  if (isUnd(timePosition)) return tlDuration;\n  if (isNum(+timePosition)) return +timePosition;\n  const timePosStr = /** @type {String} */(timePosition);\n  const tlLabels = timeline ? timeline.labels : null;\n  const hasLabels = !isNil(tlLabels);\n  const prevOffset = getPrevChildOffset(timeline, timePosStr);\n  const hasSibling = !isUnd(prevOffset);\n  const matchedRelativeOperator = relativeValuesExecRgx.exec(timePosStr);\n  if (matchedRelativeOperator) {\n    const fullOperator = matchedRelativeOperator[0];\n    const split = timePosStr.split(fullOperator);\n    const labelOffset = hasLabels && split[0] ? tlLabels[split[0]] : tlDuration;\n    const parsedOffset = hasSibling ? prevOffset : hasLabels ? labelOffset : tlDuration;\n    const parsedNumericalOffset = +split[1];\n    return getRelativeValue(parsedOffset, parsedNumericalOffset, fullOperator[0]);\n  } else {\n    return hasSibling ? prevOffset :\n           hasLabels ? !isUnd(tlLabels[timePosStr]) ? tlLabels[timePosStr] :\n           tlDuration : tlDuration;\n  }\n};\n\n/**\n * @param {Timeline} tl\n * @return {Number}\n */\nfunction getTimelineTotalDuration(tl) {\n  return clampInfinity(((tl.iterationDuration + tl._loopDelay) * tl.iterationCount) - tl._loopDelay) || minValue;\n}\n\n/**\n * @overload\n * @param  {TimerParams} childParams\n * @param  {Timeline} tl\n * @param  {Number} timePosition\n * @return {Timeline}\n *\n * @overload\n * @param  {AnimationParams} childParams\n * @param  {Timeline} tl\n * @param  {Number} timePosition\n * @param  {TargetsParam} targets\n * @param  {Number} [index]\n * @param  {Number} [length]\n * @return {Timeline}\n *\n * @param  {TimerParams|AnimationParams} childParams\n * @param  {Timeline} tl\n * @param  {Number} timePosition\n * @param  {TargetsParam} [targets]\n * @param  {Number} [index]\n * @param  {Number} [length]\n */\nfunction addTlChild(childParams, tl, timePosition, targets, index, length) {\n  const isSetter = isNum(childParams.duration) && /** @type {Number} */(childParams.duration) <= minValue;\n  // Offset the tl position with -minValue for 0 duration animations or .set() calls in order to align their end value with the defined position\n  const adjustedPosition = isSetter ? timePosition - minValue : timePosition;\n  tick(tl, adjustedPosition, 1, 1, tickModes.AUTO);\n  const tlChild = targets ?\n    new JSAnimation(targets,/** @type {AnimationParams} */(childParams), tl, adjustedPosition, false, index, length) :\n    new Timer(/** @type {TimerParams} */(childParams), tl, adjustedPosition);\n  tlChild.init(1);\n  // TODO: Might be better to insert at a position relative to startTime?\n  addChild(tl, tlChild);\n  forEachChildren(tl, (/** @type {Renderable} */child) => {\n    const childTLOffset = child._offset + child._delay;\n    const childDur = childTLOffset + child.duration;\n    if (childDur > tl.iterationDuration) tl.iterationDuration = childDur;\n  });\n  tl.duration = getTimelineTotalDuration(tl);\n  return tl;\n}\n\nclass Timeline extends Timer {\n\n  /**\n   * @param {TimelineParams} [parameters]\n   */\n  constructor(parameters = {}) {\n    super(/** @type {TimerParams&TimelineParams} */(parameters), null, 0);\n    /** @type {Number} */\n    this.duration = 0; // TL duration starts at 0 and grows when adding children\n    /** @type {Record<String, Number>} */\n    this.labels = {};\n    const defaultsParams = parameters.defaults;\n    const globalDefaults = globals.defaults;\n    /** @type {DefaultsParams} */\n    this.defaults = defaultsParams ? mergeObjects(defaultsParams, globalDefaults) : globalDefaults;\n    /** @type {Callback<this>} */\n    this.onRender = parameters.onRender || globalDefaults.onRender;\n    const tlPlaybackEase = setValue(parameters.playbackEase, globalDefaults.playbackEase);\n    this._ease = tlPlaybackEase ? parseEasings(tlPlaybackEase) : null;\n    /** @type {Number} */\n    this.iterationDuration = 0;\n  }\n\n  /**\n   * @overload\n   * @param {TargetsParam} a1\n   * @param {AnimationParams} a2\n   * @param {TimePosition} [a3]\n   * @return {this}\n   *\n   * @overload\n   * @param {TimerParams} a1\n   * @param {TimePosition} [a2]\n   * @return {this}\n   *\n   * @param {TargetsParam|TimerParams} a1\n   * @param {AnimationParams|TimePosition} a2\n   * @param {TimePosition} [a3]\n   */\n  add(a1, a2, a3) {\n    const isAnim = isObj(a2);\n    const isTimer = isObj(a1);\n    if (isAnim || isTimer) {\n      this._hasChildren = true;\n      if (isAnim) {\n        const childParams = /** @type {AnimationParams} */(a2);\n        // Check for function for children stagger positions\n        if (isFnc(a3)) {\n          const staggeredPosition = /** @type {Function} */(a3);\n          const parsedTargetsArray = parseTargets(/** @type {TargetsParam} */(a1));\n          // Store initial duration before adding new children that will change the duration\n          const tlDuration = this.duration;\n          // Store initial _iterationDuration before adding new children that will change the duration\n          const tlIterationDuration = this.iterationDuration;\n          // Store the original id in order to add specific indexes to the new animations ids\n          const id = childParams.id;\n          let i = 0;\n          const parsedLength = parsedTargetsArray.length;\n          parsedTargetsArray.forEach((/** @type {Target} */target) => {\n            // Create a new parameter object for each staggered children\n            const staggeredChildParams = { ...childParams };\n            // Reset the duration of the timeline iteration before each stagger to prevent wrong start value calculation\n            this.duration = tlDuration;\n            this.iterationDuration = tlIterationDuration;\n            if (!isUnd(id)) staggeredChildParams.id = id + '-' + i;\n            addTlChild(\n              staggeredChildParams,\n              this,\n              staggeredPosition(target, i, parsedLength, this),\n              target,\n              i,\n              parsedLength\n            );\n            i++;\n          });\n        } else {\n          addTlChild(\n            childParams,\n            this,\n            parseTimelinePosition(this, a3),\n            /** @type {TargetsParam} */(a1),\n          );\n        }\n      } else {\n        // It's a Timer\n        addTlChild(\n          /** @type TimerParams */(a1),\n          this,\n          parseTimelinePosition(this,/** @type TimePosition */(a2)),\n        );\n      }\n      return this.init(1); // 1 = internalRender\n    }\n  }\n\n  /**\n   * @overload\n   * @param {Tickable} [synced]\n   * @param {TimePosition} [position]\n   * @return {this}\n   *\n   * @overload\n   * @param {globalThis.Animation} [synced]\n   * @param {TimePosition} [position]\n   * @return {this}\n   *\n   * @overload\n   * @param {WAAPIAnimation} [synced]\n   * @param {TimePosition} [position]\n   * @return {this}\n   *\n   * @param {Tickable|WAAPIAnimation|globalThis.Animation} [synced]\n   * @param {TimePosition} [position]\n   */\n  sync(synced, position) {\n    if (isUnd(synced) || synced && isUnd(synced.pause)) return this;\n    synced.pause();\n    const duration = +(/** @type {globalThis.Animation} */(synced).effect ? /** @type {globalThis.Animation} */(synced).effect.getTiming().duration : /** @type {Tickable} */(synced).duration);\n    return this.add(synced, { currentTime: [0, duration], duration, ease: 'linear' }, position);\n  }\n\n  /**\n   * @param  {TargetsParam} targets\n   * @param  {AnimationParams} parameters\n   * @param  {TimePosition} [position]\n   * @return {this}\n   */\n  set(targets, parameters, position) {\n    if (isUnd(parameters)) return this;\n    parameters.duration = minValue;\n    parameters.composition = compositionTypes.replace;\n    return this.add(targets, parameters, position);\n  }\n\n  /**\n   * @param {Callback<Timer>} callback\n   * @param {TimePosition} [position]\n   * @return {this}\n   */\n  call(callback, position) {\n    if (isUnd(callback) || callback && !isFnc(callback)) return this;\n    return this.add({ duration: 0, onComplete: () => callback(this) }, position);\n  }\n\n  /**\n   * @param {String} labelName\n   * @param {TimePosition} [position]\n   * @return {this}\n   *\n   */\n  label(labelName, position) {\n    if (isUnd(labelName) || labelName && !isStr(labelName)) return this;\n    this.labels[labelName] = parseTimelinePosition(this,/** @type TimePosition */(position));\n    return this;\n  }\n\n  /**\n   * @param  {TargetsParam} targets\n   * @param  {String} [propertyName]\n   * @return {this}\n   */\n  remove(targets, propertyName) {\n    remove(targets, this, propertyName);\n    return this;\n  }\n\n  /**\n   * @param  {Number} newDuration\n   * @return {this}\n   */\n  stretch(newDuration) {\n    const currentDuration = this.duration;\n    if (currentDuration === normalizeTime(newDuration)) return this;\n    const timeScale = newDuration / currentDuration;\n    const labels = this.labels;\n    forEachChildren(this, (/** @type {JSAnimation} */child) => child.stretch(child.duration * timeScale));\n    for (let labelName in labels) labels[labelName] *= timeScale;\n    return super.stretch(newDuration);\n  }\n\n  /**\n   * @return {this}\n   */\n  refresh() {\n    forEachChildren(this, (/** @type {JSAnimation} */child) => {\n      if (child.refresh) child.refresh();\n    });\n    return this;\n  }\n\n  /**\n   * @return {this}\n   */\n  revert() {\n    super.revert();\n    forEachChildren(this, (/** @type {JSAnimation} */child) => child.revert, true);\n    return cleanInlineStyles(this);\n  }\n\n  /**\n   * @param  {Callback<this>} [callback]\n   * @return {Promise}\n   */\n  then(callback) {\n    return super.then(callback);\n  }\n}\n\n/**\n * @param {TimelineParams} [parameters]\n * @return {Timeline}\n */\nconst createTimeline = parameters => new Timeline(parameters).init();\n\n\n\n\nclass Animatable {\n  /**\n   * @param {TargetsParam} targets\n   * @param {AnimatableParams} parameters\n   */\n  constructor(targets, parameters) {\n    if (scope.current) scope.current.register(this);\n    /** @type {AnimationParams} */\n    const globalParams = {};\n    const properties = {};\n    this.targets = [];\n    this.animations = {};\n    if (isUnd(targets) || isUnd(parameters)) return;\n    for (let propName in parameters) {\n      const paramValue = parameters[propName];\n      if (isKey(propName)) {\n        properties[propName] = paramValue;\n      } else {\n        globalParams[propName] = paramValue;\n      }\n    }\n    for (let propName in properties) {\n      const propValue = properties[propName];\n      const isObjValue = isObj(propValue);\n      /** @type {TweenParamsOptions} */\n      let propParams = {};\n      let to = '+=0';\n      if (isObjValue) {\n        const unit = propValue.unit;\n        if (isStr(unit)) to += unit;\n      } else {\n        propParams.duration = propValue;\n      }\n      propParams[propName] = isObjValue ? mergeObjects({ to }, propValue) : to;\n      const animParams = mergeObjects(globalParams, propParams);\n      animParams.composition = compositionTypes.replace;\n      animParams.autoplay = false;\n      const animation = this.animations[propName] = new JSAnimation(targets, animParams, null, 0, false).init();\n      if (!this.targets.length) this.targets.push(...animation.targets);\n      /** @type {AnimatableProperty} */\n      this[propName] = (to, duration, ease) => {\n        const tween = /** @type {Tween} */(animation._head);\n        if (isUnd(to) && tween) {\n          const numbers = tween._numbers;\n          if (numbers && numbers.length) {\n            return numbers;\n          } else {\n            return tween._modifier(tween._number);\n          }\n        } else {\n          forEachChildren(animation, (/** @type {Tween} */tween) => {\n            if (isArr(to)) {\n              for (let i = 0, l = /** @type {Array} */(to).length; i < l; i++) {\n                if (!isUnd(tween._numbers[i])) {\n                  tween._fromNumbers[i] = /** @type {Number} */(tween._modifier(tween._numbers[i]));\n                  tween._toNumbers[i] = to[i];\n                }\n              }\n            } else {\n              tween._fromNumber = /** @type {Number} */(tween._modifier(tween._number));\n              tween._toNumber = /** @type {Number} */(to);\n            }\n            if (!isUnd(ease)) tween._ease = parseEasings(ease);\n            tween._currentTime = 0;\n          });\n          if (!isUnd(duration)) animation.stretch(duration);\n          animation.reset(1).resume();\n          return this;\n        }\n      };\n    }\n  }\n\n  revert() {\n    for (let propName in this.animations) {\n      this[propName] = noop;\n      this.animations[propName].revert();\n    }\n    this.animations = {};\n    this.targets.length = 0;\n    return this;\n  }\n}\n\n/**\n * @param {TargetsParam} targets\n * @param {AnimatableParams} parameters\n * @return {AnimatableObject}\n */\nconst createAnimatable = (targets, parameters) => /** @type {AnimatableObject} */(new Animatable(targets, parameters));\n\n\n\n\n/*\n * Spring ease solver adapted from https://webkit.org/demos/spring/spring.js\n * Webkit Copyright © 2016 Apple Inc\n */\n\n/**\n * @typedef {Object} SpringParams\n * @property {Number} [mass=1] - Mass, default 1\n * @property {Number} [stiffness=100] - Stiffness, default 100\n * @property {Number} [damping=10] - Damping, default 10\n * @property {Number} [velocity=0] - Initial velocity, default 0\n */\n\nclass Spring {\n  /**\n   * @param {SpringParams} [parameters]\n   */\n  constructor(parameters = {}) {\n    this.timeStep = .02; // Interval fed to the solver to calculate duration\n    this.restThreshold = .0005; // Values below this threshold are considered resting position\n    this.restDuration = 200; // Duration in ms used to check if the spring is resting after reaching restThreshold\n    this.maxDuration = 60000; // The maximum allowed spring duration in ms (default 1 min)\n    this.maxRestSteps = this.restDuration / this.timeStep / K; // How many steps allowed after reaching restThreshold before stopping the duration calculation\n    this.maxIterations = this.maxDuration / this.timeStep / K; // Calculate the maximum iterations allowed based on maxDuration\n    this.m = clamp(setValue(parameters.mass, 1), 0, K);\n    this.s = clamp(setValue(parameters.stiffness, 100), 1, K);\n    this.d = clamp(setValue(parameters.damping, 10), .1, K);\n    this.v = clamp(setValue(parameters.velocity, 0), -1e3, K);\n    this.w0 = 0;\n    this.zeta = 0;\n    this.wd = 0;\n    this.b = 0;\n    this.solverDuration = 0;\n    this.duration = 0;\n    this.compute();\n    /** @type {EasingFunction} */\n    this.ease = t => t === 0 || t === 1 ? t : this.solve(t * this.solverDuration);\n  }\n\n  /** @type {EasingFunction} */\n  solve(time) {\n    const { zeta, w0, wd, b } = this;\n    let t = time;\n    if (zeta < 1) {\n      t = exp(-t * zeta * w0) * (1 * cos(wd * t) + b * sin(wd * t));\n    } else {\n      t = (1 + b * t) * exp(-t * w0);\n    }\n    return 1 - t;\n  }\n\n  compute() {\n    const { maxRestSteps, maxIterations, restThreshold, timeStep, m, d, s, v } = this;\n    const w0 = this.w0 = clamp(sqrt(s / m), minValue, K);\n    const zeta = this.zeta = d / (2 * sqrt(s * m));\n    const wd = this.wd = zeta < 1 ? w0 * sqrt(1 - zeta * zeta) : 0;\n    this.b = zeta < 1 ? (zeta * w0 + -v) / wd : -v + w0;\n    let solverTime = 0;\n    let restSteps = 0;\n    let iterations = 0;\n    while (restSteps < maxRestSteps && iterations < maxIterations) {\n      if (abs(1 - this.solve(solverTime)) < restThreshold) {\n        restSteps++;\n      } else {\n        restSteps = 0;\n      }\n      this.solverDuration = solverTime;\n      solverTime += timeStep;\n      iterations++;\n    }\n    this.duration = round(this.solverDuration * K, 0) * globals.timeScale;\n  }\n\n  get mass() {\n    return this.m;\n  }\n\n  set mass(v) {\n    this.m = clamp(setValue(v, 1), 0, K);\n    this.compute();\n  }\n\n  get stiffness() {\n    return this.s;\n  }\n\n  set stiffness(v) {\n    this.s = clamp(setValue(v, 100), 1, K);\n    this.compute();\n  }\n\n  get damping() {\n    return this.d;\n  }\n\n  set damping(v) {\n    this.d = clamp(setValue(v, 10), .1, K);\n    this.compute();\n  }\n\n  get velocity() {\n    return this.v;\n  }\n\n  set velocity(v) {\n    this.v = clamp(setValue(v, 0), -1e3, K);\n    this.compute();\n  }\n}\n\n/**\n * @param {SpringParams} [parameters]\n * @returns {Spring}\n */\nconst createSpring = (parameters) => new Spring(parameters);\n\n\n\n\n/**\n * @param {Event} e\n */\nconst preventDefault = e => {\n  if (e.cancelable) e.preventDefault();\n};\n\nclass DOMProxy {\n  /** @param {Object} el */\n  constructor(el) {\n    this.el = el;\n    this.zIndex = 0;\n    this.parentElement = null;\n    this.classList = {\n      add: noop,\n      remove: noop,\n    };\n  }\n\n  get x() { return this.el.x || 0 };\n  set x(v) { this.el.x = v; };\n\n  get y() { return this.el.y || 0 };\n  set y(v) { this.el.y = v; };\n\n  get width() { return this.el.width || 0 };\n  set width(v) { this.el.width = v; };\n\n  get height() { return this.el.height || 0 };\n  set height(v) { this.el.height = v; };\n\n  getBoundingClientRect() {\n    return {\n      top: this.y,\n      right: this.x,\n      bottom: this.y + this.height,\n      left: this.x + this.width,\n    }\n  }\n}\n\nclass Transforms {\n  /**\n   * @param {DOMTarget|DOMProxy} $el\n   */\n  constructor($el) {\n    this.$el = $el;\n    this.inlineTransforms = [];\n    this.point = new DOMPoint();\n    this.inversedMatrix = this.getMatrix().inverse();\n  }\n\n  /**\n   * @param {Number} x\n   * @param {Number} y\n   * @return {DOMPoint}\n   */\n  normalizePoint(x, y) {\n    this.point.x = x;\n    this.point.y = y;\n    return this.point.matrixTransform(this.inversedMatrix);\n  }\n\n  /**\n   * @callback TraverseParentsCallback\n   * @param {DOMTarget} $el\n   * @param {Number} i\n   */\n\n  /**\n   * @param {TraverseParentsCallback} cb\n   */\n  traverseUp(cb) {\n    let $el = /** @type {DOMTarget|Document} */(this.$el.parentElement), i = 0;\n    while ($el && $el !== doc) {\n      cb(/** @type {DOMTarget} */($el), i);\n      $el = /** @type {DOMTarget} */($el.parentElement);\n      i++;\n    }\n  }\n\n  getMatrix() {\n    const matrix = new DOMMatrix();\n    this.traverseUp($el => {\n      const transformValue = getComputedStyle($el).transform;\n      if (transformValue) {\n        const elMatrix = new DOMMatrix(transformValue);\n        matrix.preMultiplySelf(elMatrix);\n      }\n    });\n    return matrix;\n  }\n\n  remove() {\n    this.traverseUp(($el, i) => {\n      this.inlineTransforms[i] = $el.style.transform;\n      $el.style.transform = 'none';\n    });\n  }\n\n  revert() {\n    this.traverseUp(($el, i) => {\n      const ct = this.inlineTransforms[i];\n      if (ct === '') {\n        $el.style.removeProperty('transform');\n      } else {\n        $el.style.transform = ct;\n      }\n    });\n  }\n}\n\n/**\n * @template {Array<Number>|DOMTargetSelector|String|Number|Boolean|Function|DraggableCursorParams} T\n * @param {T | ((draggable: Draggable) => T)} value\n * @param {Draggable} draggable\n * @return {T}\n */\nconst parseDraggableFunctionParameter = (value, draggable) => value && isFnc(value) ? /** @type {Function} */(value)(draggable) : value;\n\nlet zIndex = 0;\n\nclass Draggable {\n  /**\n   * @param {TargetsParam} target\n   * @param {DraggableParams} [parameters]\n   */\n  constructor(target, parameters = {}) {\n    if (!target) return;\n    if (scope.current) scope.current.register(this);\n    const paramX = parameters.x;\n    const paramY = parameters.y;\n    const trigger = parameters.trigger;\n    const modifier = parameters.modifier;\n    const ease = parameters.releaseEase;\n    const customEase = ease && parseEasings(ease);\n    const hasSpring = !isUnd(ease) && !isUnd(/** @type {Spring} */(ease).ease);\n    const xProp = /** @type {String} */(isObj(paramX) && !isUnd(/** @type {Object} */(paramX).mapTo) ? /** @type {Object} */(paramX).mapTo : 'translateX');\n    const yProp = /** @type {String} */(isObj(paramY) && !isUnd(/** @type {Object} */(paramY).mapTo) ? /** @type {Object} */(paramY).mapTo : 'translateY');\n    const container = parseDraggableFunctionParameter(parameters.container, this);\n    this.containerArray = isArr(container) ? container : null;\n    this.$container = /** @type {HTMLElement} */(container && !this.containerArray ? parseTargets(/** @type {DOMTarget} */(container))[0] : doc.body);\n    this.useWin = this.$container === doc.body;\n    /** @type {Window | HTMLElement} */\n    this.$scrollContainer = this.useWin ? win : this.$container;\n    this.$target = /** @type {HTMLElement} */(isObj(target) ? new DOMProxy(target) : parseTargets(target)[0]);\n    this.$trigger = /** @type {HTMLElement} */(parseTargets(trigger ? trigger : target)[0]);\n    this.fixed = getTargetValue(this.$target, 'position') === 'fixed';\n    // Refreshable parameters\n    this.isFinePointer = true;\n    /** @type {[Number, Number, Number, Number]} */\n    this.containerPadding = [0, 0, 0, 0];\n    /** @type {Number} */\n    this.containerFriction = 0;\n    /** @type {Number} */\n    this.releaseContainerFriction = 0;\n    /** @type {Number|Array<Number>} */\n    this.snapX = 0;\n    /** @type {Number|Array<Number>} */\n    this.snapY = 0;\n    /** @type {Number} */\n    this.scrollSpeed = 0;\n    /** @type {Number} */\n    this.scrollThreshold = 0;\n    /** @type {Number} */\n    this.dragSpeed = 0;\n    /** @type {Number} */\n    this.maxVelocity = 0;\n    /** @type {Number} */\n    this.minVelocity = 0;\n    /** @type {Number} */\n    this.velocityMultiplier = 0;\n    /** @type {Boolean|DraggableCursorParams} */\n    this.cursor = false;\n    /** @type {Spring} */\n    this.releaseXSpring = hasSpring ? /** @type {Spring} */(ease) : createSpring({\n      mass: setValue(parameters.releaseMass, 1),\n      stiffness: setValue(parameters.releaseStiffness, 80),\n      damping: setValue(parameters.releaseDamping, 20),\n    });\n    /** @type {Spring} */\n    this.releaseYSpring = hasSpring ? /** @type {Spring} */(ease) : createSpring({\n      mass: setValue(parameters.releaseMass, 1),\n      stiffness: setValue(parameters.releaseStiffness, 80),\n      damping: setValue(parameters.releaseDamping, 20),\n    });\n    /** @type {EasingFunction} */\n    this.releaseEase = customEase || eases.outQuint;\n    /** @type {Boolean} */\n    this.hasReleaseSpring = hasSpring;\n    /** @type {Callback<this>} */\n    this.onGrab = parameters.onGrab || noop;\n    /** @type {Callback<this>} */\n    this.onDrag = parameters.onDrag || noop;\n    /** @type {Callback<this>} */\n    this.onRelease = parameters.onRelease || noop;\n    /** @type {Callback<this>} */\n    this.onUpdate = parameters.onUpdate || noop;\n    /** @type {Callback<this>} */\n    this.onSettle = parameters.onSettle || noop;\n    /** @type {Callback<this>} */\n    this.onSnap = parameters.onSnap || noop;\n    /** @type {Callback<this>} */\n    this.onResize = parameters.onResize || noop;\n    /** @type {Callback<this>} */\n    this.onAfterResize = parameters.onAfterResize || noop;\n    /** @type {[Number, Number]} */\n    this.disabled = [0, 0];\n    /** @type {AnimatableParams} */\n    const animatableParams = {};\n    if (modifier) animatableParams.modifier = modifier;\n    if (isUnd(paramX) || paramX === true) {\n      animatableParams[xProp] = 0;\n    } else if (isObj(paramX)) {\n      const paramXObject = /** @type {DraggableAxisParam} */(paramX);\n      const animatableXParams = {};\n      if (paramXObject.modifier) animatableXParams.modifier = paramXObject.modifier;\n      if (paramXObject.composition) animatableXParams.composition = paramXObject.composition;\n      animatableParams[xProp] = animatableXParams;\n    } else if (paramX === false) {\n      animatableParams[xProp] = 0;\n      this.disabled[0] = 1;\n    }\n    if (isUnd(paramY) || paramY === true) {\n      animatableParams[yProp] = 0;\n    } else if (isObj(paramY)) {\n      const paramYObject = /** @type {DraggableAxisParam} */(paramY);\n      const animatableYParams = {};\n      if (paramYObject.modifier) animatableYParams.modifier = paramYObject.modifier;\n      if (paramYObject.composition) animatableYParams.composition = paramYObject.composition;\n      animatableParams[yProp] = animatableYParams;\n    } else if (paramY === false) {\n      animatableParams[yProp] = 0;\n      this.disabled[1] = 1;\n    }\n    /** @type {AnimatableObject} */\n    this.animate = /** @type {AnimatableObject} */(new Animatable(this.$target, animatableParams));\n    // Internal props\n    this.xProp = xProp;\n    this.yProp = yProp;\n    this.destX = 0;\n    this.destY = 0;\n    this.deltaX = 0;\n    this.deltaY = 0;\n    this.scroll = {x: 0, y: 0};\n    /** @type {[Number, Number, Number, Number]} */\n    this.coords = [this.x, this.y, 0, 0]; // x, y, temp x, temp y\n    /** @type {[Number, Number]} */\n    this.snapped = [0, 0]; // x, y\n    /** @type {[Number, Number, Number, Number, Number, Number, Number, Number]} */\n    this.pointer = [0, 0, 0, 0, 0, 0, 0, 0]; // x1, y1, x2, y2, temp x1, temp y1, temp x2, temp y2\n    /** @type {[Number, Number]} */\n    this.scrollView = [0, 0]; // w, h\n    /** @type {[Number, Number, Number, Number]} */\n    this.dragArea = [0, 0, 0, 0]; // x, y, w, h\n    /** @type {[Number, Number, Number, Number]} */\n    this.containerBounds = [-1e12, maxValue, maxValue, -1e12]; // t, r, b, l\n    /** @type {[Number, Number, Number, Number]} */\n    this.scrollBounds = [0, 0, 0, 0]; // t, r, b, l\n    /** @type {[Number, Number, Number, Number]} */\n    this.targetBounds = [0, 0, 0, 0]; // t, r, b, l\n    /** @type {[Number, Number]} */\n    this.window = [0, 0]; // w, h\n    /** @type {[Number, Number, Number]} */\n    this.velocityStack = [0, 0, 0];\n    /** @type {Number} */\n    this.velocityStackIndex = 0;\n    /** @type {Number} */\n    this.velocityTime = now();\n    /** @type {Number} */\n    this.velocity = 0;\n    /** @type {Number} */\n    this.angle = 0;\n    /** @type {JSAnimation} */\n    this.cursorStyles = null;\n    /** @type {JSAnimation} */\n    this.triggerStyles = null;\n    /** @type {JSAnimation} */\n    this.bodyStyles = null;\n    /** @type {JSAnimation} */\n    this.targetStyles = null;\n    /** @type {JSAnimation} */\n    this.touchActionStyles = null;\n    this.transforms = new Transforms(this.$target);\n    this.overshootCoords = { x: 0, y: 0 };\n    this.overshootXTicker = new Timer({ autoplay: false }, null, 0).init();\n    this.overshootYTicker = new Timer({ autoplay: false }, null, 0).init();\n    this.updateTicker = new Timer({ autoplay: false }, null, 0).init();\n    this.overshootXTicker.onUpdate = () => {\n      if (this.disabled[0]) return;\n      this.updated = true;\n      this.manual = true;\n      this.animate[this.xProp](this.overshootCoords.x, 0);\n    };\n    this.overshootXTicker.onComplete = () => {\n      if (this.disabled[0]) return;\n      this.manual = false;\n      this.animate[this.xProp](this.overshootCoords.x, 0);\n    };\n    this.overshootYTicker.onUpdate = () => {\n      if (this.disabled[1]) return;\n      this.updated = true;\n      this.manual = true;\n      this.animate[this.yProp](this.overshootCoords.y, 0);\n    };\n    this.overshootYTicker.onComplete = () => {\n      if (this.disabled[1]) return;\n      this.manual = false;\n      this.animate[this.yProp](this.overshootCoords.y, 0);\n    };\n    this.updateTicker.onUpdate = () => this.update();\n    this.contained = !isUnd(container);\n    this.manual = false;\n    this.grabbed = false;\n    this.dragged = false;\n    this.updated = false;\n    this.released = false;\n    this.canScroll = false;\n    this.enabled = false;\n    this.initialized = false;\n    this.activeProp = this.disabled[1] ? xProp : yProp;\n    this.animate.animations[this.activeProp].onRender = () => {\n      const hasUpdated = this.updated;\n      const hasMoved = this.grabbed && hasUpdated;\n      const hasReleased = !hasMoved && this.released;\n      const x = this.x;\n      const y = this.y;\n      const dx = x - this.coords[2];\n      const dy = y - this.coords[3];\n      this.deltaX = dx;\n      this.deltaY = dy;\n      this.coords[2] = x;\n      this.coords[3] = y;\n      if (hasUpdated) {\n        this.onUpdate(this);\n      }\n      if (!hasReleased) {\n        this.updated = false;\n      } else {\n        this.computeVelocity(dx, dy);\n        this.angle = atan2(dy, dx);\n      }\n    };\n    this.animate.animations[this.activeProp].onComplete = () => {\n      if ((!this.grabbed && this.released)) {\n        // Set eleased to false before calling onSettle to avoid recursion\n        this.released = false;\n      }\n      if (!this.manual) {\n        this.deltaX = 0;\n        this.deltaY = 0;\n        this.velocity = 0;\n        this.velocityStack[0] = 0;\n        this.velocityStack[1] = 0;\n        this.velocityStack[2] = 0;\n        this.velocityStackIndex = 0;\n        this.onSettle(this);\n      }\n    };\n    this.resizeTicker = new Timer({\n      autoplay: false,\n      duration: 150 * globals.timeScale,\n      onComplete: () => {\n        this.onResize(this);\n        this.refresh();\n        this.onAfterResize(this);\n      },\n    }).init();\n    this.parameters = parameters;\n    this.resizeObserver = new ResizeObserver(() => {\n      if (this.initialized) {\n        this.resizeTicker.restart();\n      } else {\n        this.initialized = true;\n      }\n    });\n    this.enable();\n    this.refresh();\n    this.resizeObserver.observe(this.$container);\n    if (!isObj(target)) this.resizeObserver.observe(this.$target);\n  }\n\n  /**\n   * @param  {Number} dx\n   * @param  {Number} dy\n   * @return {Number}\n   */\n  computeVelocity(dx, dy) {\n    const prevTime = this.velocityTime;\n    const curTime = now();\n    const elapsed = curTime - prevTime;\n    if (elapsed < 17) return this.velocity;\n    this.velocityTime = curTime;\n    const velocityStack = this.velocityStack;\n    const vMul = this.velocityMultiplier;\n    const minV = this.minVelocity;\n    const maxV = this.maxVelocity;\n    const vi = this.velocityStackIndex;\n    velocityStack[vi] = round(clamp((sqrt(dx * dx + dy * dy) / elapsed) * vMul, minV, maxV), 5);\n    const velocity = max(velocityStack[0], velocityStack[1], velocityStack[2]);\n    this.velocity = velocity;\n    this.velocityStackIndex = (vi + 1) % 3;\n    return velocity;\n  }\n\n  /**\n   * @param {Number}  x\n   * @param {Boolean} [muteUpdateCallback]\n   * @return {this}\n   */\n  setX(x, muteUpdateCallback = false) {\n    if (this.disabled[0]) return;\n    const v = round(x, 5);\n    this.overshootXTicker.pause();\n    this.manual = true;\n    this.updated = !muteUpdateCallback;\n    this.destX = v;\n    this.snapped[0] = snap(v, this.snapX);\n    this.animate[this.xProp](v, 0);\n    this.manual = false;\n    return this;\n  }\n\n  /**\n   * @param {Number}  y\n   * @param {Boolean} [muteUpdateCallback]\n   * @return {this}\n   */\n  setY(y, muteUpdateCallback = false) {\n    if (this.disabled[1]) return;\n    const v = round(y, 5);\n    this.overshootYTicker.pause();\n    this.manual = true;\n    this.updated = !muteUpdateCallback;\n    this.destY = v;\n    this.snapped[1] = snap(v, this.snapY);\n    this.animate[this.yProp](v, 0);\n    this.manual = false;\n    return this;\n  }\n\n  get x() {\n    return round(/** @type {Number} */(this.animate[this.xProp]()), globals.precision);\n  }\n\n  set x(x) {\n    this.setX(x, false);\n  }\n\n  get y() {\n    return round(/** @type {Number} */(this.animate[this.yProp]()), globals.precision);\n  }\n\n  set y(y) {\n    this.setY(y, false);\n  }\n\n  get progressX() {\n    return mapRange(this.x, this.containerBounds[3], this.containerBounds[1], 0, 1);\n  }\n\n  set progressX(x) {\n    this.setX(mapRange(x, 0, 1, this.containerBounds[3], this.containerBounds[1]), false);\n  }\n\n  get progressY() {\n    return mapRange(this.y, this.containerBounds[0], this.containerBounds[2], 0, 1);\n  }\n\n  set progressY(y) {\n    this.setY(mapRange(y, 0, 1, this.containerBounds[0], this.containerBounds[2]), false);\n  }\n\n  updateScrollCoords() {\n    const sx = round(this.useWin ? win.scrollX : this.$container.scrollLeft, 0);\n    const sy = round(this.useWin ? win.scrollY : this.$container.scrollTop, 0);\n    const [ cpt, cpr, cpb, cpl ] = this.containerPadding;\n    const threshold = this.scrollThreshold;\n    this.scroll.x = sx;\n    this.scroll.y = sy;\n    this.scrollBounds[0] = sy - this.targetBounds[0] + cpt - threshold;\n    this.scrollBounds[1] = sx - this.targetBounds[1] - cpr + threshold;\n    this.scrollBounds[2] = sy - this.targetBounds[2] - cpb + threshold;\n    this.scrollBounds[3] = sx - this.targetBounds[3] + cpl - threshold;\n  }\n\n  updateBoundingValues() {\n    const $container = this.$container;\n    const cx = this.x;\n    const cy = this.y;\n    const cx2 = this.coords[2];\n    const cy2 =  this.coords[3];\n    // Prevents interfering with the scroll area in cases the target is outside of the container\n    // Make sure the temp coords are also adjuset to prevents wrong delta calculation on updates\n    this.coords[2] = 0;\n    this.coords[3] = 0;\n    this.setX(0, true);\n    this.setY(0, true);\n    this.transforms.remove();\n    const iw = this.window[0] = win.innerWidth;\n    const ih = this.window[1] = win.innerHeight;\n    const uw = this.useWin;\n    const sw = $container.scrollWidth;\n    const sh = $container.scrollHeight;\n    const fx = this.fixed;\n    const transformContainerRect = $container.getBoundingClientRect();\n    const [ cpt, cpr, cpb, cpl ] = this.containerPadding;\n    this.dragArea[0] = uw ? 0 : transformContainerRect.left;\n    this.dragArea[1] = uw ? 0 : transformContainerRect.top;\n    this.scrollView[0] = uw ? clamp(sw, iw, sw) : sw;\n    this.scrollView[1] = uw ? clamp(sh, ih, sh) : sh;\n    this.updateScrollCoords();\n    const { width, height, left, top, right, bottom } = $container.getBoundingClientRect();\n    this.dragArea[2] = round(uw ? clamp(width, iw, iw) : width, 0);\n    this.dragArea[3] = round(uw ? clamp(height, ih, ih) : height, 0);\n    const containerOverflow = getTargetValue($container, 'overflow');\n    const visibleOverflow = containerOverflow === 'visible';\n    const hiddenOverflow = containerOverflow === 'hidden';\n    this.canScroll = fx ? false :\n      this.contained &&\n      (($container === doc.body && visibleOverflow) || (!hiddenOverflow && !visibleOverflow)) &&\n      (sw > this.dragArea[2] + cpl - cpr || sh > this.dragArea[3] + cpt - cpb) &&\n      (!this.containerArray || (this.containerArray && !isArr(this.containerArray)));\n    if (this.contained) {\n      const sx = this.scroll.x;\n      const sy = this.scroll.y;\n      const canScroll = this.canScroll;\n      const targetRect = this.$target.getBoundingClientRect();\n      const hiddenLeft = canScroll ? uw ? 0 : $container.scrollLeft : 0;\n      const hiddenTop = canScroll ? uw ? 0 : $container.scrollTop : 0;\n      const hiddenRight = canScroll ? this.scrollView[0] - hiddenLeft - width : 0;\n      const hiddenBottom = canScroll ? this.scrollView[1] - hiddenTop - height : 0;\n      this.targetBounds[0] = round((targetRect.top + sy) - (uw ? 0 : top), 0);\n      this.targetBounds[1] = round((targetRect.right + sx) - (uw ? iw : right), 0);\n      this.targetBounds[2] = round((targetRect.bottom + sy) - (uw ? ih : bottom), 0);\n      this.targetBounds[3] = round((targetRect.left + sx) - (uw ? 0 : left), 0);\n      if (this.containerArray) {\n        this.containerBounds[0] = this.containerArray[0] + cpt;\n        this.containerBounds[1] = this.containerArray[1] - cpr;\n        this.containerBounds[2] = this.containerArray[2] - cpb;\n        this.containerBounds[3] = this.containerArray[3] + cpl;\n      } else {\n        this.containerBounds[0] = -round(targetRect.top - (fx ? clamp(top, 0, ih) : top) + hiddenTop - cpt, 0);\n        this.containerBounds[1] = -round(targetRect.right - (fx ? clamp(right, 0, iw) : right) - hiddenRight + cpr, 0);\n        this.containerBounds[2] = -round(targetRect.bottom - (fx ? clamp(bottom, 0, ih) : bottom) - hiddenBottom + cpb, 0);\n        this.containerBounds[3] = -round(targetRect.left - (fx ? clamp(left, 0, iw) : left) + hiddenLeft - cpl, 0);\n      }\n    }\n    this.transforms.revert();\n    // Restore coordinates\n    this.coords[2] = cx2;\n    this.coords[3] = cy2;\n    this.setX(cx, true);\n    this.setY(cy, true);\n  }\n\n  /**\n   * Returns 0 if not OB, 1 if x is OB, 2 if y is OB, 3 if both x and y are OB\n   *\n   * @param  {Array} bounds\n   * @param  {Number} x\n   * @param  {Number} y\n   * @return {Number}\n   */\n  isOutOfBounds(bounds, x, y) {\n    if (!this.contained) return 0;\n    const [ bt, br, bb, bl ] = bounds;\n    const [ dx, dy ] = this.disabled;\n    const obx = !dx && x < bl || !dx && x > br;\n    const oby = !dy && y < bt || !dy && y > bb;\n    return obx && !oby ? 1 : !obx && oby ? 2 : obx && oby ? 3 : 0;\n  }\n\n  refresh() {\n    const params = this.parameters;\n    const paramX = params.x;\n    const paramY = params.y;\n    const container = parseDraggableFunctionParameter(params.container, this);\n    const cp = parseDraggableFunctionParameter(params.containerPadding, this) || 0;\n    const containerPadding = /** @type {[Number, Number, Number, Number]} */(isArr(cp) ? cp : [cp, cp, cp, cp]);\n    const cx = this.x;\n    const cy = this.y;\n    const parsedCursorStyles = parseDraggableFunctionParameter(params.cursor, this);\n    const cursorStyles = { onHover: 'grab', onGrab: 'grabbing' };\n    if (parsedCursorStyles) {\n      const { onHover, onGrab } = /** @type {DraggableCursorParams} */(parsedCursorStyles);\n      if (onHover) cursorStyles.onHover = onHover;\n      if (onGrab) cursorStyles.onGrab = onGrab;\n    }\n    this.containerArray = isArr(container) ? container : null;\n    this.$container = /** @type {HTMLElement} */(container && !this.containerArray ? parseTargets(/** @type {DOMTarget} */(container))[0] : doc.body);\n    this.useWin = this.$container === doc.body;\n    /** @type {Window | HTMLElement} */\n    this.$scrollContainer = this.useWin ? win : this.$container;\n    this.isFinePointer = matchMedia('(pointer:fine)').matches;\n    this.containerPadding = setValue(containerPadding, [0, 0, 0, 0]);\n    this.containerFriction = clamp(setValue(parseDraggableFunctionParameter(params.containerFriction, this), .8), 0, 1);\n    this.releaseContainerFriction = clamp(setValue(parseDraggableFunctionParameter(params.releaseContainerFriction, this), this.containerFriction), 0, 1);\n    this.snapX = parseDraggableFunctionParameter(isObj(paramX) && !isUnd(paramX.snap) ? paramX.snap : params.snap, this);\n    this.snapY = parseDraggableFunctionParameter(isObj(paramY) && !isUnd(paramY.snap) ? paramY.snap : params.snap, this);\n    this.scrollSpeed = setValue(parseDraggableFunctionParameter(params.scrollSpeed, this), 1.5);\n    this.scrollThreshold = setValue(parseDraggableFunctionParameter(params.scrollThreshold, this), 20);\n    this.dragSpeed = setValue(parseDraggableFunctionParameter(params.dragSpeed, this), 1);\n    this.minVelocity = setValue(parseDraggableFunctionParameter(params.minVelocity, this), 0);\n    this.maxVelocity = setValue(parseDraggableFunctionParameter(params.maxVelocity, this), 50);\n    this.velocityMultiplier = setValue(parseDraggableFunctionParameter(params.velocityMultiplier, this), 1);\n    this.cursor = parsedCursorStyles === false ? false : cursorStyles;\n    this.updateBoundingValues();\n\n    // const ob = this.isOutOfBounds(this.containerBounds, this.x, this.y);\n    // if (ob === 1 || ob === 3) this.progressX = px;\n    // if (ob === 2 || ob === 3) this.progressY = py;\n\n    // if (this.initialized && this.contained) {\n    //   if (this.progressX !== px) this.progressX = px;\n    //   if (this.progressY !== py) this.progressY = py;\n    // }\n\n    const [ bt, br, bb, bl ] = this.containerBounds;\n    this.setX(clamp(cx, bl, br), true);\n    this.setY(clamp(cy, bt, bb), true);\n  }\n\n  update() {\n    this.updateScrollCoords();\n    if (this.canScroll) {\n      const [ cpt, cpr, cpb, cpl ] = this.containerPadding;\n      const [ sw, sh ] = this.scrollView;\n      const daw = this.dragArea[2];\n      const dah = this.dragArea[3];\n      const csx = this.scroll.x;\n      const csy = this.scroll.y;\n      const nsw = this.$container.scrollWidth;\n      const nsh = this.$container.scrollHeight;\n      const csw = this.useWin ? clamp(nsw, this.window[0], nsw) : nsw;\n      const csh = this.useWin ? clamp(nsh, this.window[1], nsh) : nsh;\n      const swd = sw - csw;\n      const shd = sh - csh;\n      // Handle cases where the scrollarea dimensions changes during drag\n      if (this.dragged && swd > 0) {\n        this.coords[0] -= swd;\n        this.scrollView[0] = csw;\n      }\n      if (this.dragged && shd > 0) {\n        this.coords[1] -= shd;\n        this.scrollView[1] = csh;\n      }\n      // Handle autoscroll when target is at the edges of the scroll bounds\n      const s = this.scrollSpeed * 10;\n      const threshold = this.scrollThreshold;\n      const [ x, y ] = this.coords;\n      const [ st, sr, sb, sl ] = this.scrollBounds;\n      const t = round(clamp((y - st + cpt) / threshold, -1, 0) * s, 0);\n      const r = round(clamp((x - sr - cpr) / threshold, 0, 1) * s, 0);\n      const b = round(clamp((y - sb - cpb) / threshold, 0, 1) * s, 0);\n      const l = round(clamp((x - sl + cpl) / threshold, -1, 0) * s, 0);\n      if (t || b || l || r) {\n        const [nx, ny] = this.disabled;\n        let scrollX = csx;\n        let scrollY = csy;\n        if (!nx) {\n          scrollX = round(clamp(csx + (l || r), 0, sw - daw), 0);\n          this.coords[0] -= csx - scrollX;\n        }\n        if (!ny) {\n          scrollY = round(clamp(csy + (t || b), 0, sh - dah), 0);\n          this.coords[1] -= csy - scrollY;\n        }\n        // Note: Safari mobile requires to use different scroll methods depending if using the window or not\n        if (this.useWin) {\n          this.$scrollContainer.scrollBy(-(csx - scrollX), -(csy - scrollY));\n        } else {\n          this.$scrollContainer.scrollTo(scrollX, scrollY);\n        }\n      }\n    }\n    const [ ct, cr, cb, cl ] = this.containerBounds;\n    const [ px1, py1, px2, py2, px3, py3 ] = this.pointer;\n    this.coords[0] += (px1 - px3) * this.dragSpeed;\n    this.coords[1] += (py1 - py3) * this.dragSpeed;\n    this.pointer[4] = px1;\n    this.pointer[5] = py1;\n    const [ cx, cy ] = this.coords;\n    const [ sx, sy ] = this.snapped;\n    const cf = (1 - this.containerFriction) * this.dragSpeed;\n    this.setX(cx > cr ? cr + (cx - cr) * cf : cx < cl ? cl + (cx - cl) * cf : cx, false);\n    this.setY(cy > cb ? cb + (cy - cb) * cf : cy < ct ? ct + (cy - ct) * cf : cy, false);\n    this.computeVelocity(px1 - px3, py1 - py3);\n    this.angle = atan2(py1 - py2, px1 - px2);\n    const [ nsx, nsy ] = this.snapped;\n    if (nsx !== sx && this.snapX || nsy !== sy && this.snapY) {\n      this.onSnap(this);\n    }\n  }\n\n  stop() {\n    this.updateTicker.pause();\n    this.overshootXTicker.pause();\n    this.overshootYTicker.pause();\n    // Pauses the in bounds onRelease animations\n    for (let prop in this.animate.animations) this.animate.animations[prop].pause();\n    remove(this, null, 'x');\n    remove(this, null, 'y');\n    remove(this, null, 'progressX');\n    remove(this, null, 'progressY');\n    remove(this.scroll); // Removes any active animations on the container scroll\n    remove(this.overshootCoords); // Removes active overshoot animations\n    return this;\n  }\n\n  /**\n   * @param {Number} [duration]\n   * @param {Number} [gap]\n   * @param {EasingParam} [ease]\n   * @return {this}\n   */\n  scrollInView(duration, gap = 0, ease = eases.inOutQuad) {\n    this.updateScrollCoords();\n    const x = this.destX;\n    const y = this.destY;\n    const scroll = this.scroll;\n    const scrollBounds = this.scrollBounds;\n    const canScroll = this.canScroll;\n    if (!this.containerArray && this.isOutOfBounds(scrollBounds, x, y)) {\n      const [ st, sr, sb, sl ] = scrollBounds;\n      const t = round(clamp(y - st, -1e12, 0), 0);\n      const r = round(clamp(x - sr, 0, maxValue), 0);\n      const b = round(clamp(y - sb, 0, maxValue), 0);\n      const l = round(clamp(x - sl, -1e12, 0), 0);\n      new JSAnimation(scroll, {\n        x: round(scroll.x + (l ? l - gap : r ? r + gap : 0), 0),\n        y: round(scroll.y + (t ? t - gap : b ? b + gap : 0), 0),\n        duration: isUnd(duration) ? 350 * globals.timeScale : duration,\n        ease,\n        onUpdate: () => {\n          this.canScroll = false;\n          this.$scrollContainer.scrollTo(scroll.x, scroll.y);\n        }\n      }).init().then(() => {\n        this.canScroll = canScroll;\n      });\n    }\n    return this;\n  }\n\n  handleHover() {\n    if (this.isFinePointer && this.cursor && !this.cursorStyles) {\n      this.cursorStyles = setTargetValues(this.$trigger, {\n        cursor: /** @type {DraggableCursorParams} */(this.cursor).onHover\n      });\n    }\n  }\n\n  /**\n   * @param  {Number} [duration]\n   * @param  {Number} [gap]\n   * @param  {EasingParam} [ease]\n   * @return {this}\n   */\n  animateInView(duration, gap = 0, ease = eases.inOutQuad) {\n    this.stop();\n    this.updateBoundingValues();\n    const x = this.x;\n    const y = this.y;\n    const [ cpt, cpr, cpb, cpl ] = this.containerPadding;\n    const bt = this.scroll.y - this.targetBounds[0] + cpt + gap;\n    const br = this.scroll.x - this.targetBounds[1] - cpr - gap;\n    const bb = this.scroll.y - this.targetBounds[2] - cpb - gap;\n    const bl = this.scroll.x - this.targetBounds[3] + cpl + gap;\n    const ob = this.isOutOfBounds([bt, br, bb, bl], x, y);\n    if (ob) {\n      const [ disabledX, disabledY ] = this.disabled;\n      const destX = clamp(snap(x, this.snapX), bl, br);\n      const destY = clamp(snap(y, this.snapY), bt, bb);\n      const dur = isUnd(duration) ? 350 * globals.timeScale : duration;\n      if (!disabledX && (ob === 1 || ob === 3)) this.animate[this.xProp](destX, dur, ease);\n      if (!disabledY && (ob === 2 || ob === 3)) this.animate[this.yProp](destY, dur, ease);\n    }\n    return this;\n  }\n\n  /**\n   * @param {MouseEvent|TouchEvent} e\n   */\n  handleDown(e) {\n    const $eTarget = /** @type {HTMLElement} */(e.target);\n    if (this.grabbed || /** @type {HTMLInputElement}  */($eTarget).type === 'range') return;\n\n    e.stopPropagation();\n\n    this.grabbed = true;\n    this.released = false;\n    this.stop();\n    this.updateBoundingValues();\n    const touches = /** @type {TouchEvent} */(e).changedTouches;\n    const eventX = touches ? touches[0].clientX : /** @type {MouseEvent} */(e).clientX;\n    const eventY = touches ? touches[0].clientY : /** @type {MouseEvent} */(e).clientY;\n    const { x, y } = this.transforms.normalizePoint(eventX, eventY);\n    const [ ct, cr, cb, cl ] = this.containerBounds;\n    const cf = (1 - this.containerFriction) * this.dragSpeed;\n    const cx = this.x;\n    const cy = this.y;\n    this.coords[0] = this.coords[2] = !cf ? cx : cx > cr ? cr + (cx - cr) / cf : cx < cl ? cl + (cx - cl) / cf : cx;\n    this.coords[1] = this.coords[3] = !cf ? cy : cy > cb ? cb + (cy - cb) / cf : cy < ct ? ct + (cy - ct) / cf : cy;\n    this.pointer[0] = x;\n    this.pointer[1] = y;\n    this.pointer[2] = x;\n    this.pointer[3] = y;\n    this.pointer[4] = x;\n    this.pointer[5] = y;\n    this.pointer[6] = x;\n    this.pointer[7] = y;\n    this.deltaX = 0;\n    this.deltaY = 0;\n    this.velocity = 0;\n    this.velocityStack[0] = 0;\n    this.velocityStack[1] = 0;\n    this.velocityStack[2] = 0;\n    this.velocityStackIndex = 0;\n    this.angle = 0;\n    if (this.targetStyles) {\n      this.targetStyles.revert();\n      this.targetStyles = null;\n    }\n    const z = /** @type {Number} */(getTargetValue(this.$target, 'zIndex', false));\n    zIndex = (z > zIndex ? z : zIndex) + 1;\n    this.targetStyles = setTargetValues(this.$target, { zIndex });\n    if (this.triggerStyles) {\n      this.triggerStyles.revert();\n      this.triggerStyles = null;\n    }\n    if (this.cursorStyles) {\n      this.cursorStyles.revert();\n      this.cursorStyles = null;\n    }\n    if (this.isFinePointer && this.cursor) {\n      this.bodyStyles = setTargetValues(doc.body, {\n        cursor: /** @type {DraggableCursorParams} */(this.cursor).onGrab\n      });\n    }\n    this.scrollInView(100, 0, eases.out(3));\n    this.onGrab(this);\n\n    doc.addEventListener('touchmove', this);\n    doc.addEventListener('touchend', this);\n    doc.addEventListener('touchcancel', this);\n    doc.addEventListener('mousemove', this);\n    doc.addEventListener('mouseup', this);\n    doc.addEventListener('selectstart', this);\n  }\n\n  /**\n   * @param {MouseEvent|TouchEvent} e\n   */\n  handleMove(e) {\n    if (!this.grabbed) return;\n    const touches = /** @type {TouchEvent} */(e).changedTouches;\n    const eventX = touches ? touches[0].clientX : /** @type {MouseEvent} */(e).clientX;\n    const eventY = touches ? touches[0].clientY : /** @type {MouseEvent} */(e).clientY;\n    const { x, y } = this.transforms.normalizePoint(eventX, eventY);\n    const movedX = x - this.pointer[6];\n    const movedY = y - this.pointer[7];\n\n    let $parent = /** @type {HTMLElement} */(e.target);\n    let isAtTop = false;\n    let isAtBottom = false;\n    let canTouchScroll = false;\n\n    while (touches && $parent && $parent !== this.$trigger) {\n      const overflowY = getTargetValue($parent, 'overflow-y');\n      if (overflowY !== 'hidden' && overflowY !== 'visible') {\n        const { scrollTop, scrollHeight, clientHeight } = $parent;\n        if (scrollHeight > clientHeight) {\n          canTouchScroll = true;\n          isAtTop = scrollTop <= 3;\n          isAtBottom = scrollTop >= (scrollHeight - clientHeight) - 3;\n          break;\n        }\n      }\n      $parent = /** @type {HTMLElement} */($parent.parentNode);\n    }\n\n    if (canTouchScroll && ((!isAtTop && !isAtBottom) || (isAtTop && movedY < 0) || (isAtBottom && movedY > 0))) {\n\n      this.pointer[0] = x;\n      this.pointer[1] = y;\n      this.pointer[2] = x;\n      this.pointer[3] = y;\n      this.pointer[4] = x;\n      this.pointer[5] = y;\n      this.pointer[6] = x;\n      this.pointer[7] = y;\n\n    } else {\n\n      preventDefault(e);\n\n      // Needed to prevents click on handleUp\n      if (!this.triggerStyles) this.triggerStyles = setTargetValues(this.$trigger, { pointerEvents: 'none' });\n      // Needed to prevent page scroll while dragging on touch devvice\n      this.$trigger.addEventListener('touchstart', preventDefault, { passive: false });\n      this.$trigger.addEventListener('touchmove', preventDefault, { passive: false });\n      this.$trigger.addEventListener('touchend', preventDefault);\n\n\n      if ((!this.disabled[0] && abs(movedX) > 3) || (!this.disabled[1] && abs(movedY) > 3)) {\n\n        this.updateTicker.resume();\n        this.pointer[2] = this.pointer[0];\n        this.pointer[3] = this.pointer[1];\n        this.pointer[0] = x;\n        this.pointer[1] = y;\n        this.dragged = true;\n        this.released = false;\n        this.onDrag(this);\n      }\n    }\n  }\n\n  handleUp() {\n\n    if (!this.grabbed) return;\n\n    this.updateTicker.pause();\n\n    if (this.triggerStyles) {\n      this.triggerStyles.revert();\n      this.triggerStyles = null;\n    }\n\n    if (this.bodyStyles) {\n      this.bodyStyles.revert();\n      this.bodyStyles = null;\n    }\n\n    const [ disabledX, disabledY ] = this.disabled;\n    const [ px1, py1, px2, py2, px3, py3 ] = this.pointer;\n    const [ ct, cr, cb, cl ] = this.containerBounds;\n    const [ sx, sy ] = this.snapped;\n    const springX = this.releaseXSpring;\n    const springY = this.releaseYSpring;\n    const releaseEase = this.releaseEase;\n    const hasReleaseSpring = this.hasReleaseSpring;\n    const overshootCoords = this.overshootCoords;\n    const cx = this.x;\n    const cy = this.y;\n    const pv = this.computeVelocity(px1 - px3, py1 - py3);\n    const pa = this.angle = atan2(py1 - py2, px1 - px2);\n    const ds = pv * 150;\n    const cf = (1 - this.releaseContainerFriction) * this.dragSpeed;\n    const nx = cx + (cos(pa) * ds);\n    const ny = cy + (sin(pa) * ds);\n    const bx = nx > cr ? cr + (nx - cr) * cf : nx < cl ? cl + (nx - cl) * cf : nx;\n    const by = ny > cb ? cb + (ny - cb) * cf : ny < ct ? ct + (ny - ct) * cf : ny;\n    const dx = this.destX = clamp(round(snap(bx, this.snapX), 5), cl, cr);\n    const dy = this.destY = clamp(round(snap(by, this.snapY), 5), ct, cb);\n    const ob = this.isOutOfBounds(this.containerBounds, nx, ny);\n\n    let durationX = 0;\n    let durationY = 0;\n    let easeX = releaseEase;\n    let easeY = releaseEase;\n    let longestReleaseDuration = 0;\n\n    overshootCoords.x = cx;\n    overshootCoords.y = cy;\n\n    if (!disabledX) {\n      const directionX = dx === cr ? cx > cr ? -1 : 1 : cx < cl ? -1 : 1;\n      const distanceX = round(cx - dx, 0);\n      springX.velocity = disabledY && hasReleaseSpring ? distanceX ? (ds * directionX) / abs(distanceX) : 0 : pv;\n      const { ease, duration, restDuration } = springX;\n      durationX = cx === dx ? 0 : hasReleaseSpring ? duration : duration - (restDuration * globals.timeScale);\n      if (hasReleaseSpring) easeX = ease;\n      if (durationX > longestReleaseDuration) longestReleaseDuration = durationX;\n    }\n\n    if (!disabledY) {\n      const directionY = dy === cb ? cy > cb ? -1 : 1 : cy < ct ? -1 : 1;\n      const distanceY = round(cy - dy, 0);\n      springY.velocity = disabledX && hasReleaseSpring ? distanceY ? (ds * directionY) / abs(distanceY) : 0 : pv;\n      const { ease, duration, restDuration } = springY;\n      durationY = cy === dy ? 0 : hasReleaseSpring ? duration : duration - (restDuration * globals.timeScale);\n      if (hasReleaseSpring) easeY = ease;\n      if (durationY > longestReleaseDuration) longestReleaseDuration = durationY;\n    }\n\n    if (!hasReleaseSpring && ob && cf && (durationX || durationY)) {\n\n        const composition = compositionTypes.blend;\n\n        new JSAnimation(overshootCoords, {\n          x: { to: bx, duration: durationX * .65 },\n          y: { to: by, duration: durationY * .65 },\n          ease: releaseEase,\n          composition,\n        }).init();\n\n        new JSAnimation(overshootCoords, {\n          x: { to: dx, duration: durationX },\n          y: { to: dy, duration: durationY },\n          ease: releaseEase,\n          composition,\n        }).init();\n\n        this.overshootXTicker.stretch(durationX).restart();\n        this.overshootYTicker.stretch(durationY).restart();\n\n    } else {\n\n      if (!disabledX) this.animate[this.xProp](dx, durationX, easeX);\n      if (!disabledY) this.animate[this.yProp](dy, durationY, easeY);\n\n    }\n\n    this.scrollInView(longestReleaseDuration, this.scrollThreshold, releaseEase);\n\n    let hasSnapped = false;\n\n    if (dx !== sx) {\n      this.snapped[0] = dx;\n      if (this.snapX) hasSnapped = true;\n    }\n\n    if (dy !== sy && this.snapY) {\n      this.snapped[1] = dy;\n      if (this.snapY) hasSnapped = true;\n    }\n\n    if (hasSnapped) this.onSnap(this);\n\n    this.grabbed = false;\n    this.dragged = false;\n    this.updated = true;\n    this.released = true;\n\n    // It's important to trigger the callback after the release animations to be able to cancel them\n    this.onRelease(this);\n\n    this.$trigger.removeEventListener('touchstart', preventDefault);\n    this.$trigger.removeEventListener('touchmove', preventDefault);\n    this.$trigger.removeEventListener('touchend', preventDefault);\n\n    doc.removeEventListener('touchmove', this);\n    doc.removeEventListener('touchend', this);\n    doc.removeEventListener('touchcancel', this);\n    doc.removeEventListener('mousemove', this);\n    doc.removeEventListener('mouseup', this);\n    doc.removeEventListener('selectstart', this);\n  }\n\n  reset() {\n    this.stop();\n    this.resizeTicker.pause();\n    this.grabbed = false;\n    this.dragged = false;\n    this.updated = false;\n    this.released = false;\n    this.canScroll = false;\n    this.setX(0, true);\n    this.setY(0, true);\n    this.coords[0] = 0;\n    this.coords[1] = 0;\n    this.pointer[0] = 0;\n    this.pointer[1] = 0;\n    this.pointer[2] = 0;\n    this.pointer[3] = 0;\n    this.pointer[4] = 0;\n    this.pointer[5] = 0;\n    this.pointer[6] = 0;\n    this.pointer[7] = 0;\n    this.velocity = 0;\n    this.velocityStack[0] = 0;\n    this.velocityStack[1] = 0;\n    this.velocityStack[2] = 0;\n    this.velocityStackIndex = 0;\n    this.angle = 0;\n    return this;\n  }\n\n  enable() {\n    if (!this.enabled) {\n      this.enabled = true;\n      this.$target.classList.remove('is-disabled');\n      this.touchActionStyles = setTargetValues(this.$trigger, {\n        touchAction: this.disabled[0] ? 'pan-x' : this.disabled[1] ? 'pan-y' : 'none'\n      });\n      this.$trigger.addEventListener('touchstart', this, { passive: true });\n      this.$trigger.addEventListener('mousedown', this, { passive: true });\n      this.$trigger.addEventListener('mouseenter', this);\n    }\n    return this;\n  }\n\n  disable() {\n    this.enabled = false;\n    this.grabbed = false;\n    this.dragged = false;\n    this.updated = false;\n    this.released = false;\n    this.canScroll = false;\n    this.touchActionStyles.revert();\n    if (this.cursorStyles) {\n      this.cursorStyles.revert();\n      this.cursorStyles = null;\n    }\n    if (this.triggerStyles) {\n      this.triggerStyles.revert();\n      this.triggerStyles = null;\n    }\n    if (this.bodyStyles) {\n      this.bodyStyles.revert();\n      this.bodyStyles = null;\n    }\n    if (this.targetStyles) {\n      this.targetStyles.revert();\n      this.targetStyles = null;\n    }\n    this.stop();\n    this.$target.classList.add('is-disabled');\n    this.$trigger.removeEventListener('touchstart', this);\n    this.$trigger.removeEventListener('mousedown', this);\n    this.$trigger.removeEventListener('mouseenter', this);\n    doc.removeEventListener('touchmove', this);\n    doc.removeEventListener('touchend', this);\n    doc.removeEventListener('touchcancel', this);\n    doc.removeEventListener('mousemove', this);\n    doc.removeEventListener('mouseup', this);\n    doc.removeEventListener('selectstart', this);\n    return this;\n  }\n\n  revert() {\n    this.reset();\n    this.disable();\n    this.$target.classList.remove('is-disabled');\n    this.updateTicker.revert();\n    this.overshootXTicker.revert();\n    this.overshootYTicker.revert();\n    this.resizeTicker.revert();\n    this.animate.revert();\n    return this;\n  }\n\n  /**\n   * @param {Event} e\n   */\n  handleEvent(e) {\n    switch (e.type) {\n      case 'mousedown':\n        this.handleDown(/** @type {MouseEvent} */(e));\n        break;\n      case 'touchstart':\n        this.handleDown(/** @type {TouchEvent} */(e));\n        break;\n      case 'mousemove':\n        this.handleMove(/** @type {MouseEvent} */(e));\n        break;\n      case 'touchmove':\n        this.handleMove(/** @type {TouchEvent} */(e));\n        break;\n      case 'mouseup':\n        this.handleUp();\n        break;\n      case 'touchend':\n        this.handleUp();\n        break;\n      case 'touchcancel':\n        this.handleUp();\n        break;\n      case 'mouseenter':\n        this.handleHover();\n        break;\n      case 'selectstart':\n        preventDefault(e);\n        break;\n    }\n  }\n}\n\n/**\n * @param {TargetsParam} target\n * @param {DraggableParams} [parameters]\n * @return {Draggable}\n */\nconst createDraggable = (target, parameters) => new Draggable(target, parameters);\n\n\n\n\nclass Scope {\n  /** @param {ScopeParams} [parameters] */\n  constructor(parameters = {}) {\n    if (scope.current) scope.current.register(this);\n    const rootParam = parameters.root;\n    /** @type {Document|DOMTarget} */\n    let root = doc;\n    if (rootParam) {\n      root = /** @type {ReactRef} */(rootParam).current ||\n             /** @type {AngularRef} */(rootParam).nativeElement ||\n             parseTargets(/** @type {DOMTargetSelector} */(rootParam))[0] ||\n             doc;\n    }\n    const scopeDefaults = parameters.defaults;\n    const globalDefault = globals.defaults;\n    const mediaQueries = parameters.mediaQueries;\n    /** @type {DefaultsParams} */\n    this.defaults = scopeDefaults ? mergeObjects(scopeDefaults, globalDefault) : globalDefault;\n    /** @type {Document|DOMTarget} */\n    this.root = root;\n    /** @type {Array<ScopeConstructorCallback>} */\n    this.constructors = [];\n    /** @type {Array<ScopeCleanupCallback>} */\n    this.revertConstructors = [];\n    /** @type {Array<Revertible>} */\n    this.revertibles = [];\n    /** @type {Array<ScopeConstructorCallback | ((scope: this) => Tickable)>} */\n    this.constructorsOnce = [];\n    /** @type {Array<ScopeCleanupCallback>} */\n    this.revertConstructorsOnce = [];\n    /** @type {Array<Revertible>} */\n    this.revertiblesOnce = [];\n    /** @type {Boolean} */\n    this.once = false;\n    /** @type {Number} */\n    this.onceIndex = 0;\n    /** @type {Record<String, ScopeMethod>} */\n    this.methods = {};\n    /** @type {Record<String, Boolean>} */\n    this.matches = {};\n    /** @type {Record<String, MediaQueryList>} */\n    this.mediaQueryLists = {};\n    /** @type {Record<String, any>} */\n    this.data = {};\n    if (mediaQueries) {\n      for (let mq in mediaQueries) {\n        const _mq = win.matchMedia(mediaQueries[mq]);\n        this.mediaQueryLists[mq] = _mq;\n        _mq.addEventListener('change', this);\n      }\n    }\n  }\n\n  /**\n   * @param {Revertible} revertible\n   */\n  register(revertible) {\n    const store = this.once ? this.revertiblesOnce : this.revertibles;\n    store.push(revertible);\n  }\n\n  /**\n   * @template T\n   * @param {ScopedCallback<T>} cb\n   * @return {T}\n   */\n  execute(cb) {\n    let activeScope = scope.current;\n    let activeRoot = scope.root;\n    let activeDefaults = globals.defaults;\n    scope.current = this;\n    scope.root = this.root;\n    globals.defaults = this.defaults;\n    const mqs = this.mediaQueryLists;\n    for (let mq in mqs) this.matches[mq] = mqs[mq].matches;\n    const returned = cb(this);\n    scope.current = activeScope;\n    scope.root = activeRoot;\n    globals.defaults = activeDefaults;\n    return returned;\n  }\n\n  /**\n   * @return {this}\n   */\n  refresh() {\n    this.onceIndex = 0;\n    this.execute(() => {\n      let i = this.revertibles.length;\n      let y = this.revertConstructors.length;\n      while (i--) this.revertibles[i].revert();\n      while (y--) this.revertConstructors[y](this);\n      this.revertibles.length = 0;\n      this.revertConstructors.length = 0;\n      this.constructors.forEach((/** @type {ScopeConstructorCallback} */constructor) => {\n        const revertConstructor = constructor(this);\n        if (isFnc(revertConstructor)) {\n          this.revertConstructors.push(revertConstructor);\n        }\n      });\n    });\n    return this;\n  }\n\n  /**\n   * @overload\n   * @param {String} a1\n   * @param {ScopeMethod} a2\n   * @return {this}\n   *\n   * @overload\n   * @param {ScopeConstructorCallback} a1\n   * @return {this}\n   *\n   * @param {String|ScopeConstructorCallback} a1\n   * @param {ScopeMethod} [a2]\n   */\n  add(a1, a2) {\n    this.once = false;\n    if (isFnc(a1)) {\n      const constructor = /** @type {ScopeConstructorCallback} */(a1);\n      this.constructors.push(constructor);\n      this.execute(() => {\n        const revertConstructor = constructor(this);\n        if (isFnc(revertConstructor)) {\n          this.revertConstructors.push(revertConstructor);\n        }\n      });\n    } else {\n      this.methods[/** @type {String} */(a1)] = (/** @type {any} */...args) => this.execute(() => a2(...args));\n    }\n    return this;\n  }\n\n  /**\n   * @param {ScopeConstructorCallback} scopeConstructorCallback\n   * @return {this}\n   */\n  addOnce(scopeConstructorCallback) {\n    this.once = true;\n    if (isFnc(scopeConstructorCallback)) {\n      const currentIndex = this.onceIndex++;\n      const tracked = this.constructorsOnce[currentIndex];\n      if (tracked) return this;\n      const constructor = /** @type {ScopeConstructorCallback} */(scopeConstructorCallback);\n      this.constructorsOnce[currentIndex] = constructor;\n      this.execute(() => {\n        const revertConstructor = constructor(this);\n        if (isFnc(revertConstructor)) {\n          this.revertConstructorsOnce.push(revertConstructor);\n        }\n      });\n    }\n    return this;\n  }\n\n  /**\n   * @param  {(scope: this) => Tickable} cb\n   * @return {Tickable}\n   */\n  keepTime(cb) {\n    this.once = true;\n    const currentIndex = this.onceIndex++;\n    const tracked = /** @type {(scope: this) => Tickable} */(this.constructorsOnce[currentIndex]);\n    if (isFnc(tracked)) return tracked(this);\n    const constructor = /** @type {(scope: this) => Tickable} */(createRefreshable(cb));\n    this.constructorsOnce[currentIndex] = constructor;\n    let trackedTickable;\n    this.execute(() => {\n      trackedTickable = constructor(this);\n    });\n    return trackedTickable;\n  }\n\n  /**\n   * @param {Event} e\n   */\n  handleEvent(e) {\n    switch (e.type) {\n      case 'change':\n        this.refresh();\n        break;\n    }\n  }\n\n  revert() {\n    const revertibles = this.revertibles;\n    const revertConstructors = this.revertConstructors;\n    const revertiblesOnce = this.revertiblesOnce;\n    const revertConstructorsOnce = this.revertConstructorsOnce;\n    const mqs = this.mediaQueryLists;\n    let i = revertibles.length;\n    let j = revertConstructors.length;\n    let k = revertiblesOnce.length;\n    let l = revertConstructorsOnce.length;\n    while (i--) revertibles[i].revert();\n    while (j--) revertConstructors[j](this);\n    while (k--) revertiblesOnce[k].revert();\n    while (l--) revertConstructorsOnce[l](this);\n    for (let mq in mqs) mqs[mq].removeEventListener('change', this);\n    revertibles.length = 0;\n    revertConstructors.length = 0;\n    this.constructors.length = 0;\n    revertiblesOnce.length = 0;\n    revertConstructorsOnce.length = 0;\n    this.constructorsOnce.length = 0;\n    this.onceIndex = 0;\n    this.matches = {};\n    this.methods = {};\n    this.mediaQueryLists = {};\n    this.data = {};\n  }\n}\n\n/**\n * @param {ScopeParams} [params]\n * @return {Scope}\n */\nconst createScope = params => new Scope(params);\n\n/**\n * @typedef {String|Number} ScrollThresholdValue\n */\n\n/**\n * @return {Number}\n */\nconst getMaxViewHeight = () => {\n  const $el = document.createElement('div');\n  doc.body.appendChild($el);\n  $el.style.height = '100lvh';\n  const height = $el.offsetHeight;\n  doc.body.removeChild($el);\n  return height;\n};\n\n/**\n * @template {ScrollThresholdValue|String|Number|Boolean|Function|Object} T\n * @param {T | ((observer: ScrollObserver) => T)} value\n * @param {ScrollObserver} scroller\n * @return {T}\n */\nconst parseScrollObserverFunctionParameter = (value, scroller) => value && isFnc(value) ? /** @type {Function} */(value)(scroller) : value;\n\nconst scrollContainers = new Map();\n\nclass ScrollContainer {\n  /**\n   * @param {HTMLElement} $el\n   */\n  constructor($el) {\n    /** @type {HTMLElement} */\n    this.element = $el;\n    /** @type {Boolean} */\n    this.useWin = this.element === doc.body;\n    /** @type {Number} */\n    this.winWidth = 0;\n    /** @type {Number} */\n    this.winHeight = 0;\n    /** @type {Number} */\n    this.width = 0;\n    /** @type {Number} */\n    this.height = 0;\n    /** @type {Number} */\n    this.left = 0;\n    /** @type {Number} */\n    this.top = 0;\n    /** @type {Number} */\n    this.zIndex = 0;\n    /** @type {Number} */\n    this.scrollX = 0;\n    /** @type {Number} */\n    this.scrollY = 0;\n    /** @type {Number} */\n    this.prevScrollX = 0;\n    /** @type {Number} */\n    this.prevScrollY = 0;\n    /** @type {Number} */\n    this.scrollWidth = 0;\n    /** @type {Number} */\n    this.scrollHeight = 0;\n    /** @type {Number} */\n    this.velocity = 0;\n    /** @type {Boolean} */\n    this.backwardX = false;\n    /** @type {Boolean} */\n    this.backwardY = false;\n    /** @type {Timer} */\n    this.scrollTicker = new Timer({\n      autoplay: false,\n      onBegin: () => this.dataTimer.resume(),\n      onUpdate: () => {\n        const backwards = this.backwardX || this.backwardY;\n        forEachChildren(this, (/** @type {ScrollObserver} */child) => child.handleScroll(), backwards);\n      },\n      onComplete: () => this.dataTimer.pause()\n    }).init();\n    /** @type {Timer} */\n    this.dataTimer = new Timer({\n      autoplay: false,\n      frameRate: 30,\n      onUpdate: self => {\n        const dt = self.deltaTime;\n        const px = this.prevScrollX;\n        const py = this.prevScrollY;\n        const nx = this.scrollX;\n        const ny = this.scrollY;\n        const dx = px - nx;\n        const dy = py - ny;\n        this.prevScrollX = nx;\n        this.prevScrollY = ny;\n        if (dx) this.backwardX = px > nx;\n        if (dy) this.backwardY = py > ny;\n        this.velocity = round(dt > 0 ? Math.sqrt(dx * dx + dy * dy) / dt : 0, 5);\n      }\n    }).init();\n    /** @type {Timer} */\n    this.resizeTicker = new Timer({\n      autoplay: false,\n      duration: 250 * globals.timeScale,\n      onComplete: () => {\n        this.updateWindowBounds();\n        this.refreshScrollObservers();\n        this.handleScroll();\n      }\n    }).init();\n    /** @type {Timer} */\n    this.wakeTicker = new Timer({\n      autoplay: false,\n      duration: 500 * globals.timeScale,\n      onBegin: () => {\n        this.scrollTicker.resume();\n      },\n      onComplete: () => {\n        this.scrollTicker.pause();\n      }\n    }).init();\n    /** @type {ScrollObserver} */\n    this._head = null;\n    /** @type {ScrollObserver} */\n    this._tail = null;\n    this.updateScrollCoords();\n    this.updateWindowBounds();\n    this.updateBounds();\n    this.refreshScrollObservers();\n    this.handleScroll();\n    this.resizeObserver = new ResizeObserver(() => this.resizeTicker.restart());\n    this.resizeObserver.observe(this.element);\n    (this.useWin ? win : this.element).addEventListener('scroll', this, false);\n  }\n\n  updateScrollCoords() {\n    const useWin = this.useWin;\n    const $el = this.element;\n    this.scrollX = round(useWin ? win.scrollX : $el.scrollLeft, 0);\n    this.scrollY = round(useWin ? win.scrollY : $el.scrollTop, 0);\n  }\n\n  updateWindowBounds() {\n    this.winWidth = win.innerWidth;\n    this.winHeight = getMaxViewHeight();\n  }\n\n  updateBounds() {\n    const style = getComputedStyle(this.element);\n    const $el = this.element;\n    this.scrollWidth = $el.scrollWidth + parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n    this.scrollHeight = $el.scrollHeight + parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n    this.updateWindowBounds();\n    let width, height;\n    if (this.useWin) {\n      width = this.winWidth;\n      height = this.winHeight;\n    } else {\n      const elRect = $el.getBoundingClientRect();\n      width = elRect.width;\n      height = elRect.height;\n      this.top = elRect.top;\n      this.left = elRect.left;\n    }\n    this.width = width;\n    this.height = height;\n  }\n\n  refreshScrollObservers() {\n    forEachChildren(this, (/** @type {ScrollObserver} */child) => {\n      if (child._debug) {\n        child.removeDebug();\n      }\n    });\n    this.updateBounds();\n    forEachChildren(this, (/** @type {ScrollObserver} */child) => {\n      child.refresh();\n      if (child._debug) {\n        child.debug();\n      }\n    });\n  }\n\n  refresh() {\n    this.updateWindowBounds();\n    this.updateBounds();\n    this.refreshScrollObservers();\n    this.handleScroll();\n  }\n\n  handleScroll() {\n    this.updateScrollCoords();\n    this.wakeTicker.restart();\n  }\n\n  /**\n   * @param {Event} e\n   */\n  handleEvent(e) {\n    switch (e.type) {\n      case 'scroll':\n        this.handleScroll();\n        break;\n    }\n  }\n\n  revert() {\n    this.scrollTicker.cancel();\n    this.dataTimer.cancel();\n    this.resizeTicker.cancel();\n    this.wakeTicker.cancel();\n    this.resizeObserver.unobserve(this.element);\n    (this.useWin ? win : this.element).removeEventListener('scroll', this);\n    scrollContainers.delete(this.element);\n  }\n}\n\n/**\n * @param {TargetsParam} target\n * @return {ScrollContainer}\n */\nconst registerAndGetScrollContainer = target => {\n  const $el = /** @type {HTMLElement} */(target ? parseTargets(target)[0] || doc.body : doc.body);\n  let scrollContainer = scrollContainers.get($el);\n  if (!scrollContainer) {\n    scrollContainer = new ScrollContainer($el);\n    scrollContainers.set($el, scrollContainer);\n  }\n  return scrollContainer;\n};\n\n/**\n * @param {HTMLElement} $el\n * @param {Number|string} v\n * @param {Number} size\n * @param {Number} [under]\n * @param {Number} [over]\n * @return {Number}\n */\nconst convertValueToPx = ($el, v, size, under, over) => {\n  const clampMin = v === 'min';\n  const clampMax = v === 'max';\n  const value = v === 'top' || v === 'left' || v === 'start' || clampMin ? 0 :\n                v === 'bottom' || v === 'right' || v === 'end' || clampMax ? '100%' :\n                v === 'center' ? '50%' :\n                v;\n  const { n, u } = decomposeRawValue(value, decomposedOriginalValue);\n  let px = n;\n  if (u === '%') {\n    px = (n / 100) * size;\n  } else if (u) {\n    px = convertValueUnit($el, decomposedOriginalValue, 'px', true).n;\n  }\n  if (clampMax && under < 0) px += under;\n  if (clampMin && over > 0) px += over;\n  return px;\n};\n\n/**\n * @param {HTMLElement} $el\n * @param {ScrollThresholdValue} v\n * @param {Number} size\n * @param {Number} [under]\n * @param {Number} [over]\n * @return {Number}\n */\nconst parseBoundValue = ($el, v, size, under, over) => {\n  /** @type {Number} */\n  let value;\n  if (isStr(v)) {\n    const matchedOperator = relativeValuesExecRgx.exec(/** @type {String} */(v));\n    if (matchedOperator) {\n      const splitter = matchedOperator[0];\n      const operator = splitter[0];\n      const splitted = /** @type {String} */(v).split(splitter);\n      const clampMin = splitted[0] === 'min';\n      const clampMax = splitted[0] === 'max';\n      const valueAPx = convertValueToPx($el, splitted[0], size, under, over);\n      const valueBPx = convertValueToPx($el, splitted[1], size, under, over);\n      if (clampMin) {\n        const min = getRelativeValue(convertValueToPx($el, 'min', size), valueBPx, operator);\n        value = min < valueAPx ? valueAPx : min;\n      } else if (clampMax) {\n        const max = getRelativeValue(convertValueToPx($el, 'max', size), valueBPx, operator);\n        value = max > valueAPx ? valueAPx : max;\n      } else {\n        value = getRelativeValue(valueAPx, valueBPx, operator);\n      }\n    } else {\n      value = convertValueToPx($el, v, size, under, over);\n    }\n  } else {\n    value = /** @type {Number} */(v);\n  }\n  return round(value, 0);\n};\n\n/**\n * @param {JSAnimation} linked\n * @return {HTMLElement}\n */\nconst getAnimationDomTarget = linked => {\n  let $linkedTarget;\n  const linkedTargets = linked.targets;\n  for (let i = 0, l = linkedTargets.length; i < l; i++) {\n    const target = linkedTargets[i];\n    if (target[isDomSymbol]) {\n      $linkedTarget = /** @type {HTMLElement} */(target);\n      break;\n    }\n  }\n  return $linkedTarget;\n};\n\nlet scrollerIndex = 0;\n\nconst debugColors$1 = ['#FF4B4B','#FF971B','#FFC730','#F9F640','#7AFF5A','#18FF74','#17E09B','#3CFFEC','#05DBE9','#33B3F1','#638CF9','#C563FE','#FF4FCF','#F93F8A'];\n\n/**\n * @typedef {Object} ScrollThresholdParam\n * @property {ScrollThresholdValue} [target]\n * @property {ScrollThresholdValue} [container]\n */\n\n/**\n * @callback ScrollObserverAxisCallback\n * @param {ScrollObserver} self\n * @return {'x'|'y'}\n */\n\n/**\n * @callback ScrollThresholdCallback\n * @param {ScrollObserver} self\n * @return {ScrollThresholdValue|ScrollThresholdParam}\n */\n\n/**\n * @typedef {Object} ScrollObserverParams\n * @property {Number|String} [id]\n * @property {Boolean|Number|String|EasingParam} [sync]\n * @property {TargetsParam} [container]\n * @property {TargetsParam} [target]\n * @property {'x'|'y'|ScrollObserverAxisCallback|((observer: ScrollObserver) => 'x'|'y'|ScrollObserverAxisCallback)} [axis]\n * @property {ScrollThresholdValue|ScrollThresholdParam|ScrollThresholdCallback|((observer: ScrollObserver) => ScrollThresholdValue|ScrollThresholdParam|ScrollThresholdCallback)} [enter]\n * @property {ScrollThresholdValue|ScrollThresholdParam|ScrollThresholdCallback|((observer: ScrollObserver) => ScrollThresholdValue|ScrollThresholdParam|ScrollThresholdCallback)} [leave]\n * @property {Boolean|((observer: ScrollObserver) => Boolean)} [repeat]\n * @property {Boolean} [debug]\n * @property {Callback<ScrollObserver>} [onEnter]\n * @property {Callback<ScrollObserver>} [onLeave]\n * @property {Callback<ScrollObserver>} [onEnterForward]\n * @property {Callback<ScrollObserver>} [onLeaveForward]\n * @property {Callback<ScrollObserver>} [onEnterBackward]\n * @property {Callback<ScrollObserver>} [onLeaveBackward]\n * @property {Callback<ScrollObserver>} [onUpdate]\n * @property {Callback<ScrollObserver>} [onSyncComplete]\n */\n\nclass ScrollObserver {\n  /**\n   * @param {ScrollObserverParams} parameters\n   */\n  constructor(parameters = {}) {\n    if (scope.current) scope.current.register(this);\n    const syncMode = setValue(parameters.sync, 'play pause');\n    const ease = syncMode ? parseEasings(/** @type {EasingParam} */(syncMode)) : null;\n    const isLinear = syncMode && (syncMode === 'linear' || syncMode === none);\n    const isEase = syncMode && !(ease === none && !isLinear);\n    const isSmooth = syncMode && (isNum(syncMode) || syncMode === true || isLinear);\n    const isMethods = syncMode && (isStr(syncMode) && !isEase && !isSmooth);\n    const syncMethods = isMethods ? /** @type {String} */(syncMode).split(' ').map(\n      (/** @type {String} */m) => () => {\n        const linked = this.linked;\n        return linked && linked[m] ? linked[m]() : null;\n      }\n    ) : null;\n    const biDirSync = isMethods && syncMethods.length > 2;\n    /** @type {Number} */\n    this.index = scrollerIndex++;\n    /** @type {String|Number} */\n    this.id = !isUnd(parameters.id) ? parameters.id : this.index;\n    /** @type {ScrollContainer} */\n    this.container = registerAndGetScrollContainer(parameters.container);\n    /** @type {HTMLElement} */\n    this.target = null;\n    /** @type {Tickable|WAAPIAnimation} */\n    this.linked = null;\n    /** @type {Boolean} */\n    this.repeat = null;\n    /** @type {Boolean} */\n    this.horizontal = null;\n    /** @type {ScrollThresholdParam|ScrollThresholdValue|ScrollThresholdCallback} */\n    this.enter = null;\n    /** @type {ScrollThresholdParam|ScrollThresholdValue|ScrollThresholdCallback} */\n    this.leave = null;\n    /** @type {Boolean} */\n    this.sync = isEase || isSmooth || !!syncMethods;\n    /** @type {EasingFunction} */\n    this.syncEase = isEase ? ease : null;\n    /** @type {Number} */\n    this.syncSmooth = isSmooth ? syncMode === true || isLinear ? 1 : /** @type {Number} */(syncMode) : null;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncEnter = syncMethods && !biDirSync && syncMethods[0] ? syncMethods[0] : noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncLeave = syncMethods && !biDirSync && syncMethods[1] ? syncMethods[1] : noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncEnterForward = syncMethods && biDirSync && syncMethods[0] ? syncMethods[0] : noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncLeaveForward = syncMethods && biDirSync && syncMethods[1] ? syncMethods[1] : noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncEnterBackward = syncMethods && biDirSync && syncMethods[2] ? syncMethods[2] : noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncLeaveBackward = syncMethods && biDirSync && syncMethods[3] ? syncMethods[3] : noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onEnter = parameters.onEnter || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onLeave = parameters.onLeave || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onEnterForward = parameters.onEnterForward || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onLeaveForward = parameters.onLeaveForward || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onEnterBackward = parameters.onEnterBackward || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onLeaveBackward = parameters.onLeaveBackward || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onUpdate = parameters.onUpdate || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncComplete = parameters.onSyncComplete || noop;\n    /** @type {Boolean} */\n    this.reverted = false;\n    /** @type {Boolean} */\n    this.completed = false;\n    /** @type {Boolean} */\n    this.began = false;\n    /** @type {Boolean} */\n    this.isInView = false;\n    /** @type {Boolean} */\n    this.forceEnter = false;\n    /** @type {Boolean} */\n    this.hasEntered = false;\n    /** @type {Array.<Number>} */\n    this.offsets = [];\n    /** @type {Number} */\n    this.offset = 0;\n    /** @type {Number} */\n    this.offsetStart = 0;\n    /** @type {Number} */\n    this.offsetEnd = 0;\n    /** @type {Number} */\n    this.distance = 0;\n    /** @type {Number} */\n    this.prevProgress = 0;\n    /** @type {Array} */\n    this.thresholds = ['start', 'end', 'end', 'start'];\n    /** @type {[Number, Number, Number, Number]} */\n    this.coords = [0, 0, 0, 0];\n    /** @type {JSAnimation} */\n    this.debugStyles = null;\n    /** @type {HTMLElement} */\n    this.$debug = null;\n    /** @type {ScrollObserverParams} */\n    this._params = parameters;\n    /** @type {Boolean} */\n    this._debug = setValue(parameters.debug, false);\n    /** @type {ScrollObserver} */\n    this._next = null;\n    /** @type {ScrollObserver} */\n    this._prev = null;\n    addChild(this.container, this);\n    // Wait for the next frame to add to the container in order to handle calls to link()\n    sync(() => {\n      if (this.reverted) return;\n      if (!this.target) {\n        const target = /** @type {HTMLElement} */(parseTargets(parameters.target)[0]);\n        this.target = target || doc.body;\n        this.refresh();\n      }\n      if (this._debug) this.debug();\n    });\n  }\n\n  /**\n   * @param {Tickable|WAAPIAnimation} linked\n   */\n  link(linked) {\n    if (linked) {\n      // Make sure to pause the linked object in case it's added later\n      linked.pause();\n      this.linked = linked;\n      // Try to use a target of the linked object if no target parameters specified\n      if (!this._params.target) {\n        /** @type {HTMLElement} */\n        let $linkedTarget;\n        if (!isUnd(/** @type {JSAnimation} */(linked).targets)) {\n          $linkedTarget = getAnimationDomTarget(/** @type {JSAnimation} */(linked));\n        } else {\n          forEachChildren(/** @type {Timeline} */(linked), (/** @type {JSAnimation} */child) => {\n            if (child.targets && !$linkedTarget) {\n              $linkedTarget = getAnimationDomTarget(/** @type {JSAnimation} */(child));\n            }\n          });\n        }\n        // Fallback to body if no target found\n        this.target = $linkedTarget || doc.body;\n        this.refresh();\n      }\n    }\n    return this;\n  }\n\n  get velocity() {\n    return this.container.velocity;\n  }\n\n  get backward() {\n    return this.horizontal ? this.container.backwardX : this.container.backwardY;\n  }\n\n  get scroll() {\n    return this.horizontal ? this.container.scrollX : this.container.scrollY;\n  }\n\n  get progress() {\n    const p = (this.scroll - this.offsetStart) / this.distance;\n    return p === Infinity || isNaN(p) ? 0 : round(clamp(p, 0, 1), 6);\n  }\n\n  refresh() {\n    this.reverted = false;\n    const params = this._params;\n    this.repeat = setValue(parseScrollObserverFunctionParameter(params.repeat, this), true);\n    this.horizontal = setValue(parseScrollObserverFunctionParameter(params.axis, this), 'y') === 'x';\n    this.enter = setValue(parseScrollObserverFunctionParameter(params.enter, this), 'end start');\n    this.leave = setValue(parseScrollObserverFunctionParameter(params.leave, this), 'start end');\n    this.updateBounds();\n    this.handleScroll();\n    return this;\n  }\n\n  removeDebug() {\n    if (this.$debug) {\n      this.$debug.parentNode.removeChild(this.$debug);\n      this.$debug = null;\n    }\n    if (this.debugStyles) {\n      this.debugStyles.revert();\n      this.$debug = null;\n    }\n    return this;\n  }\n\n  debug() {\n    this.removeDebug();\n    const container = this.container;\n    const isHori = this.horizontal;\n    const $existingDebug = container.element.querySelector(':scope > .animejs-onscroll-debug');\n    const $debug = doc.createElement('div');\n    const $thresholds = doc.createElement('div');\n    const $triggers = doc.createElement('div');\n    const color = debugColors$1[this.index % debugColors$1.length];\n    const useWin = container.useWin;\n    const containerWidth = useWin ? container.winWidth : container.width;\n    const containerHeight = useWin ? container.winHeight : container.height;\n    const scrollWidth = container.scrollWidth;\n    const scrollHeight = container.scrollHeight;\n    const size = this.container.width > 360 ? 320 : 260;\n    const offLeft = isHori ? 0 : 10;\n    const offTop = isHori ? 10 : 0;\n    const half = isHori ? 24 : size / 2;\n    const labelHeight = isHori ? half : 15;\n    const labelWidth = isHori ? 60 : half;\n    const labelSize = isHori ? labelWidth : labelHeight;\n    const repeat = isHori ? 'repeat-x' : 'repeat-y';\n    /**\n     * @param {Number} v\n     * @return {String}\n     */\n    const gradientOffset = v => isHori ? '0px '+(v)+'px' : (v)+'px'+' 2px';\n    /**\n     * @param {String} c\n     * @return {String}\n     */\n    const lineCSS = (c) => `linear-gradient(${isHori ? 90 : 0}deg, ${c} 2px, transparent 1px)`;\n    /**\n     * @param {String} p\n     * @param {Number} l\n     * @param {Number} t\n     * @param {Number} w\n     * @param {Number} h\n     * @return {String}\n     */\n    const baseCSS = (p, l, t, w, h) => `position:${p};left:${l}px;top:${t}px;width:${w}px;height:${h}px;`;\n    $debug.style.cssText = `${baseCSS('absolute', offLeft, offTop, isHori ? scrollWidth : size, isHori ? size : scrollHeight)}\n      pointer-events: none;\n      z-index: ${this.container.zIndex++};\n      display: flex;\n      flex-direction: ${isHori ? 'column' : 'row'};\n      filter: drop-shadow(0px 1px 0px rgba(0,0,0,.75));\n    `;\n    $thresholds.style.cssText = `${baseCSS('sticky', 0, 0, isHori ? containerWidth : half, isHori ? half : containerHeight)}`;\n    if (!$existingDebug) {\n      $thresholds.style.cssText += `background:\n        ${lineCSS('#FFFF')}${gradientOffset(half-10)} / ${isHori ? '100px 100px' : '100px 100px'} ${repeat},\n        ${lineCSS('#FFF8')}${gradientOffset(half-10)} / ${isHori ? '10px 10px' : '10px 10px'} ${repeat};\n      `;\n    }\n    $triggers.style.cssText = `${baseCSS('relative', 0, 0, isHori ? scrollWidth : half, isHori ? half : scrollHeight)}`;\n    if (!$existingDebug) {\n      $triggers.style.cssText += `background:\n        ${lineCSS('#FFFF')}${gradientOffset(0)} / ${isHori ? '100px 10px' : '10px 100px'} ${repeat},\n        ${lineCSS('#FFF8')}${gradientOffset(0)} / ${isHori ? '10px 0px' : '0px 10px'} ${repeat};\n      `;\n    }\n    const labels = [' enter: ', ' leave: '];\n    this.coords.forEach((v, i) => {\n      const isView = i > 1;\n      const value = (isView ? 0 : this.offset) + v;\n      const isTail = i % 2;\n      const isFirst = value < labelSize;\n      const isOver = value > (isView ? isHori ? containerWidth : containerHeight : isHori ? scrollWidth : scrollHeight) - labelSize;\n      const isFlip = (isView ? isTail && !isFirst : !isTail && !isFirst) || isOver;\n      const $label = doc.createElement('div');\n      const $text = doc.createElement('div');\n      const dirProp = isHori ? isFlip ? 'right' : 'left' : isFlip ? 'bottom' : 'top';\n      const flipOffset = isFlip ? (isHori ? labelWidth : labelHeight) + (!isView ? isHori ? -1 : -2 : isHori ? -1 : isOver ? 0 : -2) : !isView ? isHori ? 1 : 0 : isHori ? 1 : 0;\n      // $text.innerHTML = `${!isView ? '' : labels[isTail] + ' '}${this.id}: ${this.thresholds[i]} ${isView ? '' : labels[isTail]}`;\n      $text.innerHTML = `${this.id}${labels[isTail]}${this.thresholds[i]}`;\n      $label.style.cssText = `${baseCSS('absolute', 0, 0, labelWidth, labelHeight)}\n        display: flex;\n        flex-direction: ${isHori ? 'column' : 'row'};\n        justify-content: flex-${isView ? 'start' : 'end'};\n        align-items: flex-${isFlip ? 'end' : 'start'};\n        border-${dirProp}: 2px ${isTail ? 'solid' : 'solid'} ${color};\n      `;\n      $text.style.cssText = `\n        overflow: hidden;\n        max-width: ${(size / 2) - 10}px;\n        height: ${labelHeight};\n        margin-${isHori ? isFlip ? 'right' : 'left' : isFlip ? 'bottom' : 'top'}: -2px;\n        padding: 1px;\n        font-family: ui-monospace, monospace;\n        font-size: 10px;\n        letter-spacing: -.025em;\n        line-height: 9px;\n        font-weight: 600;\n        text-align: ${isHori && isFlip || !isHori && !isView ? 'right' : 'left'};\n        white-space: pre;\n        text-overflow: ellipsis;\n        color: ${isTail ? color : 'rgba(0,0,0,.75)'};\n        background-color: ${isTail ? 'rgba(0,0,0,.65)' : color};\n        border: 2px solid ${isTail ? color : 'transparent'};\n        border-${isHori ? isFlip ? 'top-left' : 'top-right' : isFlip ? 'top-left' : 'bottom-left'}-radius: 5px;\n        border-${isHori ? isFlip ? 'bottom-left' : 'bottom-right' : isFlip ? 'top-right' : 'bottom-right'}-radius: 5px;\n      `;\n      $label.appendChild($text);\n      let position = value - flipOffset + (isHori ? 1 : 0);\n      $label.style[isHori ? 'left' : 'top'] = `${position}px`;\n      // $label.style[isHori ? 'left' : 'top'] = value - flipOffset + (!isFlip && isFirst && !isView ? 1 : isFlip ? 0 : -2) + 'px';\n      (isView ? $thresholds : $triggers).appendChild($label);\n    });\n\n    $debug.appendChild($thresholds);\n    $debug.appendChild($triggers);\n    container.element.appendChild($debug);\n\n    if (!$existingDebug) $debug.classList.add('animejs-onscroll-debug');\n    this.$debug = $debug;\n    const containerPosition = getTargetValue(container.element, 'position');\n    if (containerPosition === 'static') {\n      this.debugStyles = setTargetValues(container.element, { position: 'relative '});\n    }\n\n  }\n\n  updateBounds() {\n    if (this._debug) {\n      this.removeDebug();\n    }\n    let stickys;\n    const $target = this.target;\n    const container = this.container;\n    const isHori = this.horizontal;\n    const linked = this.linked;\n    let linkedTime;\n    let $el = $target;\n    let offsetX = 0;\n    let offsetY = 0;\n    /** @type {Element} */\n    let $offsetParent = $el;\n    if (linked) {\n      linkedTime = linked.currentTime;\n      linked.seek(0, true);\n    }\n    const isContainerStatic = getTargetValue(container.element, 'position') === 'static' ? setTargetValues(container.element, { position: 'relative '}) : false;\n    while ($el && $el !== container.element && $el !== doc.body) {\n      const isSticky = getTargetValue($el, 'position') === 'sticky' ?\n                       setTargetValues($el, { position: 'static' }) :\n                       false;\n      if ($el === $offsetParent) {\n        offsetX += $el.offsetLeft || 0;\n        offsetY += $el.offsetTop || 0;\n        $offsetParent = $el.offsetParent;\n      }\n      $el = /** @type {HTMLElement} */($el.parentElement);\n      if (isSticky) {\n        if (!stickys) stickys = [];\n        stickys.push(isSticky);\n      }\n    }\n    if (isContainerStatic) isContainerStatic.revert();\n    const offset = isHori ? offsetX : offsetY;\n    const targetSize = isHori ? $target.offsetWidth : $target.offsetHeight;\n    const containerSize = isHori ? container.width : container.height;\n    const scrollSize = isHori ? container.scrollWidth : container.scrollHeight;\n    const maxScroll = scrollSize - containerSize;\n    const enter = this.enter;\n    const leave = this.leave;\n\n    /** @type {ScrollThresholdValue} */\n    let enterTarget = 'start';\n    /** @type {ScrollThresholdValue} */\n    let leaveTarget = 'end';\n    /** @type {ScrollThresholdValue} */\n    let enterContainer = 'end';\n    /** @type {ScrollThresholdValue} */\n    let leaveContainer = 'start';\n\n    if (isStr(enter)) {\n      const splitted = /** @type {String} */(enter).split(' ');\n      enterContainer = splitted[0];\n      enterTarget = splitted.length > 1 ? splitted[1] : enterTarget;\n    } else if (isObj(enter)) {\n      const e = /** @type {ScrollThresholdParam} */(enter);\n      if (!isUnd(e.container)) enterContainer = e.container;\n      if (!isUnd(e.target)) enterTarget = e.target;\n    } else if (isNum(enter)) {\n      enterContainer = /** @type {Number} */(enter);\n    }\n\n    if (isStr(leave)) {\n      const splitted = /** @type {String} */(leave).split(' ');\n      leaveContainer = splitted[0];\n      leaveTarget = splitted.length > 1 ? splitted[1] : leaveTarget;\n    } else if (isObj(leave)) {\n      const t = /** @type {ScrollThresholdParam} */(leave);\n      if (!isUnd(t.container)) leaveContainer = t.container;\n      if (!isUnd(t.target)) leaveTarget = t.target;\n    } else if (isNum(leave)) {\n      leaveContainer = /** @type {Number} */(leave);\n    }\n\n    const parsedEnterTarget = parseBoundValue($target, enterTarget, targetSize);\n    const parsedLeaveTarget = parseBoundValue($target, leaveTarget, targetSize);\n    const under = (parsedEnterTarget + offset) - containerSize;\n    const over = (parsedLeaveTarget + offset) - maxScroll;\n    const parsedEnterContainer = parseBoundValue($target, enterContainer, containerSize, under, over);\n    const parsedLeaveContainer = parseBoundValue($target, leaveContainer, containerSize, under, over);\n    const offsetStart = parsedEnterTarget + offset - parsedEnterContainer;\n    const offsetEnd = parsedLeaveTarget + offset - parsedLeaveContainer;\n    const scrollDelta = offsetEnd - offsetStart;\n    this.offsets[0] = offsetX;\n    this.offsets[1] = offsetY;\n    this.offset = offset;\n    this.offsetStart = offsetStart;\n    this.offsetEnd = offsetEnd;\n    this.distance = scrollDelta <= 0 ? 0 : scrollDelta;\n    this.thresholds = [enterTarget, leaveTarget, enterContainer, leaveContainer];\n    this.coords = [parsedEnterTarget, parsedLeaveTarget, parsedEnterContainer, parsedLeaveContainer];\n    if (stickys) {\n      stickys.forEach(sticky => sticky.revert());\n    }\n    if (linked) {\n      linked.seek(linkedTime, true);\n    }\n    if (this._debug) {\n      this.debug();\n    }\n  }\n\n  handleScroll() {\n    const linked = this.linked;\n    const sync = this.sync;\n    const syncEase = this.syncEase;\n    const syncSmooth = this.syncSmooth;\n    const shouldSeek = linked && (syncEase || syncSmooth);\n    const isHori = this.horizontal;\n    const container = this.container;\n    const scroll = this.scroll;\n    const isBefore = scroll <= this.offsetStart;\n    const isAfter = scroll >= this.offsetEnd;\n    const isInView = !isBefore && !isAfter;\n    const isOnTheEdge = scroll === this.offsetStart || scroll === this.offsetEnd;\n    const forceEnter = !this.hasEntered && isOnTheEdge;\n    const $debug = this._debug && this.$debug;\n    let hasUpdated = false;\n    let syncCompleted = false;\n    let p = this.progress;\n\n    if (isBefore && this.began) {\n      this.began = false;\n    }\n\n    if (p > 0 && !this.began) {\n      this.began = true;\n    }\n\n    if (shouldSeek) {\n      const lp = linked.progress;\n      if (syncSmooth && isNum(syncSmooth)) {\n        if (/** @type {Number} */(syncSmooth) < 1) {\n          const step = 0.0001;\n          const snap = lp < p && p === 1 ? step : lp > p && !p ? -1e-4 : 0;\n          p = round(lerp(lp, p, interpolate(.01, .2, /** @type {Number} */(syncSmooth)), false) + snap, 6);\n        }\n      } else if (syncEase) {\n        p = syncEase(p);\n      }\n      hasUpdated = p !== this.prevProgress;\n      syncCompleted = lp === 1;\n      if (hasUpdated && !syncCompleted && (syncSmooth && lp)) {\n        container.wakeTicker.restart();\n      }\n    }\n\n    if ($debug) {\n      const sticky = isHori ? container.scrollY : container.scrollX;\n      $debug.style[isHori ? 'top' : 'left'] = sticky + 10 + 'px';\n    }\n\n    // Trigger enter callbacks if already in view or when entering the view\n    if ((isInView && !this.isInView) || (forceEnter && !this.forceEnter && !this.hasEntered)) {\n      if (isInView) this.isInView = true;\n      if (!this.forceEnter || !this.hasEntered) {\n        if ($debug && isInView) $debug.style.zIndex = `${this.container.zIndex++}`;\n        this.onSyncEnter(this);\n        this.onEnter(this);\n        if (this.backward) {\n          this.onSyncEnterBackward(this);\n          this.onEnterBackward(this);\n        } else {\n          this.onSyncEnterForward(this);\n          this.onEnterForward(this);\n        }\n        this.hasEntered = true;\n        if (forceEnter) this.forceEnter = true;\n      } else if (isInView) {\n        this.forceEnter = false;\n      }\n    }\n\n    if (isInView || !isInView && this.isInView) {\n      hasUpdated = true;\n    }\n\n    if (hasUpdated) {\n      if (shouldSeek) linked.seek(linked.duration * p);\n      this.onUpdate(this);\n    }\n\n    if (!isInView && this.isInView) {\n      this.isInView = false;\n      this.onSyncLeave(this);\n      this.onLeave(this);\n      if (this.backward) {\n        this.onSyncLeaveBackward(this);\n        this.onLeaveBackward(this);\n      } else {\n        this.onSyncLeaveForward(this);\n        this.onLeaveForward(this);\n      }\n      if (sync && !syncSmooth) {\n        syncCompleted = true;\n      }\n    }\n\n    if (p >= 1 && this.began && !this.completed && (sync && syncCompleted || !sync)) {\n      if (sync) {\n        this.onSyncComplete(this);\n      }\n      this.completed = true;\n      if ((!this.repeat && !linked) || (!this.repeat && linked && linked.completed)) {\n        this.revert();\n      }\n    }\n\n    if (p < 1 && this.completed) {\n      this.completed = false;\n    }\n\n    this.prevProgress = p;\n  }\n\n  revert() {\n    if (this.reverted) return;\n    const container = this.container;\n    removeChild(container, this);\n    if (!container._head) {\n      container.revert();\n    }\n    if (this._debug) {\n      this.removeDebug();\n    }\n    this.reverted = true;\n    return this;\n  }\n\n}\n\n/**\n * @param {ScrollObserverParams} [parameters={}]\n * @return {ScrollObserver}\n */\nconst onScroll = (parameters = {}) => new ScrollObserver(parameters);\n\n\n\n\nconst segmenter = !isUnd(Intl) && Intl.Segmenter;\nconst valueRgx = /\\{value\\}/g;\nconst indexRgx = /\\{i\\}/g;\nconst whiteSpaceGroupRgx = /(\\s+)/;\nconst whiteSpaceRgx = /^\\s+$/;\nconst lineType = 'line';\nconst wordType = 'word';\nconst charType = 'char';\nconst dataLine = `data-line`;\n\n/**\n * @typedef {Object} Segment\n * @property {String} segment\n * @property {Boolean} [isWordLike]\n */\n\n/**\n * @typedef {Object} Segmenter\n * @property {function(String): Iterable<Segment>} segment\n */\n\n/** @type {Segmenter} */\nlet wordSegmenter = null;\n/** @type {Segmenter} */\nlet graphemeSegmenter = null;\nlet $splitTemplate = null;\n\n/**\n * @param  {Segment} seg\n * @return {Boolean}\n */\nconst isSegmentWordLike = seg => {\n  return seg.isWordLike ||\n         seg.segment === ' ' || // Consider spaces as words first, then handle them diffrently later\n         isNum(+seg.segment); // Safari doesn't considers numbers as words\n};\n\n/**\n * @param {HTMLElement} $el\n */\nconst setAriaHidden = $el => $el.setAttribute('aria-hidden', 'true');\n\n/**\n * @param {DOMTarget} $el\n * @param {String} type\n * @return {Array<HTMLElement>}\n */\nconst getAllTopLevelElements = ($el, type) => [.../** @type {*} */($el.querySelectorAll(`[data-${type}]:not([data-${type}] [data-${type}])`))];\n\nconst debugColors = { line: '#00D672', word: '#FF4B4B', char: '#5A87FF' };\n\n/**\n * @param {HTMLElement} $el\n */\nconst filterEmptyElements = $el => {\n  if (!$el.childElementCount && !$el.textContent.trim()) {\n    const $parent = $el.parentElement;\n    $el.remove();\n    if ($parent) filterEmptyElements($parent);\n  }\n};\n\n/**\n * @param {HTMLElement} $el\n * @param {Number} lineIndex\n * @param {Set<HTMLElement>} bin\n * @returns {Set<HTMLElement>}\n */\nconst filterLineElements = ($el, lineIndex, bin) => {\n  const dataLineAttr = $el.getAttribute(dataLine);\n  if (dataLineAttr !== null && +dataLineAttr !== lineIndex || $el.tagName === 'BR') bin.add($el);\n  let i = $el.childElementCount;\n  while (i--) filterLineElements(/** @type {HTMLElement} */($el.children[i]), lineIndex, bin);\n  return bin;\n};\n\n/**\n * @param  {'line'|'word'|'char'} type\n * @param  {splitTemplateParams} params\n * @return {String}\n */\nconst generateTemplate = (type, params = {}) => {\n  let template = ``;\n  const classString = isStr(params.class) ? ` class=\"${params.class}\"` : '';\n  const cloneType = setValue(params.clone, false);\n  const wrapType = setValue(params.wrap, false);\n  const overflow = wrapType ? wrapType === true ? 'clip' : wrapType : cloneType ? 'clip' : false;\n  if (wrapType) template += `<span${overflow ? ` style=\"overflow:${overflow};\"` : ''}>`;\n  template += `<span${classString}${cloneType ? ` style=\"position:relative;\"` : ''} data-${type}=\"{i}\">`;\n  if (cloneType) {\n    const left = cloneType === 'left' ? '-100%' : cloneType === 'right' ? '100%' : '0';\n    const top = cloneType === 'top' ? '-100%' : cloneType === 'bottom' ? '100%' : '0';\n    template += `<span>{value}</span>`;\n    template += `<span inert style=\"position:absolute;top:${top};left:${left};white-space:nowrap;\">{value}</span>`;\n  } else {\n    template += `{value}`;\n  }\n  template += `</span>`;\n  if (wrapType) template += `</span>`;\n  return template;\n};\n\n/**\n * @param  {String|SplitFunctionValue} htmlTemplate\n * @param  {Array<HTMLElement>} store\n * @param  {Node|HTMLElement} node\n * @param  {DocumentFragment} $parentFragment\n * @param  {'line'|'word'|'char'} type\n * @param  {Boolean} debug\n * @param  {Number} lineIndex\n * @param  {Number} [wordIndex]\n * @param  {Number} [charIndex]\n * @return {HTMLElement}\n */\nconst processHTMLTemplate = (htmlTemplate, store, node, $parentFragment, type, debug, lineIndex, wordIndex, charIndex) => {\n  const isLine = type === lineType;\n  const isChar = type === charType;\n  const className = `_${type}_`;\n  const template = isFnc(htmlTemplate) ? htmlTemplate(node) : htmlTemplate;\n  const displayStyle = isLine ? 'block' : 'inline-block';\n  $splitTemplate.innerHTML = template\n    .replace(valueRgx, `<i class=\"${className}\"></i>`)\n    .replace(indexRgx, `${isChar ? charIndex : isLine ? lineIndex : wordIndex}`);\n  const $content = $splitTemplate.content;\n  const $highestParent = /** @type {HTMLElement} */($content.firstElementChild);\n  const $split = /** @type {HTMLElement} */($content.querySelector(`[data-${type}]`)) || $highestParent;\n  const $replacables = /** @type {NodeListOf<HTMLElement>} */($content.querySelectorAll(`i.${className}`));\n  const replacablesLength = $replacables.length;\n  if (replacablesLength) {\n    $highestParent.style.display = displayStyle;\n    $split.style.display = displayStyle;\n    $split.setAttribute(dataLine, `${lineIndex}`);\n    if (!isLine) {\n      $split.setAttribute('data-word', `${wordIndex}`);\n      if (isChar) $split.setAttribute('data-char', `${charIndex}`);\n    }\n    let i = replacablesLength;\n    while (i--) {\n      const $replace = $replacables[i];\n      const $closestParent = $replace.parentElement;\n      $closestParent.style.display = displayStyle;\n      if (isLine) {\n        $closestParent.innerHTML = /** @type {HTMLElement} */(node).innerHTML;\n      } else {\n        $closestParent.replaceChild(node.cloneNode(true), $replace);\n      }\n    }\n    store.push($split);\n    $parentFragment.appendChild($content);\n  } else {\n    console.warn(`The expression \"{value}\" is missing from the provided template.`);\n  }\n  if (debug) $highestParent.style.outline = `1px dotted ${debugColors[type]}`;\n  return $highestParent;\n};\n\n/**\n * A class that splits text into words and wraps them in span elements while preserving the original HTML structure.\n * @class\n */\nclass TextSplitter {\n  /**\n   * @param  {HTMLElement|NodeList|String|Array<HTMLElement>} target\n   * @param  {TextSplitterParams} [parameters]\n   */\n  constructor(target, parameters = {}) {\n    // Only init segmenters when needed\n    if (!wordSegmenter) wordSegmenter = segmenter ? new segmenter([], { granularity: wordType }) : {\n      segment: (text) => {\n        const segments = [];\n        const words = text.split(whiteSpaceGroupRgx);\n        for (let i = 0, l = words.length; i < l; i++) {\n          const segment = words[i];\n          segments.push({\n            segment,\n            isWordLike: !whiteSpaceRgx.test(segment), // Consider non-whitespace as word-like\n          });\n        }\n        return segments;\n      }\n    };\n    if (!graphemeSegmenter) graphemeSegmenter = segmenter ? new segmenter([], { granularity: 'grapheme' }) : {\n      segment: text => [...text].map(char => ({ segment: char }))\n    };\n    if (!$splitTemplate && isBrowser) $splitTemplate = doc.createElement('template');\n    if (scope.current) scope.current.register(this);\n    const { words, chars, lines, accessible, includeSpaces, debug } = parameters;\n    const $target = /** @type {HTMLElement} */((target = isArr(target) ? target[0] : target) && /** @type {Node} */(target).nodeType ? target : (getNodeList(target) || [])[0]);\n    const lineParams = lines === true ? {} : lines;\n    const wordParams = words === true || isUnd(words) ? {} : words;\n    const charParams = chars === true ? {} : chars;\n    this.debug = setValue(debug, false);\n    this.includeSpaces = setValue(includeSpaces, false);\n    this.accessible = setValue(accessible, true);\n    this.linesOnly = lineParams && (!wordParams && !charParams);\n    /** @type {String|false|SplitFunctionValue} */\n    this.lineTemplate = isObj(lineParams) ? generateTemplate(lineType, /** @type {splitTemplateParams} */(lineParams)) : lineParams;\n    /** @type {String|false|SplitFunctionValue} */\n    this.wordTemplate = isObj(wordParams) || this.linesOnly ? generateTemplate(wordType, /** @type {splitTemplateParams} */(wordParams)) : wordParams;\n    /** @type {String|false|SplitFunctionValue} */\n    this.charTemplate = isObj(charParams) ? generateTemplate(charType, /** @type {splitTemplateParams} */(charParams)) : charParams;\n    this.$target = $target;\n    this.html = $target && $target.innerHTML;\n    this.lines = [];\n    this.words = [];\n    this.chars = [];\n    this.effects = [];\n    this.effectsCleanups = [];\n    this.cache = null;\n    this.ready = false;\n    this.width = 0;\n    this.resizeTimeout = null;\n    const handleSplit = () => this.html && (lineParams || wordParams || charParams) && this.split();\n    // Make sure this is declared before calling handleSplit() in case revert() is called inside an effect callback\n    this.resizeObserver = new ResizeObserver(() => {\n      // Use a setTimeout instead of a Timer for better tree shaking\n      clearTimeout(this.resizeTimeout);\n      this.resizeTimeout = setTimeout(() => {\n        const currentWidth = /** @type {HTMLElement} */($target).offsetWidth;\n        if (currentWidth === this.width) return;\n        this.width = currentWidth;\n        handleSplit();\n      }, 150);\n    });\n    // Only declare the font ready promise when splitting by lines and not alreay split\n    if (this.lineTemplate && !this.ready) {\n      doc.fonts.ready.then(handleSplit);\n    } else {\n      handleSplit();\n    }\n    $target ? this.resizeObserver.observe($target) : console.warn('No Text Splitter target found.');\n  }\n\n  /**\n   * @param  {(...args: any[]) => Tickable | (() => void)} effect\n   * @return this\n   */\n  addEffect(effect) {\n    if (!isFnc(effect)) return console.warn('Effect must return a function.');\n    const refreshableEffect = createRefreshable(effect);\n    this.effects.push(refreshableEffect);\n    if (this.ready) this.effectsCleanups[this.effects.length - 1] = refreshableEffect(this);\n    return this;\n  }\n\n  revert() {\n    clearTimeout(this.resizeTimeout);\n    this.lines.length = this.words.length = this.chars.length = 0;\n    this.resizeObserver.disconnect();\n    // Make sure to revert the effects after disconnecting the resizeObserver to avoid triggering it in the process\n    this.effectsCleanups.forEach(cleanup => isFnc(cleanup) ? cleanup(this) : cleanup.revert && cleanup.revert());\n    this.$target.innerHTML = this.html;\n    return this;\n  }\n\n  /**\n   * Recursively processes a node and its children\n   * @param {Node} node\n   */\n  splitNode(node) {\n    const wordTemplate = this.wordTemplate;\n    const charTemplate = this.charTemplate;\n    const includeSpaces = this.includeSpaces;\n    const debug = this.debug;\n    const nodeType = node.nodeType;\n    if (nodeType === 3) {\n      const nodeText = node.nodeValue;\n      // If the nodeText is only whitespace, leave it as is\n      if (nodeText.trim()) {\n        const tempWords = [];\n        const words = this.words;\n        const chars = this.chars;\n        const wordSegments = wordSegmenter.segment(nodeText);\n        const $wordsFragment = doc.createDocumentFragment();\n        let prevSeg = null;\n        for (const wordSegment of wordSegments) {\n          const segment = wordSegment.segment;\n          const isWordLike = isSegmentWordLike(wordSegment);\n          // Determine if this segment should be a new word, first segment always becomes a new word\n          if (!prevSeg || (isWordLike && (prevSeg && (isSegmentWordLike(prevSeg))))) {\n            tempWords.push(segment);\n          } else {\n            // Only concatenate if both current and previous are non-word-like and don't contain spaces\n            const lastWordIndex = tempWords.length - 1;\n            const lastWord = tempWords[lastWordIndex];\n            if (!lastWord.includes(' ') && !segment.includes(' ')) {\n              tempWords[lastWordIndex] += segment;\n            } else {\n              tempWords.push(segment);\n            }\n          }\n          prevSeg = wordSegment;\n        }\n\n        for (let i = 0, l = tempWords.length; i < l; i++) {\n          const word = tempWords[i];\n          if (!word.trim()) {\n            // Preserve whitespace only if includeSpaces is false and if the current space is not the first node\n            if (i && includeSpaces) continue;\n            $wordsFragment.appendChild(doc.createTextNode(word));\n          } else {\n            const nextWord = tempWords[i + 1];\n            const hasWordFollowingSpace = includeSpaces && nextWord && !nextWord.trim();\n            const wordToProcess = word;\n            const charSegments = charTemplate ? graphemeSegmenter.segment(wordToProcess) : null;\n            const $charsFragment = charTemplate ? doc.createDocumentFragment() : doc.createTextNode(hasWordFollowingSpace ? word + '\\xa0' : word);\n            if (charTemplate) {\n              const charSegmentsArray = [...charSegments];\n              for (let j = 0, jl = charSegmentsArray.length; j < jl; j++) {\n                const charSegment = charSegmentsArray[j];\n                const isLastChar = j === jl - 1;\n                // If this is the last character and includeSpaces is true with a following space, append the space\n                const charText = isLastChar && hasWordFollowingSpace ? charSegment.segment + '\\xa0' : charSegment.segment;\n                const $charNode = doc.createTextNode(charText);\n                processHTMLTemplate(charTemplate, chars, $charNode, /** @type {DocumentFragment} */($charsFragment), charType, debug, -1, words.length, chars.length);\n              }\n            }\n            if (wordTemplate) {\n              processHTMLTemplate(wordTemplate, words, $charsFragment, $wordsFragment, wordType, debug, -1, words.length, chars.length);\n              // Chars elements must be re-parsed in the split() method if both words and chars are parsed\n            } else if (charTemplate) {\n              $wordsFragment.appendChild($charsFragment);\n            } else {\n              $wordsFragment.appendChild(doc.createTextNode(word));\n            }\n            // Skip the next iteration if we included a space\n            if (hasWordFollowingSpace) i++;\n          }\n        }\n        node.parentNode.replaceChild($wordsFragment, node);\n      }\n    } else if (nodeType === 1) {\n      // Converting to an array is necessary to work around childNodes pottential mutation\n      const childNodes = /** @type {Array<Node>} */([.../** @type {*} */(node.childNodes)]);\n      for (let i = 0, l = childNodes.length; i < l; i++) this.splitNode(childNodes[i]);\n    }\n  }\n\n  /**\n   * @param {Boolean} clearCache\n   * @return {this}\n   */\n  split(clearCache = false) {\n    const $el = this.$target;\n    const isCached = !!this.cache && !clearCache;\n    const lineTemplate = this.lineTemplate;\n    const wordTemplate = this.wordTemplate;\n    const charTemplate = this.charTemplate;\n    const fontsReady = doc.fonts.status !== 'loading';\n    const canSplitLines = lineTemplate && fontsReady;\n    this.ready = !lineTemplate || fontsReady;\n    if (canSplitLines || clearCache) {\n      // No need to revert effects animations here since it's already taken care by the refreshable\n      this.effectsCleanups.forEach(cleanup => isFnc(cleanup) && cleanup(this));\n    }\n    if (!isCached) {\n      if (clearCache) {\n        $el.innerHTML = this.html;\n        this.words.length = this.chars.length = 0;\n      }\n      this.splitNode($el);\n      this.cache = $el.innerHTML;\n    }\n    if (canSplitLines) {\n      if (isCached) $el.innerHTML = this.cache;\n      this.lines.length = 0;\n      if (wordTemplate) this.words = getAllTopLevelElements($el, wordType);\n    }\n    // Always reparse characters after a line reset or if both words and chars are activated\n    if (charTemplate && (canSplitLines || wordTemplate)) {\n      this.chars = getAllTopLevelElements($el, charType);\n    }\n    // Words are used when lines only and prioritized over chars\n    const elementsArray = this.words.length ? this.words : this.chars;\n    let y, linesCount = 0;\n    for (let i = 0, l = elementsArray.length; i < l; i++) {\n      const $el = elementsArray[i];\n      const { top, height } = $el.getBoundingClientRect();\n      if (y && top - y > height * .5) linesCount++;\n      $el.setAttribute(dataLine, `${linesCount}`);\n      const nested = $el.querySelectorAll(`[${dataLine}]`);\n      let c = nested.length;\n      while (c--) nested[c].setAttribute(dataLine, `${linesCount}`);\n      y = top;\n    }\n    if (canSplitLines) {\n      const linesFragment = doc.createDocumentFragment();\n      const parents = new Set();\n      const clones = [];\n      for (let lineIndex = 0; lineIndex < linesCount + 1; lineIndex++) {\n        const $clone = /** @type {HTMLElement} */($el.cloneNode(true));\n        filterLineElements($clone, lineIndex, new Set()).forEach($el => {\n          const $parent = $el.parentElement;\n          if ($parent) parents.add($parent);\n          $el.remove();\n        });\n        clones.push($clone);\n      }\n      parents.forEach(filterEmptyElements);\n      for (let cloneIndex = 0, clonesLength = clones.length; cloneIndex < clonesLength; cloneIndex++) {\n        processHTMLTemplate(lineTemplate, this.lines, clones[cloneIndex], linesFragment, lineType, this.debug, cloneIndex);\n      }\n      $el.innerHTML = '';\n      $el.appendChild(linesFragment);\n      if (wordTemplate) this.words = getAllTopLevelElements($el, wordType);\n      if (charTemplate) this.chars = getAllTopLevelElements($el, charType);\n    }\n    // Remove the word wrappers and clear the words array if lines split only\n    if (this.linesOnly) {\n      const words = this.words;\n      let w = words.length;\n      while (w--) {\n        const $word = words[w];\n        $word.replaceWith($word.textContent);\n      }\n      words.length = 0;\n    }\n    if (this.accessible && (canSplitLines || !isCached)) {\n      const $accessible = doc.createElement('span');\n      // Make the accessible element visually-hidden (https://www.scottohara.me/blog/2017/04/14/inclusively-hidden.html)\n      $accessible.style.cssText = `position:absolute;overflow:hidden;clip:rect(0 0 0 0);clip-path:inset(50%);width:1px;height:1px;white-space:nowrap;`;\n      // $accessible.setAttribute('tabindex', '-1');\n      $accessible.innerHTML = this.html;\n      $el.insertBefore($accessible, $el.firstChild);\n      this.lines.forEach(setAriaHidden);\n      this.words.forEach(setAriaHidden);\n      this.chars.forEach(setAriaHidden);\n    }\n    this.width = /** @type {HTMLElement} */($el).offsetWidth;\n    if (canSplitLines || clearCache) {\n      this.effects.forEach((effect, i) => this.effectsCleanups[i] = effect(this));\n    }\n    return this;\n  }\n\n  refresh() {\n    this.split(true);\n  }\n}\n\n/**\n * @param  {HTMLElement|NodeList|String|Array<HTMLElement>} target\n * @param  {TextSplitterParams} [parameters]\n * @return {TextSplitter}\n */\nconst split = (target, parameters) => new TextSplitter(target, parameters);\n\nconst text = {\n  split,\n};\n\n\n\n\n/**\n * @param  {Number|String|[Number|String,Number|String]} val\n * @param  {StaggerParams} params\n * @return {StaggerFunction}\n */\nconst stagger = (val, params = {}) => {\n  let values = [];\n  let maxValue = 0;\n  const from = params.from;\n  const reversed = params.reversed;\n  const ease = params.ease;\n  const hasEasing = !isUnd(ease);\n  const hasSpring = hasEasing && !isUnd(/** @type {Spring} */(ease).ease);\n  const staggerEase = hasSpring ? /** @type {Spring} */(ease).ease : hasEasing ? parseEasings(ease) : null;\n  const grid = params.grid;\n  const axis = params.axis;\n  const customTotal = params.total;\n  const fromFirst = isUnd(from) || from === 0 || from === 'first';\n  const fromCenter = from === 'center';\n  const fromLast = from === 'last';\n  const fromRandom = from === 'random';\n  const isRange = isArr(val);\n  const useProp = params.use;\n  const val1 = isRange ? parseNumber(val[0]) : parseNumber(val);\n  const val2 = isRange ? parseNumber(val[1]) : 0;\n  const unitMatch = unitsExecRgx.exec((isRange ? val[1] : val) + emptyString);\n  const start = params.start || 0 + (isRange ? val1 : 0);\n  let fromIndex = fromFirst ? 0 : isNum(from) ? from : 0;\n  return (target, i, t, tl) => {\n    const [ registeredTarget ] = registerTargets(target);\n    const total = isUnd(customTotal) ? t : customTotal;\n    const customIndex = !isUnd(useProp) ? isFnc(useProp) ? useProp(registeredTarget, i, total) : getOriginalAnimatableValue(registeredTarget, useProp) : false;\n    const staggerIndex = isNum(customIndex) || isStr(customIndex) && isNum(+customIndex) ? +customIndex : i;\n    if (fromCenter) fromIndex = (total - 1) / 2;\n    if (fromLast) fromIndex = total - 1;\n    if (!values.length) {\n      for (let index = 0; index < total; index++) {\n        if (!grid) {\n          values.push(abs(fromIndex - index));\n        } else {\n          const fromX = !fromCenter ? fromIndex % grid[0] : (grid[0] - 1) / 2;\n          const fromY = !fromCenter ? floor(fromIndex / grid[0]) : (grid[1] - 1) / 2;\n          const toX = index % grid[0];\n          const toY = floor(index / grid[0]);\n          const distanceX = fromX - toX;\n          const distanceY = fromY - toY;\n          let value = sqrt(distanceX * distanceX + distanceY * distanceY);\n          if (axis === 'x') value = -distanceX;\n          if (axis === 'y') value = -distanceY;\n          values.push(value);\n        }\n        maxValue = max(...values);\n      }\n      if (staggerEase) values = values.map(val => staggerEase(val / maxValue) * maxValue);\n      if (reversed) values = values.map(val => axis ? (val < 0) ? val * -1 : -val : abs(maxValue - val));\n      if (fromRandom) values = shuffle(values);\n    }\n    const spacing = isRange ? (val2 - val1) / maxValue : val1;\n    const offset = tl ? parseTimelinePosition(tl, isUnd(params.start) ? tl.iterationDuration : start) : /** @type {Number} */(start);\n    /** @type {String|Number} */\n    let output = offset + ((spacing * round(values[staggerIndex], 2)) || 0);\n    if (params.modifier) output = params.modifier(output);\n    if (unitMatch) output = `${output}${unitMatch[2]}`;\n    return output;\n  }\n};\n\nexport { Animatable, Draggable, JSAnimation, Scope, ScrollObserver, Spring, TextSplitter, Timeline, Timer, WAAPIAnimation, animate, createAnimatable, createDraggable, createScope, createSpring, createTimeline, createTimer, eases, engine, onScroll, scrollContainers, stagger, svg, text, utils, waapi };\n","import {\n  animate,\n  createTimeline,\n  createScope,\n  stagger,\n  text,\n  onScroll,\n} from 'animejs';\n\nconst isMobile = /Mobi|Android/i.test(navigator.userAgent);\n\nexport function fadeInColumn(elements) {\n  document.querySelectorAll(elements).forEach((el, index) => {\n    if (!isMobile) {\n      const offsets = [\n        { enter: 'bottom-=50 top', leave: 'bottom-=200 top' },\n        { enter: 'bottom-=50 top', leave: 'bottom-=450 top' },\n        { enter: 'bottom-=50 top', leave: 'bottom-=650 top' },\n      ];\n\n      const offset = offsets[index] || offsets[0]; // На всякий случай — если больше 3\n\n      animate(el, {\n        y: ['10%', '0%'],\n        opacity: [0.3, 1],\n        ease: 'linear',\n        autoplay: onScroll({\n          enter: offset.enter,\n          leave: offset.leave,\n          sync: 0.25,\n          // debug: true,\n        }),\n      });\n    }\n  });\n}\n\nexport function fadeInItem(elements) {\n  document.querySelectorAll(elements).forEach((el) => {\n    if (!isMobile) {\n      animate(el, {\n        y: ['50%', '0%'],\n        opacity: [0.3, 1],\n        ease: 'linear',\n\n        autoplay: onScroll({\n          enter: 'bottom-=10 top',\n          leave: 'bottom-=250 top',\n          sync: 0.25,\n          // debug: true,\n        }),\n      });\n    }\n  });\n}\n\nexport function fadeInBlock(elements) {\n  document.querySelectorAll(elements).forEach((el) => {\n    if (!isMobile) {\n      animate(el, {\n        y: ['20%', '0%'],\n        ease: 'linear',\n\n        autoplay: onScroll({\n          enter: 'bottom-=10 top',\n          leave: 'bottom-=350 top',\n          sync: 0.25,\n          // debug: true,\n        }),\n      });\n    }\n  });\n}\n\nexport function smoothScrollTitle(elements) {\n  document.querySelectorAll(elements).forEach((el) => {\n    if (!isMobile) {\n      animate(el, {\n        x: ['50%', '0%'],\n        ease: 'linear',\n\n        autoplay: onScroll({\n          enter: 'bottom-=100 top',\n          leave: 'bottom-=250 bottom',\n          sync: 0.15,\n          // debug: true,\n        }),\n      });\n    }\n  });\n}\n\nexport function animateHeader() {\n  function loopAnimation() {\n    document.querySelectorAll('.header-blink, .button-blink').forEach((el) => {\n      animate(el, {\n        left: ['-100%', '150%'],\n        duration: 3000,\n        easing: 'easeOutSine',\n        direction: 'alternate',\n        loop: false,\n        complete: () => {\n          setTimeout(loopAnimation, 6000); // Пауза между циклами\n        },\n      });\n    });\n  }\n\n  loopAnimation();\n\n  //* - [Анимация главного блока] -\n  const timeline = createTimeline({\n    defaults: { delay: 300, duration: 950 },\n  });\n\n  timeline\n    .add('.tl-1', { x: { from: '15rem' }, opacity: [0, 1] })\n    .add('.tl-2', { x: { from: '15rem' }, opacity: [0, 1] }, 600)\n    .add('.tl-3', { x: { from: '40rem' }, opacity: [0, 1] }, 1200);\n\n  //* - [Анимация Links] -\n  document.querySelectorAll('.header__link-key').forEach((el) => {\n    createScope({\n      root: el,\n      defaults: {\n        ease: 'outQuad',\n        duration: 500,\n      },\n    }).add((scope) => {\n      const { root, methods } = scope;\n\n      // Разбиваем текст на символы\n      text.split(root, {\n        chars: {\n          class: 'char',\n          clone: 'left',\n          wrap: 'clip',\n        },\n      });\n\n      //* Создаём анимацию\n      const rotateAnim = createTimeline({\n        autoplay: false,\n        defaults: { ease: 'inOutQuad', duration: 400 },\n      }).add('.char > span', { x: '100%' }, stagger(5, { use: 'data-char' }));\n\n      //* Обработчики наведения\n      if (!isMobile) {\n        scope.add('onEnter', () => animate(rotateAnim, { progress: 1 }));\n        scope.add('onLeave', () => animate(rotateAnim, { progress: 0 }));\n      }\n\n      root.addEventListener(\n        'pointerenter',\n        /** @type {EventListener} */ (methods.onEnter)\n      );\n      root.addEventListener(\n        'pointerleave',\n        /** @type {EventListener} */ (methods.onLeave)\n      );\n    });\n  });\n}\n","/** Checks if value is string */\nfunction isString(str) {\n  return typeof str === 'string' || str instanceof String;\n}\n\n/** Checks if value is object */\nfunction isObject(obj) {\n  var _obj$constructor;\n  return typeof obj === 'object' && obj != null && (obj == null || (_obj$constructor = obj.constructor) == null ? void 0 : _obj$constructor.name) === 'Object';\n}\nfunction pick(obj, keys) {\n  if (Array.isArray(keys)) return pick(obj, (_, k) => keys.includes(k));\n  return Object.entries(obj).reduce((acc, _ref) => {\n    let [k, v] = _ref;\n    if (keys(v, k)) acc[k] = v;\n    return acc;\n  }, {});\n}\n\n/** Direction */\nconst DIRECTION = {\n  NONE: 'NONE',\n  LEFT: 'LEFT',\n  FORCE_LEFT: 'FORCE_LEFT',\n  RIGHT: 'RIGHT',\n  FORCE_RIGHT: 'FORCE_RIGHT'\n};\n\n/** Direction */\n\nfunction forceDirection(direction) {\n  switch (direction) {\n    case DIRECTION.LEFT:\n      return DIRECTION.FORCE_LEFT;\n    case DIRECTION.RIGHT:\n      return DIRECTION.FORCE_RIGHT;\n    default:\n      return direction;\n  }\n}\n\n/** Escapes regular expression control chars */\nfunction escapeRegExp(str) {\n  return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n}\n\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\nfunction objectIncludes(b, a) {\n  if (a === b) return true;\n  const arrA = Array.isArray(a),\n    arrB = Array.isArray(b);\n  let i;\n  if (arrA && arrB) {\n    if (a.length != b.length) return false;\n    for (i = 0; i < a.length; i++) if (!objectIncludes(a[i], b[i])) return false;\n    return true;\n  }\n  if (arrA != arrB) return false;\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    const dateA = a instanceof Date,\n      dateB = b instanceof Date;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    if (dateA != dateB) return false;\n    const regexpA = a instanceof RegExp,\n      regexpB = b instanceof RegExp;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    if (regexpA != regexpB) return false;\n    const keys = Object.keys(a);\n    // if (keys.length !== Object.keys(b).length) return false;\n\n    for (i = 0; i < keys.length; i++) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    for (i = 0; i < keys.length; i++) if (!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n    return true;\n  } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n    return a.toString() === b.toString();\n  }\n  return false;\n}\n\n/** Selection range */\n\nexport { DIRECTION, escapeRegExp, forceDirection, isObject, isString, objectIncludes, pick };\n","import { DIRECTION } from './utils.js';\n\n/** Provides details of changing input */\nclass ActionDetails {\n  /** Current input value */\n\n  /** Current cursor position */\n\n  /** Old input value */\n\n  /** Old selection */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n    if (this.insertedCount) {\n      // double check right part\n      while (this.value.slice(this.cursorPos) !== this.oldValue.slice(this.oldSelection.end)) {\n        if (this.value.length - this.cursorPos < this.oldValue.length - this.oldSelection.end) ++this.oldSelection.end;else ++this.cursorPos;\n      }\n    }\n  }\n\n  /** Start changing position */\n  get startChangePos() {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /** Inserted symbols count */\n  get insertedCount() {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /** Inserted symbols */\n  get inserted() {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /** Removed symbols count */\n  get removedCount() {\n    // Math.max for opposite operation\n    return Math.max(this.oldSelection.end - this.startChangePos ||\n    // for Delete\n    this.oldValue.length - this.value.length, 0);\n  }\n\n  /** Removed symbols */\n  get removed() {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /** Unchanged head symbols */\n  get head() {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /** Unchanged tail symbols */\n  get tail() {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /** Remove direction */\n  get removeDirection() {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n    // if not range removed (event with backspace)\n    this.oldSelection.end === this.oldSelection.start ? DIRECTION.RIGHT : DIRECTION.LEFT;\n  }\n}\n\nexport { ActionDetails as default };\n","/** Applies mask on element */\nfunction IMask(el, opts) {\n  // currently available only for input-like elements\n  return new IMask.InputMask(el, opts);\n}\n\nexport { IMask as default };\n","import { isString, isObject, pick } from '../core/utils.js';\nimport IMask from '../core/holder.js';\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n// export function maskedClass(mask: string): typeof MaskedPattern;\n// export function maskedClass(mask: DateConstructor): typeof MaskedDate;\n// export function maskedClass(mask: NumberConstructor): typeof MaskedNumber;\n// export function maskedClass(mask: Array<any> | ArrayConstructor): typeof MaskedDynamic;\n// export function maskedClass(mask: MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass(mask: Masked): typeof Masked;\n// export function maskedClass(mask: typeof Masked): typeof Masked;\n// export function maskedClass(mask: typeof MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: typeof MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: typeof MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: typeof MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: typeof MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: typeof MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: typeof MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: typeof MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass<Mask extends typeof Masked> (mask: Mask): Mask;\n// export function maskedClass(mask: RegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: (value: string, ...args: any[]) => boolean): typeof MaskedFunction;\n\n/** Get Masked class by mask type */\nfunction maskedClass(mask) /* TODO */{\n  if (mask == null) throw new Error('mask property should be defined');\n  if (mask instanceof RegExp) return IMask.MaskedRegExp;\n  if (isString(mask)) return IMask.MaskedPattern;\n  if (mask === Date) return IMask.MaskedDate;\n  if (mask === Number) return IMask.MaskedNumber;\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n  if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask;\n  if (IMask.Masked && mask instanceof IMask.Masked) return mask.constructor;\n  if (mask instanceof Function) return IMask.MaskedFunction;\n  console.warn('Mask not found for mask', mask); // eslint-disable-line no-console\n  return IMask.Masked;\n}\nfunction normalizeOpts(opts) {\n  if (!opts) throw new Error('Options in not defined');\n  if (IMask.Masked) {\n    if (opts.prototype instanceof IMask.Masked) return {\n      mask: opts\n    };\n\n    /*\n      handle cases like:\n      1) opts = Masked\n      2) opts = { mask: Masked, ...instanceOpts }\n    */\n    const {\n      mask = undefined,\n      ...instanceOpts\n    } = opts instanceof IMask.Masked ? {\n      mask: opts\n    } : isObject(opts) && opts.mask instanceof IMask.Masked ? opts : {};\n    if (mask) {\n      const _mask = mask.mask;\n      return {\n        ...pick(mask, (_, k) => !k.startsWith('_')),\n        mask: mask.constructor,\n        _mask,\n        ...instanceOpts\n      };\n    }\n  }\n  if (!isObject(opts)) return {\n    mask: opts\n  };\n  return {\n    ...opts\n  };\n}\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n\n// From masked\n// export default function createMask<Opts extends Masked, ReturnMasked=Opts> (opts: Opts): ReturnMasked;\n// // From masked class\n// export default function createMask<Opts extends MaskedOptions<typeof Masked>, ReturnMasked extends Masked=InstanceType<Opts['mask']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDate>, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedNumber>, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedEnum>, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRange>, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedFunction>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedPattern>, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDynamic>, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// // From mask opts\n// export default function createMask<Opts extends MaskedOptions<Masked>, ReturnMasked=Opts extends MaskedOptions<infer M> ? M : never> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedNumberOptions, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDateFactoryOptions, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedEnumOptions, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedRangeOptions, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedPatternOptions, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDynamicOptions, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<RegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<Function>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n\n/** Creates new {@link Masked} depending on mask type */\nfunction createMask(opts) {\n  if (IMask.Masked && opts instanceof IMask.Masked) return opts;\n  const nOpts = normalizeOpts(opts);\n  const MaskedClass = maskedClass(nOpts.mask);\n  if (!MaskedClass) throw new Error(\"Masked class is not found for provided mask \" + nOpts.mask + \", appropriate module needs to be imported manually before creating mask.\");\n  if (nOpts.mask === MaskedClass) delete nOpts.mask;\n  if (nOpts._mask) {\n    nOpts.mask = nOpts._mask;\n    delete nOpts._mask;\n  }\n  return new MaskedClass(nOpts);\n}\nIMask.createMask = createMask;\n\nexport { createMask as default, maskedClass, normalizeOpts };\n","import IMask from '../core/holder.js';\n\n/**  Generic element API to use with mask */\nclass MaskElement {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** Safely returns selection start */\n  get selectionStart() {\n    let start;\n    try {\n      start = this._unsafeSelectionStart;\n    } catch {}\n    return start != null ? start : this.value.length;\n  }\n\n  /** Safely returns selection end */\n  get selectionEnd() {\n    let end;\n    try {\n      end = this._unsafeSelectionEnd;\n    } catch {}\n    return end != null ? end : this.value.length;\n  }\n\n  /** Safely sets element selection */\n  select(start, end) {\n    if (start == null || end == null || start === this.selectionStart && end === this.selectionEnd) return;\n    try {\n      this._unsafeSelect(start, end);\n    } catch {}\n  }\n\n  /** */\n  get isActive() {\n    return false;\n  }\n  /** */\n\n  /** */\n\n  /** */\n}\nIMask.MaskElement = MaskElement;\n\nexport { MaskElement as default };\n","import MaskElement from './mask-element.js';\nimport IMask from '../core/holder.js';\n\nconst KEY_Z = 90;\nconst KEY_Y = 89;\n\n/** Bridge between HTMLElement and {@link Masked} */\nclass HTMLMaskElement extends MaskElement {\n  /** HTMLElement to use mask on */\n\n  constructor(input) {\n    super();\n    this.input = input;\n    this._onKeydown = this._onKeydown.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onBeforeinput = this._onBeforeinput.bind(this);\n    this._onCompositionEnd = this._onCompositionEnd.bind(this);\n  }\n  get rootElement() {\n    var _this$input$getRootNo, _this$input$getRootNo2, _this$input;\n    return (_this$input$getRootNo = (_this$input$getRootNo2 = (_this$input = this.input).getRootNode) == null ? void 0 : _this$input$getRootNo2.call(_this$input)) != null ? _this$input$getRootNo : document;\n  }\n\n  /** Is element in focus */\n  get isActive() {\n    return this.input === this.rootElement.activeElement;\n  }\n\n  /** Binds HTMLElement events to mask internal events */\n  bindEvents(handlers) {\n    this.input.addEventListener('keydown', this._onKeydown);\n    this.input.addEventListener('input', this._onInput);\n    this.input.addEventListener('beforeinput', this._onBeforeinput);\n    this.input.addEventListener('compositionend', this._onCompositionEnd);\n    this.input.addEventListener('drop', handlers.drop);\n    this.input.addEventListener('click', handlers.click);\n    this.input.addEventListener('focus', handlers.focus);\n    this.input.addEventListener('blur', handlers.commit);\n    this._handlers = handlers;\n  }\n  _onKeydown(e) {\n    if (this._handlers.redo && (e.keyCode === KEY_Z && e.shiftKey && (e.metaKey || e.ctrlKey) || e.keyCode === KEY_Y && e.ctrlKey)) {\n      e.preventDefault();\n      return this._handlers.redo(e);\n    }\n    if (this._handlers.undo && e.keyCode === KEY_Z && (e.metaKey || e.ctrlKey)) {\n      e.preventDefault();\n      return this._handlers.undo(e);\n    }\n    if (!e.isComposing) this._handlers.selectionChange(e);\n  }\n  _onBeforeinput(e) {\n    if (e.inputType === 'historyUndo' && this._handlers.undo) {\n      e.preventDefault();\n      return this._handlers.undo(e);\n    }\n    if (e.inputType === 'historyRedo' && this._handlers.redo) {\n      e.preventDefault();\n      return this._handlers.redo(e);\n    }\n  }\n  _onCompositionEnd(e) {\n    this._handlers.input(e);\n  }\n  _onInput(e) {\n    if (!e.isComposing) this._handlers.input(e);\n  }\n\n  /** Unbinds HTMLElement events to mask internal events */\n  unbindEvents() {\n    this.input.removeEventListener('keydown', this._onKeydown);\n    this.input.removeEventListener('input', this._onInput);\n    this.input.removeEventListener('beforeinput', this._onBeforeinput);\n    this.input.removeEventListener('compositionend', this._onCompositionEnd);\n    this.input.removeEventListener('drop', this._handlers.drop);\n    this.input.removeEventListener('click', this._handlers.click);\n    this.input.removeEventListener('focus', this._handlers.focus);\n    this.input.removeEventListener('blur', this._handlers.commit);\n    this._handlers = {};\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLMaskElement as default };\n","import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\n/** Bridge between InputElement and {@link Masked} */\nclass HTMLInputMaskElement extends HTMLMaskElement {\n  /** InputElement to use mask on */\n\n  constructor(input) {\n    super(input);\n    this.input = input;\n  }\n\n  /** Returns InputElement selection start */\n  get _unsafeSelectionStart() {\n    return this.input.selectionStart != null ? this.input.selectionStart : this.value.length;\n  }\n\n  /** Returns InputElement selection end */\n  get _unsafeSelectionEnd() {\n    return this.input.selectionEnd;\n  }\n\n  /** Sets InputElement selection */\n  _unsafeSelect(start, end) {\n    this.input.setSelectionRange(start, end);\n  }\n  get value() {\n    return this.input.value;\n  }\n  set value(value) {\n    this.input.value = value;\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLInputMaskElement as default };\n","import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\nclass HTMLContenteditableMaskElement extends HTMLMaskElement {\n  /** Returns HTMLElement selection start */\n  get _unsafeSelectionStart() {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Returns HTMLElement selection end */\n  get _unsafeSelectionEnd() {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Sets HTMLElement selection */\n  _unsafeSelect(start, end) {\n    if (!this.rootElement.createRange) return;\n    const range = this.rootElement.createRange();\n    range.setStart(this.input.firstChild || this.input, start);\n    range.setEnd(this.input.lastChild || this.input, end);\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  /** HTMLElement value */\n  get value() {\n    return this.input.textContent || '';\n  }\n  set value(value) {\n    this.input.textContent = value;\n  }\n}\nIMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n\nexport { HTMLContenteditableMaskElement as default };\n","class InputHistory {\n  constructor() {\n    this.states = [];\n    this.currentIndex = 0;\n  }\n  get currentState() {\n    return this.states[this.currentIndex];\n  }\n  get isEmpty() {\n    return this.states.length === 0;\n  }\n  push(state) {\n    // if current index points before the last element then remove the future\n    if (this.currentIndex < this.states.length - 1) this.states.length = this.currentIndex + 1;\n    this.states.push(state);\n    if (this.states.length > InputHistory.MAX_LENGTH) this.states.shift();\n    this.currentIndex = this.states.length - 1;\n  }\n  go(steps) {\n    this.currentIndex = Math.min(Math.max(this.currentIndex + steps, 0), this.states.length - 1);\n    return this.currentState;\n  }\n  undo() {\n    return this.go(-1);\n  }\n  redo() {\n    return this.go(+1);\n  }\n  clear() {\n    this.states.length = 0;\n    this.currentIndex = 0;\n  }\n}\nInputHistory.MAX_LENGTH = 100;\n\nexport { InputHistory as default };\n","import { DIRECTION } from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport createMask, { maskedClass } from '../masked/factory.js';\nimport MaskElement from './mask-element.js';\nimport HTMLInputMaskElement from './html-input-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\nimport InputHistory from './input-history.js';\nimport './html-mask-element.js';\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nclass InputMask {\n  /**\n    View element\n  */\n\n  /** Internal {@link Masked} model */\n\n  constructor(el, opts) {\n    this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new HTMLContenteditableMaskElement(el) : new HTMLInputMaskElement(el);\n    this.masked = createMask(opts);\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n    this._rawInputValue = '';\n    this.history = new InputHistory();\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._onUndo = this._onUndo.bind(this);\n    this._onRedo = this._onRedo.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n  maskEquals(mask) {\n    var _this$masked;\n    return mask == null || ((_this$masked = this.masked) == null ? void 0 : _this$masked.maskEquals(mask));\n  }\n\n  /** Masked */\n  get mask() {\n    return this.masked.mask;\n  }\n  set mask(mask) {\n    if (this.maskEquals(mask)) return;\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      // TODO \"any\" no idea\n      this.masked.updateOptions({\n        mask\n      });\n      return;\n    }\n    const masked = mask instanceof IMask.Masked ? mask : createMask({\n      mask\n    });\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value() {\n    return this._value;\n  }\n  set value(str) {\n    if (this.value === str) return;\n    this.masked.value = str;\n    this.updateControl('auto');\n  }\n\n  /** Unmasked value */\n  get unmaskedValue() {\n    return this._unmaskedValue;\n  }\n  set unmaskedValue(str) {\n    if (this.unmaskedValue === str) return;\n    this.masked.unmaskedValue = str;\n    this.updateControl('auto');\n  }\n\n  /** Raw input value */\n  get rawInputValue() {\n    return this._rawInputValue;\n  }\n  set rawInputValue(str) {\n    if (this.rawInputValue === str) return;\n    this.masked.rawInputValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue() {\n    return this.masked.typedValue;\n  }\n  set typedValue(val) {\n    if (this.masked.typedValueEquals(val)) return;\n    this.masked.typedValue = val;\n    this.updateControl('auto');\n  }\n\n  /** Display value */\n  get displayValue() {\n    return this.masked.displayValue;\n  }\n\n  /** Starts listening to element events */\n  _bindEvents() {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange,\n      undo: this._onUndo,\n      redo: this._onRedo\n    });\n  }\n\n  /** Stops listening to element events */\n  _unbindEvents() {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /** Fires custom event */\n  _fireEvent(ev, e) {\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n    listeners.forEach(l => l(e));\n  }\n\n  /** Current selection start */\n  get selectionStart() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\n  }\n  set cursorPos(pos) {\n    if (!this.el || !this.el.isActive) return;\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /** Stores current selection */\n  _saveSelection( /* ev */\n  ) {\n    if (this.displayValue !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue() {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n    this._unmaskedValue = this.masked.unmaskedValue;\n    this._rawInputValue = this.masked.rawInputValue;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl(cursorPos) {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const newRawInputValue = this.masked.rawInputValue;\n    const newDisplayValue = this.displayValue;\n    const isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue || this._rawInputValue !== newRawInputValue;\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n    this._rawInputValue = newRawInputValue;\n    if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n    if (cursorPos === 'auto') this.alignCursor();else if (cursorPos != null) this.cursorPos = cursorPos;\n    if (isChanged) this._fireChangeEvents();\n    if (!this._historyChanging && (isChanged || this.history.isEmpty)) this.history.push({\n      unmaskedValue: newUnmaskedValue,\n      selection: {\n        start: this.selectionStart,\n        end: this.cursorPos\n      }\n    });\n  }\n\n  /** Updates options with deep equal check, recreates {@link Masked} model if mask type changes */\n  updateOptions(opts) {\n    const {\n      mask,\n      ...restOpts\n    } = opts; // TODO types, yes, mask is optional\n\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = this.masked.optionsIsChanged(restOpts);\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts); // TODO\n\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor(cursorPos) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /** Delays cursor update to support mobile browsers */\n  _delayUpdateCursor(cursorPos) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /** Fires custom events */\n  _fireChangeEvents() {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /** Aborts delayed cursor update */\n  _abortUpdateCursor() {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor() {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly() {\n    if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on(ev, handler) {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off(ev, handler) {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput(e) {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n    const details = new ActionDetails({\n      // new state\n      value: this.el.value,\n      cursorPos: this.cursorPos,\n      // old state\n      oldValue: this.displayValue,\n      oldSelection: this._selection\n    });\n    const oldRawValue = this.masked.rawInputValue;\n    const offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection, {\n      input: true,\n      raw: true\n    }).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;\n    let cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n    this.updateControl(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange() {\n    if (this.displayValue !== this.el.value) this.updateValue();\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop(ev) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus(ev) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick(ev) {\n    this.alignCursorFriendly();\n  }\n  _onUndo() {\n    this._applyHistoryState(this.history.undo());\n  }\n  _onRedo() {\n    this._applyHistoryState(this.history.redo());\n  }\n  _applyHistoryState(state) {\n    if (!state) return;\n    this._historyChanging = true;\n    this.unmaskedValue = state.unmaskedValue;\n    this.el.select(state.selection.start, state.selection.end);\n    this._saveSelection();\n    this._historyChanging = false;\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy() {\n    this._unbindEvents();\n    this._listeners.length = 0;\n    delete this.el;\n  }\n}\nIMask.InputMask = InputMask;\n\nexport { InputMask as default };\n","import IMask from './holder.js';\n\n/** Provides details of changing model value */\nclass ChangeDetails {\n  /** Inserted symbols */\n\n  /** Additional offset if any changes occurred before tail */\n\n  /** Raw inserted is used by dynamic mask */\n\n  /** Can skip chars */\n\n  static normalize(prep) {\n    return Array.isArray(prep) ? prep : [prep, new ChangeDetails()];\n  }\n  constructor(details) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      tailShift: 0,\n      skip: false\n    }, details);\n  }\n\n  /** Aggregate changes */\n  aggregate(details) {\n    this.inserted += details.inserted;\n    this.rawInserted += details.rawInserted;\n    this.tailShift += details.tailShift;\n    this.skip = this.skip || details.skip;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset() {\n    return this.tailShift + this.inserted.length;\n  }\n  get consumed() {\n    return Boolean(this.rawInserted) || this.skip;\n  }\n  equals(details) {\n    return this.inserted === details.inserted && this.tailShift === details.tailShift && this.rawInserted === details.rawInserted && this.skip === details.skip;\n  }\n}\nIMask.ChangeDetails = ChangeDetails;\n\nexport { ChangeDetails as default };\n","/** Provides details of continuous extracted tail */\nclass ContinuousTailDetails {\n  /** Tail value as string */\n\n  /** Tail start position */\n\n  /** Start position */\n\n  constructor(value, from, stop) {\n    if (value === void 0) {\n      value = '';\n    }\n    if (from === void 0) {\n      from = 0;\n    }\n    this.value = value;\n    this.from = from;\n    this.stop = stop;\n  }\n  toString() {\n    return this.value;\n  }\n  extend(tail) {\n    this.value += String(tail);\n  }\n  appendTo(masked) {\n    return masked.append(this.toString(), {\n      tail: true\n    }).aggregate(masked._appendPlaceholder());\n  }\n  get state() {\n    return {\n      value: this.value,\n      from: this.from,\n      stop: this.stop\n    };\n  }\n  set state(state) {\n    Object.assign(this, state);\n  }\n  unshift(beforePos) {\n    if (!this.value.length || beforePos != null && this.from >= beforePos) return '';\n    const shiftChar = this.value[0];\n    this.value = this.value.slice(1);\n    return shiftChar;\n  }\n  shift() {\n    if (!this.value.length) return '';\n    const shiftChar = this.value[this.value.length - 1];\n    this.value = this.value.slice(0, -1);\n    return shiftChar;\n  }\n}\n\nexport { ContinuousTailDetails as default };\n","import ChangeDetails from '../core/change-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { isString, DIRECTION, objectIncludes, forceDirection } from '../core/utils.js';\nimport IMask from '../core/holder.js';\n\n/** Append flags */\n\n/** Extract flags */\n\n// see https://github.com/microsoft/TypeScript/issues/6223\n\n/** Provides common masking stuff */\nclass Masked {\n  /** */\n\n  /** */\n\n  /** Transforms value before mask processing */\n\n  /** Transforms each char before mask processing */\n\n  /** Validates if value is acceptable */\n\n  /** Does additional processing at the end of editing */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    this._value = '';\n    this._update({\n      ...Masked.DEFAULTS,\n      ...opts\n    });\n    this._initialized = true;\n  }\n\n  /** Sets and applies new options */\n  updateOptions(opts) {\n    if (!this.optionsIsChanged(opts)) return;\n    this.withValueRefresh(this._update.bind(this, opts));\n  }\n\n  /** Sets new options */\n  _update(opts) {\n    Object.assign(this, opts);\n  }\n\n  /** Mask state */\n  get state() {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n  }\n\n  /** Resets value */\n  reset() {\n    this._value = '';\n  }\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this.resolve(value, {\n      input: true\n    });\n  }\n\n  /** Resolve new value */\n  resolve(value, flags) {\n    if (flags === void 0) {\n      flags = {\n        input: true\n      };\n    }\n    this.reset();\n    this.append(value, flags, '');\n    this.doCommit();\n  }\n  get unmaskedValue() {\n    return this.value;\n  }\n  set unmaskedValue(value) {\n    this.resolve(value, {});\n  }\n  get typedValue() {\n    return this.parse ? this.parse(this.value, this) : this.unmaskedValue;\n  }\n  set typedValue(value) {\n    if (this.format) {\n      this.value = this.format(value, this);\n    } else {\n      this.unmaskedValue = String(value);\n    }\n  }\n\n  /** Value that includes raw user input */\n  get rawInputValue() {\n    return this.extractInput(0, this.displayValue.length, {\n      raw: true\n    });\n  }\n  set rawInputValue(value) {\n    this.resolve(value, {\n      raw: true\n    });\n  }\n  get displayValue() {\n    return this.value;\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return this.isComplete;\n  }\n\n  /** Finds nearest input position in direction */\n  nearestInputPos(cursorPos, direction) {\n    return cursorPos;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return Math.min(this.displayValue.length, toPos - fromPos);\n  }\n\n  /** Extracts value in range considering flags */\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return this.displayValue.slice(fromPos, toPos);\n  }\n\n  /** Extracts tail in range */\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n  }\n\n  /** Appends tail */\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n\n  /** Appends char */\n  _appendCharRaw(ch, flags) {\n    if (!ch) return new ChangeDetails();\n    this._value += ch;\n    return new ChangeDetails({\n      inserted: ch,\n      rawInserted: ch\n    });\n  }\n\n  /** Appends char */\n  _appendChar(ch, flags, checkTail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const consistentState = this.state;\n    let details;\n    [ch, details] = this.doPrepareChar(ch, flags);\n    if (ch) {\n      details = details.aggregate(this._appendCharRaw(ch, flags));\n\n      // TODO handle `skip`?\n\n      // try `autofix` lookahead\n      if (!details.rawInserted && this.autofix === 'pad') {\n        const noFixState = this.state;\n        this.state = consistentState;\n        let fixDetails = this.pad(flags);\n        const chDetails = this._appendCharRaw(ch, flags);\n        fixDetails = fixDetails.aggregate(chDetails);\n\n        // if fix was applied or\n        // if details are equal use skip restoring state optimization\n        if (chDetails.rawInserted || fixDetails.equals(details)) {\n          details = fixDetails;\n        } else {\n          this.state = noFixState;\n        }\n      }\n    }\n    if (details.inserted) {\n      let consistentTail;\n      let appended = this.doValidate(flags) !== false;\n      if (appended && checkTail != null) {\n        // validation ok, check tail\n        const beforeTailState = this.state;\n        if (this.overwrite === true) {\n          consistentTail = checkTail.state;\n          for (let i = 0; i < details.rawInserted.length; ++i) {\n            checkTail.unshift(this.displayValue.length - details.tailShift);\n          }\n        }\n        let tailDetails = this.appendTail(checkTail);\n        appended = tailDetails.rawInserted.length === checkTail.toString().length;\n\n        // not ok, try shift\n        if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\n          this.state = beforeTailState;\n          consistentTail = checkTail.state;\n          for (let i = 0; i < details.rawInserted.length; ++i) {\n            checkTail.shift();\n          }\n          tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted.length === checkTail.toString().length;\n        }\n\n        // if ok, rollback state after tail\n        if (appended && tailDetails.inserted) this.state = beforeTailState;\n      }\n\n      // revert all if something went wrong\n      if (!appended) {\n        details = new ChangeDetails();\n        this.state = consistentState;\n        if (checkTail && consistentTail) checkTail.state = consistentTail;\n      }\n    }\n    return details;\n  }\n\n  /** Appends optional placeholder at the end */\n  _appendPlaceholder() {\n    return new ChangeDetails();\n  }\n\n  /** Appends optional eager placeholder at the end */\n  _appendEager() {\n    return new ChangeDetails();\n  }\n\n  /** Appends symbols considering flags */\n  append(str, flags, tail) {\n    if (!isString(str)) throw new Error('value should be string');\n    const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\n    if (flags != null && flags.tail) flags._beforeTailState = this.state;\n    let details;\n    [str, details] = this.doPrepare(str, flags);\n    for (let ci = 0; ci < str.length; ++ci) {\n      const d = this._appendChar(str[ci], flags, checkTail);\n      if (!d.rawInserted && !this.doSkipInvalid(str[ci], flags, checkTail)) break;\n      details.aggregate(d);\n    }\n    if ((this.eager === true || this.eager === 'append') && flags != null && flags.input && str) {\n      details.aggregate(this._appendEager());\n    }\n\n    // append tail but aggregate only tailShift\n    if (checkTail != null) {\n      details.tailShift += this.appendTail(checkTail).tailShift;\n      // TODO it's a good idea to clear state after appending ends\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n      // this._resetBeforeTailState();\n    }\n    return details;\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    this._value = this.displayValue.slice(0, fromPos) + this.displayValue.slice(toPos);\n    return new ChangeDetails();\n  }\n\n  /** Calls function and reapplies current value */\n  withValueRefresh(fn) {\n    if (this._refreshing || !this._initialized) return fn();\n    this._refreshing = true;\n    const rawInput = this.rawInputValue;\n    const value = this.value;\n    const ret = fn();\n    this.rawInputValue = rawInput;\n    // append lost trailing chars at the end\n    if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\n      this.append(value.slice(this.displayValue.length), {}, '');\n      this.doCommit();\n    }\n    delete this._refreshing;\n    return ret;\n  }\n  runIsolated(fn) {\n    if (this._isolated || !this._initialized) return fn(this);\n    this._isolated = true;\n    const state = this.state;\n    const ret = fn(this);\n    this.state = state;\n    delete this._isolated;\n    return ret;\n  }\n  doSkipInvalid(ch, flags, checkTail) {\n    return Boolean(this.skipInvalid);\n  }\n\n  /** Prepares string before mask processing */\n  doPrepare(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    return ChangeDetails.normalize(this.prepare ? this.prepare(str, this, flags) : str);\n  }\n\n  /** Prepares each char before mask processing */\n  doPrepareChar(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    return ChangeDetails.normalize(this.prepareChar ? this.prepareChar(str, this, flags) : str);\n  }\n\n  /** Validates if value is acceptable */\n  doValidate(flags) {\n    return (!this.validate || this.validate(this.value, this, flags)) && (!this.parent || this.parent.doValidate(flags));\n  }\n\n  /** Does additional processing at the end of editing */\n  doCommit() {\n    if (this.commit) this.commit(this.value, this);\n  }\n  splice(start, deleteCount, inserted, removeDirection, flags) {\n    if (inserted === void 0) {\n      inserted = '';\n    }\n    if (removeDirection === void 0) {\n      removeDirection = DIRECTION.NONE;\n    }\n    if (flags === void 0) {\n      flags = {\n        input: true\n      };\n    }\n    const tailPos = start + deleteCount;\n    const tail = this.extractTail(tailPos);\n    const eagerRemove = this.eager === true || this.eager === 'remove';\n    let oldRawValue;\n    if (eagerRemove) {\n      removeDirection = forceDirection(removeDirection);\n      oldRawValue = this.extractInput(0, tailPos, {\n        raw: true\n      });\n    }\n    let startChangePos = start;\n    const details = new ChangeDetails();\n\n    // if it is just deletion without insertion\n    if (removeDirection !== DIRECTION.NONE) {\n      startChangePos = this.nearestInputPos(start, deleteCount > 1 && start !== 0 && !eagerRemove ? DIRECTION.NONE : removeDirection);\n\n      // adjust tailShift if start was aligned\n      details.tailShift = startChangePos - start;\n    }\n    details.aggregate(this.remove(startChangePos));\n    if (eagerRemove && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n      if (removeDirection === DIRECTION.FORCE_LEFT) {\n        let valLength;\n        while (oldRawValue === this.rawInputValue && (valLength = this.displayValue.length)) {\n          details.aggregate(new ChangeDetails({\n            tailShift: -1\n          })).aggregate(this.remove(valLength - 1));\n        }\n      } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n        tail.unshift();\n      }\n    }\n    return details.aggregate(this.append(inserted, flags, tail));\n  }\n  maskEquals(mask) {\n    return this.mask === mask;\n  }\n  optionsIsChanged(opts) {\n    return !objectIncludes(this, opts);\n  }\n  typedValueEquals(value) {\n    const tval = this.typedValue;\n    return value === tval || Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) || (this.format ? this.format(value, this) === this.format(this.typedValue, this) : false);\n  }\n  pad(flags) {\n    return new ChangeDetails();\n  }\n}\nMasked.DEFAULTS = {\n  skipInvalid: true\n};\nMasked.EMPTY_VALUES = [undefined, null, ''];\nIMask.Masked = Masked;\n\nexport { Masked as default };\n","import ChangeDetails from '../../core/change-details.js';\nimport { isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport IMask from '../../core/holder.js';\n\nclass ChunksTailDetails {\n  /** */\n\n  constructor(chunks, from) {\n    if (chunks === void 0) {\n      chunks = [];\n    }\n    if (from === void 0) {\n      from = 0;\n    }\n    this.chunks = chunks;\n    this.from = from;\n  }\n  toString() {\n    return this.chunks.map(String).join('');\n  }\n  extend(tailChunk) {\n    if (!String(tailChunk)) return;\n    tailChunk = isString(tailChunk) ? new ContinuousTailDetails(String(tailChunk)) : tailChunk;\n    const lastChunk = this.chunks[this.chunks.length - 1];\n    const extendLast = lastChunk && (\n    // if stops are same or tail has no stop\n    lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n    // if tail chunk goes just after last chunk\n    tailChunk.from === lastChunk.from + lastChunk.toString().length;\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift(); // not possible to be `undefined` because length was checked above\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      }\n\n      // if tail chunk still has value\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n  appendTo(masked) {\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n    const details = new ChangeDetails();\n    for (let ci = 0; ci < this.chunks.length; ++ci) {\n      const chunk = this.chunks[ci];\n      const lastBlockIter = masked._mapPosToBlock(masked.displayValue.length);\n      const stop = chunk.stop;\n      let chunkBlock;\n      if (stop != null && (\n      // if block not found or stop is behind lastBlock\n      !lastBlockIter || lastBlockIter.index <= stop)) {\n        if (chunk instanceof ChunksTailDetails ||\n        // for continuous block also check if stop is exist\n        masked._stops.indexOf(stop) >= 0) {\n          details.aggregate(masked._appendPlaceholder(stop));\n        }\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        details.aggregate(tailDetails);\n\n        // get not inserted chars\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, {\n          tail: true\n        }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), {\n          tail: true\n        }));\n      }\n    }\n    return details;\n  }\n  get state() {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex\n    };\n  }\n  set state(state) {\n    const {\n      chunks,\n      ...props\n    } = state;\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ? new ChunksTailDetails() : new ContinuousTailDetails();\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n  unshift(beforePos) {\n    if (!this.chunks.length || beforePos != null && this.from >= beforePos) return '';\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci = 0;\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n  shift() {\n    if (!this.chunks.length) return '';\n    let ci = this.chunks.length - 1;\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n}\n\nexport { ChunksTailDetails as default };\n","import { DIRECTION } from '../../core/utils.js';\n\nclass PatternCursor {\n  constructor(masked, pos) {\n    this.masked = masked;\n    this._log = [];\n    const {\n      offset,\n      index\n    } = masked._mapPosToBlock(pos) || (pos < 0 ?\n    // first\n    {\n      index: 0,\n      offset: 0\n    } :\n    // last\n    {\n      index: this.masked._blocks.length,\n      offset: 0\n    });\n    this.offset = offset;\n    this.index = index;\n    this.ok = false;\n  }\n  get block() {\n    return this.masked._blocks[this.index];\n  }\n  get pos() {\n    return this.masked._blockStartPos(this.index) + this.offset;\n  }\n  get state() {\n    return {\n      index: this.index,\n      offset: this.offset,\n      ok: this.ok\n    };\n  }\n  set state(s) {\n    Object.assign(this, s);\n  }\n  pushState() {\n    this._log.push(this.state);\n  }\n  popState() {\n    const s = this._log.pop();\n    if (s) this.state = s;\n    return s;\n  }\n  bindBlock() {\n    if (this.block) return;\n    if (this.index < 0) {\n      this.index = 0;\n      this.offset = 0;\n    }\n    if (this.index >= this.masked._blocks.length) {\n      this.index = this.masked._blocks.length - 1;\n      this.offset = this.block.displayValue.length; // TODO this is stupid type error, `block` depends on index that was changed above\n    }\n  }\n  _pushLeft(fn) {\n    this.pushState();\n    for (this.bindBlock(); 0 <= this.index; --this.index, this.offset = ((_this$block = this.block) == null ? void 0 : _this$block.displayValue.length) || 0) {\n      var _this$block;\n      if (fn()) return this.ok = true;\n    }\n    return this.ok = false;\n  }\n  _pushRight(fn) {\n    this.pushState();\n    for (this.bindBlock(); this.index < this.masked._blocks.length; ++this.index, this.offset = 0) {\n      if (fn()) return this.ok = true;\n    }\n    return this.ok = false;\n  }\n  pushLeftBeforeFilled() {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_LEFT);\n      if (this.offset !== 0) return true;\n    });\n  }\n  pushLeftBeforeInput() {\n    // cases:\n    // filled input: 00|\n    // optional empty input: 00[]|\n    // nested block: XX<[]>|\n    return this._pushLeft(() => {\n      if (this.block.isFixed) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n  pushLeftBeforeRequired() {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n  pushRightBeforeFilled() {\n    return this._pushRight(() => {\n      if (this.block.isFixed || !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_RIGHT);\n      if (this.offset !== this.block.value.length) return true;\n    });\n  }\n  pushRightBeforeInput() {\n    return this._pushRight(() => {\n      if (this.block.isFixed) return;\n\n      // const o = this.offset;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n      // aa|X\n      // aa<X|[]>X_    - this will not work\n      // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n      return true;\n    });\n  }\n  pushRightBeforeRequired() {\n    return this._pushRight(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      // TODO check |[*]XX_\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      return true;\n    });\n  }\n}\n\nexport { PatternCursor as default };\n","import ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport '../../core/holder.js';\n\nclass PatternFixedDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n  get value() {\n    return this._value;\n  }\n  get unmaskedValue() {\n    return this.isUnmasking ? this.value : '';\n  }\n  get rawInputValue() {\n    return this._isRawInput ? this.value : '';\n  }\n  get displayValue() {\n    return this.value;\n  }\n  reset() {\n    this._isRawInput = false;\n    this._value = '';\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n    return new ChangeDetails();\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this._value.length;\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    return this._isRawInput ? toPos - fromPos : 0;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return Boolean(this._value);\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (this.isFilled) return new ChangeDetails();\n    const appendEager = this.eager === true || this.eager === 'append';\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !appendEager) && !flags.tail;\n    const details = new ChangeDetails({\n      inserted: this.char,\n      rawInserted: isResolved ? this.char : ''\n    });\n    this._value = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n    return details;\n  }\n  _appendEager() {\n    return this._appendChar(this.char, {\n      tail: true\n    });\n  }\n  _appendPlaceholder() {\n    const details = new ChangeDetails();\n    if (this.isFilled) return details;\n    this._value = details.inserted = this.char;\n    return details;\n  }\n  extractTail() {\n    return new ContinuousTailDetails('');\n  }\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n  append(str, flags, tail) {\n    const details = this._appendChar(str[0], flags);\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n    return details;\n  }\n  doCommit() {}\n  get state() {\n    return {\n      _value: this._value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n    this._isRawInput = Boolean(state._rawInputValue);\n  }\n  pad(flags) {\n    return this._appendPlaceholder();\n  }\n}\n\nexport { PatternFixedDefinition as default };\n","import createMask from '../factory.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION } from '../../core/utils.js';\nimport '../../core/holder.js';\n\nclass PatternInputDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    const {\n      parent,\n      isOptional,\n      placeholderChar,\n      displayChar,\n      lazy,\n      eager,\n      ...maskOpts\n    } = opts;\n    this.masked = createMask(maskOpts);\n    Object.assign(this, {\n      parent,\n      isOptional,\n      placeholderChar,\n      displayChar,\n      lazy,\n      eager\n    });\n  }\n  reset() {\n    this.isFilled = false;\n    this.masked.reset();\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    if (fromPos === 0 && toPos >= 1) {\n      this.isFilled = false;\n      return this.masked.remove(fromPos, toPos);\n    }\n    return new ChangeDetails();\n  }\n  get value() {\n    return this.masked.value || (this.isFilled && !this.isOptional ? this.placeholderChar : '');\n  }\n  get unmaskedValue() {\n    return this.masked.unmaskedValue;\n  }\n  get rawInputValue() {\n    return this.masked.rawInputValue;\n  }\n  get displayValue() {\n    return this.masked.value && this.displayChar || this.value;\n  }\n  get isComplete() {\n    return Boolean(this.masked.value) || this.isOptional;\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (this.isFilled) return new ChangeDetails();\n    const state = this.masked.state;\n    // simulate input\n    let details = this.masked._appendChar(ch, this.currentMaskFlags(flags));\n    if (details.inserted && this.doValidate(flags) === false) {\n      details = new ChangeDetails();\n      this.masked.state = state;\n    }\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n      details.inserted = this.placeholderChar;\n    }\n    details.skip = !details.inserted && !this.isOptional;\n    this.isFilled = Boolean(details.inserted);\n    return details;\n  }\n  append(str, flags, tail) {\n    // TODO probably should be done via _appendChar\n    return this.masked.append(str, this.currentMaskFlags(flags), tail);\n  }\n  _appendPlaceholder() {\n    if (this.isFilled || this.isOptional) return new ChangeDetails();\n    this.isFilled = true;\n    return new ChangeDetails({\n      inserted: this.placeholderChar\n    });\n  }\n  _appendEager() {\n    return new ChangeDetails();\n  }\n  extractTail(fromPos, toPos) {\n    return this.masked.extractTail(fromPos, toPos);\n  }\n  appendTail(tail) {\n    return this.masked.appendTail(tail);\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.masked.extractInput(fromPos, toPos, flags);\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this.value.length;\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return this.isComplete ? boundPos : minPos;\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        return this.isComplete ? boundPos : maxPos;\n      case DIRECTION.NONE:\n      default:\n        return boundPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.value.slice(fromPos, toPos).length;\n  }\n  doValidate(flags) {\n    return this.masked.doValidate(this.currentMaskFlags(flags)) && (!this.parent || this.parent.doValidate(this.currentMaskFlags(flags)));\n  }\n  doCommit() {\n    this.masked.doCommit();\n  }\n  get state() {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue,\n      masked: this.masked.state,\n      isFilled: this.isFilled\n    };\n  }\n  set state(state) {\n    this.masked.state = state.masked;\n    this.isFilled = state.isFilled;\n  }\n  currentMaskFlags(flags) {\n    var _flags$_beforeTailSta;\n    return {\n      ...flags,\n      _beforeTailState: (flags == null || (_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta.masked) || (flags == null ? void 0 : flags._beforeTailState)\n    };\n  }\n  pad(flags) {\n    return new ChangeDetails();\n  }\n}\nPatternInputDefinition.DEFAULT_DEFINITIONS = {\n  '0': /\\d/,\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n  // http://stackoverflow.com/a/22075070\n  '*': /./\n};\n\nexport { PatternInputDefinition as default };\n","import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by RegExp */\nclass MaskedRegExp extends Masked {\n  /** */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const mask = opts.mask;\n    if (mask) opts.validate = value => value.search(mask) >= 0;\n    super._update(opts);\n  }\n}\nIMask.MaskedRegExp = MaskedRegExp;\n\nexport { MaskedRegExp as default };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport { DIRECTION } from '../core/utils.js';\nimport Masked from './base.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport ChunksTailDetails from './pattern/chunk-tail-details.js';\nimport PatternCursor from './pattern/cursor.js';\nimport PatternFixedDefinition from './pattern/fixed-definition.js';\nimport PatternInputDefinition from './pattern/input-definition.js';\nimport './regexp.js';\nimport '../core/continuous-tail-details.js';\n\n/** Pattern mask */\nclass MaskedPattern extends Masked {\n  /** */\n\n  /** */\n\n  /** Single char for empty input */\n\n  /** Single char for filled input */\n\n  /** Show placeholder only when needed */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    super({\n      ...MaskedPattern.DEFAULTS,\n      ...opts,\n      definitions: Object.assign({}, PatternInputDefinition.DEFAULT_DEFINITIONS, opts == null ? void 0 : opts.definitions)\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n    super._update(opts);\n    this._rebuildMask();\n  }\n  _rebuildMask() {\n    const defs = this.definitions;\n    this._blocks = [];\n    this.exposeBlock = undefined;\n    this._stops = [];\n    this._maskedBlocks = {};\n    const pattern = this.mask;\n    if (!pattern || !defs) return;\n    let unmaskingBlock = false;\n    let optionalBlock = false;\n    for (let i = 0; i < pattern.length; ++i) {\n      if (this.blocks) {\n        const p = pattern.slice(i);\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\n        // order by key length\n        bNames.sort((a, b) => b.length - a.length);\n        // use block name with max length\n        const bName = bNames[0];\n        if (bName) {\n          const {\n            expose,\n            repeat,\n            ...bOpts\n          } = normalizeOpts(this.blocks[bName]); // TODO type Opts<Arg & Extra>\n          const blockOpts = {\n            lazy: this.lazy,\n            eager: this.eager,\n            placeholderChar: this.placeholderChar,\n            displayChar: this.displayChar,\n            overwrite: this.overwrite,\n            autofix: this.autofix,\n            ...bOpts,\n            repeat,\n            parent: this\n          };\n          const maskedBlock = repeat != null ? new IMask.RepeatBlock(blockOpts /* TODO */) : createMask(blockOpts);\n          if (maskedBlock) {\n            this._blocks.push(maskedBlock);\n            if (expose) this.exposeBlock = maskedBlock;\n\n            // store block index\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\n          }\n          i += bName.length - 1;\n          continue;\n        }\n      }\n      let char = pattern[i];\n      let isInput = (char in defs);\n      if (char === MaskedPattern.STOP_CHAR) {\n        this._stops.push(this._blocks.length);\n        continue;\n      }\n      if (char === '{' || char === '}') {\n        unmaskingBlock = !unmaskingBlock;\n        continue;\n      }\n      if (char === '[' || char === ']') {\n        optionalBlock = !optionalBlock;\n        continue;\n      }\n      if (char === MaskedPattern.ESCAPE_CHAR) {\n        ++i;\n        char = pattern[i];\n        if (!char) break;\n        isInput = false;\n      }\n      const def = isInput ? new PatternInputDefinition({\n        isOptional: optionalBlock,\n        lazy: this.lazy,\n        eager: this.eager,\n        placeholderChar: this.placeholderChar,\n        displayChar: this.displayChar,\n        ...normalizeOpts(defs[char]),\n        parent: this\n      }) : new PatternFixedDefinition({\n        char,\n        eager: this.eager,\n        isUnmasking: unmaskingBlock\n      });\n      this._blocks.push(def);\n    }\n  }\n  get state() {\n    return {\n      ...super.state,\n      _blocks: this._blocks.map(b => b.state)\n    };\n  }\n  set state(state) {\n    if (!state) {\n      this.reset();\n      return;\n    }\n    const {\n      _blocks,\n      ...maskedState\n    } = state;\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\n    super.state = maskedState;\n  }\n  reset() {\n    super.reset();\n    this._blocks.forEach(b => b.reset());\n  }\n  get isComplete() {\n    return this.exposeBlock ? this.exposeBlock.isComplete : this._blocks.every(b => b.isComplete);\n  }\n  get isFilled() {\n    return this._blocks.every(b => b.isFilled);\n  }\n  get isFixed() {\n    return this._blocks.every(b => b.isFixed);\n  }\n  get isOptional() {\n    return this._blocks.every(b => b.isOptional);\n  }\n  doCommit() {\n    this._blocks.forEach(b => b.doCommit());\n    super.doCommit();\n  }\n  get unmaskedValue() {\n    return this.exposeBlock ? this.exposeBlock.unmaskedValue : this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\n  }\n  set unmaskedValue(unmaskedValue) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.unmaskedValue = unmaskedValue;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.unmaskedValue = unmaskedValue;\n  }\n  get value() {\n    return this.exposeBlock ? this.exposeBlock.value :\n    // TODO return _value when not in change?\n    this._blocks.reduce((str, b) => str += b.value, '');\n  }\n  set value(value) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.value = value;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.value = value;\n  }\n  get typedValue() {\n    return this.exposeBlock ? this.exposeBlock.typedValue : super.typedValue;\n  }\n  set typedValue(value) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.typedValue = value;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.typedValue = value;\n  }\n  get displayValue() {\n    return this._blocks.reduce((str, b) => str += b.displayValue, '');\n  }\n  appendTail(tail) {\n    return super.appendTail(tail).aggregate(this._appendPlaceholder());\n  }\n  _appendEager() {\n    var _this$_mapPosToBlock;\n    const details = new ChangeDetails();\n    let startBlockIndex = (_this$_mapPosToBlock = this._mapPosToBlock(this.displayValue.length)) == null ? void 0 : _this$_mapPosToBlock.index;\n    if (startBlockIndex == null) return details;\n\n    // TODO test if it works for nested pattern masks\n    if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n    for (let bi = startBlockIndex; bi < this._blocks.length; ++bi) {\n      const d = this._blocks[bi]._appendEager();\n      if (!d.inserted) break;\n      details.aggregate(d);\n    }\n    return details;\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const blockIter = this._mapPosToBlock(this.displayValue.length);\n    const details = new ChangeDetails();\n    if (!blockIter) return details;\n    for (let bi = blockIter.index, block; block = this._blocks[bi]; ++bi) {\n      var _flags$_beforeTailSta;\n      const blockDetails = block._appendChar(ch, {\n        ...flags,\n        _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) == null || (_flags$_beforeTailSta = _flags$_beforeTailSta._blocks) == null ? void 0 : _flags$_beforeTailSta[bi]\n      });\n      details.aggregate(blockDetails);\n      if (blockDetails.consumed) break; // go next char\n    }\n    return details;\n  }\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const chunkTail = new ChunksTailDetails();\n    if (fromPos === toPos) return chunkTail;\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n      const blockChunk = b.extractTail(bFromPos, bToPos);\n      blockChunk.stop = this._findStopBefore(bi);\n      blockChunk.from = this._blockStartPos(bi);\n      if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n      chunkTail.extend(blockChunk);\n    });\n    return chunkTail;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (fromPos === toPos) return '';\n    let input = '';\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n      input += b.extractInput(fromPos, toPos, flags);\n    });\n    return input;\n  }\n  _findStopBefore(blockIndex) {\n    let stopBefore;\n    for (let si = 0; si < this._stops.length; ++si) {\n      const stop = this._stops[si];\n      if (stop <= blockIndex) stopBefore = stop;else break;\n    }\n    return stopBefore;\n  }\n\n  /** Appends placeholder depending on laziness */\n  _appendPlaceholder(toBlockIndex) {\n    const details = new ChangeDetails();\n    if (this.lazy && toBlockIndex == null) return details;\n    const startBlockIter = this._mapPosToBlock(this.displayValue.length);\n    if (!startBlockIter) return details;\n    const startBlockIndex = startBlockIter.index;\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n    this._blocks.slice(startBlockIndex, endBlockIndex).forEach(b => {\n      if (!b.lazy || toBlockIndex != null) {\n        var _blocks2;\n        details.aggregate(b._appendPlaceholder((_blocks2 = b._blocks) == null ? void 0 : _blocks2.length));\n      }\n    });\n    return details;\n  }\n\n  /** Finds block in pos */\n  _mapPosToBlock(pos) {\n    let accVal = '';\n    for (let bi = 0; bi < this._blocks.length; ++bi) {\n      const block = this._blocks[bi];\n      const blockStartPos = accVal.length;\n      accVal += block.displayValue;\n      if (pos <= accVal.length) {\n        return {\n          index: bi,\n          offset: pos - blockStartPos\n        };\n      }\n    }\n  }\n  _blockStartPos(blockIndex) {\n    return this._blocks.slice(0, blockIndex).reduce((pos, b) => pos += b.displayValue.length, 0);\n  }\n  _forEachBlocksInRange(fromPos, toPos, fn) {\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const fromBlockIter = this._mapPosToBlock(fromPos);\n    if (fromBlockIter) {\n      const toBlockIter = this._mapPosToBlock(toPos);\n      // process first block\n      const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n      const fromBlockStartPos = fromBlockIter.offset;\n      const fromBlockEndPos = toBlockIter && isSameBlock ? toBlockIter.offset : this._blocks[fromBlockIter.index].displayValue.length;\n      fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n      if (toBlockIter && !isSameBlock) {\n        // process intermediate blocks\n        for (let bi = fromBlockIter.index + 1; bi < toBlockIter.index; ++bi) {\n          fn(this._blocks[bi], bi, 0, this._blocks[bi].displayValue.length);\n        }\n\n        // process last block\n        fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n      }\n    }\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const removeDetails = super.remove(fromPos, toPos);\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\n    });\n    return removeDetails;\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    if (!this._blocks.length) return 0;\n    const cursor = new PatternCursor(this, cursorPos);\n    if (direction === DIRECTION.NONE) {\n      // -------------------------------------------------\n      // NONE should only go out from fixed to the right!\n      // -------------------------------------------------\n      if (cursor.pushRightBeforeInput()) return cursor.pos;\n      cursor.popState();\n      if (cursor.pushLeftBeforeInput()) return cursor.pos;\n      return this.displayValue.length;\n    }\n\n    // FORCE is only about a|* otherwise is 0\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n      // try to break fast when *|a\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeFilled();\n        if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n        cursor.popState();\n      }\n\n      // forward flow\n      cursor.pushLeftBeforeInput();\n      cursor.pushLeftBeforeRequired();\n      cursor.pushLeftBeforeFilled();\n\n      // backward flow\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n      }\n      if (cursor.ok) return cursor.pos;\n      if (direction === DIRECTION.FORCE_LEFT) return 0;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      return 0;\n    }\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n      // forward flow\n      cursor.pushRightBeforeInput();\n      cursor.pushRightBeforeRequired();\n      if (cursor.pushRightBeforeFilled()) return cursor.pos;\n      if (direction === DIRECTION.FORCE_RIGHT) return this.displayValue.length;\n\n      // backward flow\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n    }\n    return cursorPos;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    let total = 0;\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      total += b.totalInputPositions(bFromPos, bToPos);\n    });\n    return total;\n  }\n\n  /** Get block by name */\n  maskedBlock(name) {\n    return this.maskedBlocks(name)[0];\n  }\n\n  /** Get all blocks by name */\n  maskedBlocks(name) {\n    const indices = this._maskedBlocks[name];\n    if (!indices) return [];\n    return indices.map(gi => this._blocks[gi]);\n  }\n  pad(flags) {\n    const details = new ChangeDetails();\n    this._forEachBlocksInRange(0, this.displayValue.length, b => details.aggregate(b.pad(flags)));\n    return details;\n  }\n}\nMaskedPattern.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  lazy: true,\n  placeholderChar: '_'\n};\nMaskedPattern.STOP_CHAR = '`';\nMaskedPattern.ESCAPE_CHAR = '\\\\';\nMaskedPattern.InputDefinition = PatternInputDefinition;\nMaskedPattern.FixedDefinition = PatternFixedDefinition;\nIMask.MaskedPattern = MaskedPattern;\n\nexport { MaskedPattern as default };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport MaskedPattern from './pattern.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which accepts ranges */\nclass MaskedRange extends MaskedPattern {\n  /**\n    Optionally sets max length of pattern.\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n  */\n\n  /** Min bound */\n\n  /** Max bound */\n\n  get _matchFrom() {\n    return this.maxLength - String(this.from).length;\n  }\n  constructor(opts) {\n    super(opts); // mask will be created in _update\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      to = this.to || 0,\n      from = this.from || 0,\n      maxLength = this.maxLength || 0,\n      autofix = this.autofix,\n      ...patternOpts\n    } = opts;\n    this.to = to;\n    this.from = from;\n    this.maxLength = Math.max(String(to).length, maxLength);\n    this.autofix = autofix;\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    let sameCharsCount = 0;\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\n    patternOpts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(this.maxLength - sameCharsCount);\n    super._update(patternOpts);\n  }\n  get isComplete() {\n    return super.isComplete && Boolean(this.value);\n  }\n  boundaries(str) {\n    let minstr = '';\n    let maxstr = '';\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n    if (num) {\n      minstr = '0'.repeat(placeholder.length) + num;\n      maxstr = '9'.repeat(placeholder.length) + num;\n    }\n    minstr = minstr.padEnd(this.maxLength, '0');\n    maxstr = maxstr.padEnd(this.maxLength, '9');\n    return [minstr, maxstr];\n  }\n  doPrepareChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let details;\n    [ch, details] = super.doPrepareChar(ch.replace(/\\D/g, ''), flags);\n    if (!ch) details.skip = !this.isComplete;\n    return [ch, details];\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (!this.autofix || this.value.length + 1 > this.maxLength) return super._appendCharRaw(ch, flags);\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    const [minstr, maxstr] = this.boundaries(this.value + ch);\n    if (Number(maxstr) < this.from) return super._appendCharRaw(fromStr[this.value.length], flags);\n    if (Number(minstr) > this.to) {\n      if (!flags.tail && this.autofix === 'pad' && this.value.length + 1 < this.maxLength) {\n        return super._appendCharRaw(fromStr[this.value.length], flags).aggregate(this._appendCharRaw(ch, flags));\n      }\n      return super._appendCharRaw(toStr[this.value.length], flags);\n    }\n    return super._appendCharRaw(ch, flags);\n  }\n  doValidate(flags) {\n    const str = this.value;\n    const firstNonZero = str.search(/[^0]/);\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n    const [minstr, maxstr] = this.boundaries(str);\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to && super.doValidate(flags);\n  }\n  pad(flags) {\n    const details = new ChangeDetails();\n    if (this.value.length === this.maxLength) return details;\n    const value = this.value;\n    const padLength = this.maxLength - this.value.length;\n    if (padLength) {\n      this.reset();\n      for (let i = 0; i < padLength; ++i) {\n        details.aggregate(super._appendCharRaw('0', flags));\n      }\n\n      // append tail\n      value.split('').forEach(ch => this._appendCharRaw(ch));\n    }\n    return details;\n  }\n}\nIMask.MaskedRange = MaskedRange;\n\nexport { MaskedRange as default };\n","import MaskedPattern from './pattern.js';\nimport MaskedRange from './range.js';\nimport IMask from '../core/holder.js';\nimport { isString } from '../core/utils.js';\nimport '../core/change-details.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\nconst DefaultPattern = 'd{.}`m{.}`Y';\n\n// Make format and parse required when pattern is provided\n\n/** Date mask */\nclass MaskedDate extends MaskedPattern {\n  static extractPatternOptions(opts) {\n    const {\n      mask,\n      pattern,\n      ...patternOpts\n    } = opts;\n    return {\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern\n    };\n  }\n\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n\n  /** Start date */\n\n  /** End date */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  constructor(opts) {\n    super(MaskedDate.extractPatternOptions({\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    }));\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      mask,\n      pattern,\n      blocks,\n      ...patternOpts\n    } = {\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    };\n    const patternBlocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n    // adjust year block\n    if (opts.min) patternBlocks.Y.from = opts.min.getFullYear();\n    if (opts.max) patternBlocks.Y.to = opts.max.getFullYear();\n    if (opts.min && opts.max && patternBlocks.Y.from === patternBlocks.Y.to) {\n      patternBlocks.m.from = opts.min.getMonth() + 1;\n      patternBlocks.m.to = opts.max.getMonth() + 1;\n      if (patternBlocks.m.from === patternBlocks.m.to) {\n        patternBlocks.d.from = opts.min.getDate();\n        patternBlocks.d.to = opts.max.getDate();\n      }\n    }\n    Object.assign(patternBlocks, this.blocks, blocks);\n    super._update({\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern,\n      blocks: patternBlocks\n    });\n  }\n  doValidate(flags) {\n    const date = this.date;\n    return super.doValidate(flags) && (!this.isComplete || this.isDateExist(this.value) && date != null && (this.min == null || this.min <= date) && (this.max == null || date <= this.max));\n  }\n\n  /** Checks if date is exists */\n  isDateExist(str) {\n    return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n  }\n\n  /** Parsed Date */\n  get date() {\n    return this.typedValue;\n  }\n  set date(date) {\n    this.typedValue = date;\n  }\n  get typedValue() {\n    return this.isComplete ? super.typedValue : null;\n  }\n  set typedValue(value) {\n    super.typedValue = value;\n  }\n  maskEquals(mask) {\n    return mask === Date || super.maskEquals(mask);\n  }\n  optionsIsChanged(opts) {\n    return super.optionsIsChanged(MaskedDate.extractPatternOptions(opts));\n  }\n}\nMaskedDate.GET_DEFAULT_BLOCKS = () => ({\n  d: {\n    mask: MaskedRange,\n    from: 1,\n    to: 31,\n    maxLength: 2\n  },\n  m: {\n    mask: MaskedRange,\n    from: 1,\n    to: 12,\n    maxLength: 2\n  },\n  Y: {\n    mask: MaskedRange,\n    from: 1900,\n    to: 9999\n  }\n});\nMaskedDate.DEFAULTS = {\n  ...MaskedPattern.DEFAULTS,\n  mask: Date,\n  pattern: DefaultPattern,\n  format: (date, masked) => {\n    if (!date) return '';\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n    return [day, month, year].join('.');\n  },\n  parse: (str, masked) => {\n    const [day, month, year] = str.split('.').map(Number);\n    return new Date(year, month - 1, day);\n  }\n};\nIMask.MaskedDate = MaskedDate;\n\nexport { MaskedDate as default };\n","import { DIRECTION, objectIncludes } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\n/** Dynamic mask for choosing appropriate mask in run-time */\nclass MaskedDynamic extends Masked {\n  constructor(opts) {\n    super({\n      ...MaskedDynamic.DEFAULTS,\n      ...opts\n    });\n    this.currentMask = undefined;\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update(opts);\n    if ('mask' in opts) {\n      this.exposeMask = undefined;\n      // mask could be totally dynamic with only `dispatch` option\n      this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(m => {\n        const {\n          expose,\n          ...maskOpts\n        } = normalizeOpts(m);\n        const masked = createMask({\n          overwrite: this._overwrite,\n          eager: this._eager,\n          skipInvalid: this._skipInvalid,\n          ...maskOpts\n        });\n        if (expose) this.exposeMask = masked;\n        return masked;\n      }) : [];\n\n      // this.currentMask = this.doDispatch(''); // probably not needed but lets see\n    }\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = this._applyDispatch(ch, flags);\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n    }\n    return details;\n  }\n  _applyDispatch(appended, flags, tail) {\n    if (appended === void 0) {\n      appended = '';\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (tail === void 0) {\n      tail = '';\n    }\n    const prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;\n    const inputValue = this.rawInputValue;\n    const insertValue = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._rawInputValue : inputValue;\n    const tailValue = inputValue.slice(insertValue.length);\n    const prevMask = this.currentMask;\n    const details = new ChangeDetails();\n    const prevMaskState = prevMask == null ? void 0 : prevMask.state;\n\n    // clone flags to prevent overwriting `_beforeTailState`\n    this.currentMask = this.doDispatch(appended, {\n      ...flags\n    }, tail);\n\n    // restore state after dispatch\n    if (this.currentMask) {\n      if (this.currentMask !== prevMask) {\n        // if mask changed reapply input\n        this.currentMask.reset();\n        if (insertValue) {\n          this.currentMask.append(insertValue, {\n            raw: true\n          });\n          details.tailShift = this.currentMask.value.length - prevValueBeforeTail.length;\n        }\n        if (tailValue) {\n          details.tailShift += this.currentMask.append(tailValue, {\n            raw: true,\n            tail: true\n          }).tailShift;\n        }\n      } else if (prevMaskState) {\n        // Dispatch can do something bad with state, so\n        // restore prev mask state\n        this.currentMask.state = prevMaskState;\n      }\n    }\n    return details;\n  }\n  _appendPlaceholder() {\n    const details = this._applyDispatch();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendPlaceholder());\n    }\n    return details;\n  }\n  _appendEager() {\n    const details = this._applyDispatch();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendEager());\n    }\n    return details;\n  }\n  appendTail(tail) {\n    const details = new ChangeDetails();\n    if (tail) details.aggregate(this._applyDispatch('', {}, tail));\n    return details.aggregate(this.currentMask ? this.currentMask.appendTail(tail) : super.appendTail(tail));\n  }\n  currentMaskFlags(flags) {\n    var _flags$_beforeTailSta, _flags$_beforeTailSta2;\n    return {\n      ...flags,\n      _beforeTailState: ((_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta.currentMaskRef) === this.currentMask && ((_flags$_beforeTailSta2 = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta2.currentMask) || flags._beforeTailState\n    };\n  }\n  doDispatch(appended, flags, tail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (tail === void 0) {\n      tail = '';\n    }\n    return this.dispatch(appended, this, flags, tail);\n  }\n  doValidate(flags) {\n    return super.doValidate(flags) && (!this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags)));\n  }\n  doPrepare(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let [s, details] = super.doPrepare(str, flags);\n    if (this.currentMask) {\n      let currentDetails;\n      [s, currentDetails] = super.doPrepare(s, this.currentMaskFlags(flags));\n      details = details.aggregate(currentDetails);\n    }\n    return [s, details];\n  }\n  doPrepareChar(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let [s, details] = super.doPrepareChar(str, flags);\n    if (this.currentMask) {\n      let currentDetails;\n      [s, currentDetails] = super.doPrepareChar(s, this.currentMaskFlags(flags));\n      details = details.aggregate(currentDetails);\n    }\n    return [s, details];\n  }\n  reset() {\n    var _this$currentMask;\n    (_this$currentMask = this.currentMask) == null || _this$currentMask.reset();\n    this.compiledMasks.forEach(m => m.reset());\n  }\n  get value() {\n    return this.exposeMask ? this.exposeMask.value : this.currentMask ? this.currentMask.value : '';\n  }\n  set value(value) {\n    if (this.exposeMask) {\n      this.exposeMask.value = value;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n    } else super.value = value;\n  }\n  get unmaskedValue() {\n    return this.exposeMask ? this.exposeMask.unmaskedValue : this.currentMask ? this.currentMask.unmaskedValue : '';\n  }\n  set unmaskedValue(unmaskedValue) {\n    if (this.exposeMask) {\n      this.exposeMask.unmaskedValue = unmaskedValue;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n    } else super.unmaskedValue = unmaskedValue;\n  }\n  get typedValue() {\n    return this.exposeMask ? this.exposeMask.typedValue : this.currentMask ? this.currentMask.typedValue : '';\n  }\n  set typedValue(typedValue) {\n    if (this.exposeMask) {\n      this.exposeMask.typedValue = typedValue;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n      return;\n    }\n    let unmaskedValue = String(typedValue);\n\n    // double check it\n    if (this.currentMask) {\n      this.currentMask.typedValue = typedValue;\n      unmaskedValue = this.currentMask.unmaskedValue;\n    }\n    this.unmaskedValue = unmaskedValue;\n  }\n  get displayValue() {\n    return this.currentMask ? this.currentMask.displayValue : '';\n  }\n  get isComplete() {\n    var _this$currentMask2;\n    return Boolean((_this$currentMask2 = this.currentMask) == null ? void 0 : _this$currentMask2.isComplete);\n  }\n  get isFilled() {\n    var _this$currentMask3;\n    return Boolean((_this$currentMask3 = this.currentMask) == null ? void 0 : _this$currentMask3.isFilled);\n  }\n  remove(fromPos, toPos) {\n    const details = new ChangeDetails();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask.remove(fromPos, toPos))\n      // update with dispatch\n      .aggregate(this._applyDispatch());\n    }\n    return details;\n  }\n  get state() {\n    var _this$currentMask4;\n    return {\n      ...super.state,\n      _rawInputValue: this.rawInputValue,\n      compiledMasks: this.compiledMasks.map(m => m.state),\n      currentMaskRef: this.currentMask,\n      currentMask: (_this$currentMask4 = this.currentMask) == null ? void 0 : _this$currentMask4.state\n    };\n  }\n  set state(state) {\n    const {\n      compiledMasks,\n      currentMaskRef,\n      currentMask,\n      ...maskedState\n    } = state;\n    if (compiledMasks) this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\n    if (currentMaskRef != null) {\n      this.currentMask = currentMaskRef;\n      this.currentMask.state = currentMask;\n    }\n    super.state = maskedState;\n  }\n  extractInput(fromPos, toPos, flags) {\n    return this.currentMask ? this.currentMask.extractInput(fromPos, toPos, flags) : '';\n  }\n  extractTail(fromPos, toPos) {\n    return this.currentMask ? this.currentMask.extractTail(fromPos, toPos) : super.extractTail(fromPos, toPos);\n  }\n  doCommit() {\n    if (this.currentMask) this.currentMask.doCommit();\n    super.doCommit();\n  }\n  nearestInputPos(cursorPos, direction) {\n    return this.currentMask ? this.currentMask.nearestInputPos(cursorPos, direction) : super.nearestInputPos(cursorPos, direction);\n  }\n  get overwrite() {\n    return this.currentMask ? this.currentMask.overwrite : this._overwrite;\n  }\n  set overwrite(overwrite) {\n    this._overwrite = overwrite;\n  }\n  get eager() {\n    return this.currentMask ? this.currentMask.eager : this._eager;\n  }\n  set eager(eager) {\n    this._eager = eager;\n  }\n  get skipInvalid() {\n    return this.currentMask ? this.currentMask.skipInvalid : this._skipInvalid;\n  }\n  set skipInvalid(skipInvalid) {\n    this._skipInvalid = skipInvalid;\n  }\n  get autofix() {\n    return this.currentMask ? this.currentMask.autofix : this._autofix;\n  }\n  set autofix(autofix) {\n    this._autofix = autofix;\n  }\n  maskEquals(mask) {\n    return Array.isArray(mask) ? this.compiledMasks.every((m, mi) => {\n      if (!mask[mi]) return;\n      const {\n        mask: oldMask,\n        ...restOpts\n      } = mask[mi];\n      return objectIncludes(m, restOpts) && m.maskEquals(oldMask);\n    }) : super.maskEquals(mask);\n  }\n  typedValueEquals(value) {\n    var _this$currentMask5;\n    return Boolean((_this$currentMask5 = this.currentMask) == null ? void 0 : _this$currentMask5.typedValueEquals(value));\n  }\n}\n/** Currently chosen mask */\n/** Currently chosen mask */\n/** Compliled {@link Masked} options */\n/** Chooses {@link Masked} depending on input value */\nMaskedDynamic.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  dispatch: (appended, masked, flags, tail) => {\n    if (!masked.compiledMasks.length) return;\n    const inputValue = masked.rawInputValue;\n\n    // simulate input\n    const inputs = masked.compiledMasks.map((m, index) => {\n      const isCurrent = masked.currentMask === m;\n      const startInputPos = isCurrent ? m.displayValue.length : m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT);\n      if (m.rawInputValue !== inputValue) {\n        m.reset();\n        m.append(inputValue, {\n          raw: true\n        });\n      } else if (!isCurrent) {\n        m.remove(startInputPos);\n      }\n      m.append(appended, masked.currentMaskFlags(flags));\n      m.appendTail(tail);\n      return {\n        index,\n        weight: m.rawInputValue.length,\n        totalInputPositions: m.totalInputPositions(0, Math.max(startInputPos, m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT)))\n      };\n    });\n\n    // pop masks with longer values first\n    inputs.sort((i1, i2) => i2.weight - i1.weight || i2.totalInputPositions - i1.totalInputPositions);\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\nIMask.MaskedDynamic = MaskedDynamic;\n\nexport { MaskedDynamic as default };\n","import MaskedPattern from './pattern.js';\nimport IMask from '../core/holder.js';\nimport ChangeDetails from '../core/change-details.js';\nimport { DIRECTION } from '../core/utils.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport './base.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which validates enum values */\nclass MaskedEnum extends MaskedPattern {\n  constructor(opts) {\n    super({\n      ...MaskedEnum.DEFAULTS,\n      ...opts\n    }); // mask will be created in _update\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      enum: enum_,\n      ...eopts\n    } = opts;\n    if (enum_) {\n      const lengths = enum_.map(e => e.length);\n      const requiredLength = Math.min(...lengths);\n      const optionalLength = Math.max(...lengths) - requiredLength;\n      eopts.mask = '*'.repeat(requiredLength);\n      if (optionalLength) eopts.mask += '[' + '*'.repeat(optionalLength) + ']';\n      this.enum = enum_;\n    }\n    super._update(eopts);\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const matchFrom = Math.min(this.nearestInputPos(0, DIRECTION.FORCE_RIGHT), this.value.length);\n    const matches = this.enum.filter(e => this.matchValue(e, this.unmaskedValue + ch, matchFrom));\n    if (matches.length) {\n      if (matches.length === 1) {\n        this._forEachBlocksInRange(0, this.value.length, (b, bi) => {\n          const mch = matches[0][bi];\n          if (bi >= this.value.length || mch === b.value) return;\n          b.reset();\n          b._appendChar(mch, flags);\n        });\n      }\n      const d = super._appendCharRaw(matches[0][this.value.length], flags);\n      if (matches.length === 1) {\n        matches[0].slice(this.unmaskedValue.length).split('').forEach(mch => d.aggregate(super._appendCharRaw(mch)));\n      }\n      return d;\n    }\n    return new ChangeDetails({\n      skip: !this.isComplete\n    });\n  }\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    // just drop tail\n    return new ContinuousTailDetails('', fromPos);\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    if (fromPos === toPos) return new ChangeDetails();\n    const matchFrom = Math.min(super.nearestInputPos(0, DIRECTION.FORCE_RIGHT), this.value.length);\n    let pos;\n    for (pos = fromPos; pos >= 0; --pos) {\n      const matches = this.enum.filter(e => this.matchValue(e, this.value.slice(matchFrom, pos), matchFrom));\n      if (matches.length > 1) break;\n    }\n    const details = super.remove(pos, toPos);\n    details.tailShift += pos - fromPos;\n    return details;\n  }\n  get isComplete() {\n    return this.enum.indexOf(this.value) >= 0;\n  }\n}\n/** Match enum value */\nMaskedEnum.DEFAULTS = {\n  ...MaskedPattern.DEFAULTS,\n  matchValue: (estr, istr, matchFrom) => estr.indexOf(istr, matchFrom) === matchFrom\n};\nIMask.MaskedEnum = MaskedEnum;\n\nexport { MaskedEnum as default };\n","import { escapeRegExp, DIRECTION } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\nvar _MaskedNumber;\n/** Number mask */\nclass MaskedNumber extends Masked {\n  /** Single char */\n\n  /** Single char */\n\n  /** Array of single chars */\n\n  /** */\n\n  /** */\n\n  /** Digits after point */\n\n  /** Flag to remove leading and trailing zeros in the end of editing */\n\n  /** Flag to pad trailing zeros after point in the end of editing */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  constructor(opts) {\n    super({\n      ...MaskedNumber.DEFAULTS,\n      ...opts\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update(opts);\n    this._updateRegExps();\n  }\n  _updateRegExps() {\n    const start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n    const mid = '\\\\d*';\n    const end = (this.scale ? \"(\" + escapeRegExp(this.radix) + \"\\\\d{0,\" + this.scale + \"})?\" : '') + '$';\n    this._numberRegExp = new RegExp(start + mid + end);\n    this._mapToRadixRegExp = new RegExp(\"[\" + this.mapToRadix.map(escapeRegExp).join('') + \"]\", 'g');\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\n  }\n  _removeThousandsSeparators(value) {\n    return value.replace(this._thousandsSeparatorRegExp, '');\n  }\n  _insertThousandsSeparators(value) {\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n    const parts = value.split(this.radix);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n    return parts.join(this.radix);\n  }\n  doPrepareChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const [prepCh, details] = super.doPrepareChar(this._removeThousandsSeparators(this.scale && this.mapToRadix.length && (\n    /*\n      radix should be mapped when\n      1) input is done from keyboard = flags.input && flags.raw\n      2) unmasked value is set = !flags.input && !flags.raw\n      and should not be mapped when\n      1) value is set = flags.input && !flags.raw\n      2) raw value is set = !flags.input && flags.raw\n    */\n    flags.input && flags.raw || !flags.input && !flags.raw) ? ch.replace(this._mapToRadixRegExp, this.radix) : ch), flags);\n    if (ch && !prepCh) details.skip = true;\n    if (prepCh && !this.allowPositive && !this.value && prepCh !== '-') details.aggregate(this._appendChar('-'));\n    return [prepCh, details];\n  }\n  _separatorsCount(to, extendOnSeparators) {\n    if (extendOnSeparators === void 0) {\n      extendOnSeparators = false;\n    }\n    let count = 0;\n    for (let pos = 0; pos < to; ++pos) {\n      if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n        ++count;\n        if (extendOnSeparators) to += this.thousandsSeparator.length;\n      }\n    }\n    return count;\n  }\n  _separatorsCountFromSlice(slice) {\n    if (slice === void 0) {\n      slice = this._value;\n    }\n    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n    return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const prevBeforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n    const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n    this._value = this._removeThousandsSeparators(this.value);\n    const oldValue = this._value;\n    this._value += ch;\n    const num = this.number;\n    let accepted = !isNaN(num);\n    let skip = false;\n    if (accepted) {\n      let fixedNum;\n      if (this.min != null && this.min < 0 && this.number < this.min) fixedNum = this.min;\n      if (this.max != null && this.max > 0 && this.number > this.max) fixedNum = this.max;\n      if (fixedNum != null) {\n        if (this.autofix) {\n          this._value = this.format(fixedNum, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n          skip || (skip = oldValue === this._value && !flags.tail); // if not changed on tail it's still ok to proceed\n        } else {\n          accepted = false;\n        }\n      }\n      accepted && (accepted = Boolean(this._value.match(this._numberRegExp)));\n    }\n    let appendDetails;\n    if (!accepted) {\n      this._value = oldValue;\n      appendDetails = new ChangeDetails();\n    } else {\n      appendDetails = new ChangeDetails({\n        inserted: this._value.slice(oldValue.length),\n        rawInserted: skip ? '' : ch,\n        skip\n      });\n    }\n    this._value = this._insertThousandsSeparators(this._value);\n    const beforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n    return appendDetails;\n  }\n  _findSeparatorAround(pos) {\n    if (this.thousandsSeparator) {\n      const searchFrom = pos - this.thousandsSeparator.length + 1;\n      const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n      if (separatorPos <= pos) return separatorPos;\n    }\n    return -1;\n  }\n  _adjustRangeWithSeparators(from, to) {\n    const separatorAroundFromPos = this._findSeparatorAround(from);\n    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n    const separatorAroundToPos = this._findSeparatorAround(to);\n    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n    return [from, to];\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n    const valueBeforePos = this.value.slice(0, fromPos);\n    const valueAfterPos = this.value.slice(toPos);\n    const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n    return new ChangeDetails({\n      tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length\n    });\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (!this.thousandsSeparator) return cursorPos;\n    switch (direction) {\n      case DIRECTION.NONE:\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        {\n          const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n          if (separatorAtLeftPos >= 0) {\n            const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n            if (cursorPos < separatorAtLeftEndPos || this.value.length <= separatorAtLeftEndPos || direction === DIRECTION.FORCE_LEFT) {\n              return separatorAtLeftPos;\n            }\n          }\n          break;\n        }\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        {\n          const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n          if (separatorAtRightPos >= 0) {\n            return separatorAtRightPos + this.thousandsSeparator.length;\n          }\n        }\n    }\n    return cursorPos;\n  }\n  doCommit() {\n    if (this.value) {\n      const number = this.number;\n      let validnum = number;\n\n      // check bounds\n      if (this.min != null) validnum = Math.max(validnum, this.min);\n      if (this.max != null) validnum = Math.min(validnum, this.max);\n      if (validnum !== number) this.unmaskedValue = this.format(validnum, this);\n      let formatted = this.value;\n      if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n      if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n      this._value = formatted;\n    }\n    super.doCommit();\n  }\n  _normalizeZeros(value) {\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n    // remove leading zeros\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\n    // add leading zero\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n    if (parts.length > 1) {\n      parts[1] = parts[1].replace(/0*$/, ''); // remove trailing zeros\n      if (!parts[1].length) parts.length = 1; // remove fractional\n    }\n    return this._insertThousandsSeparators(parts.join(this.radix));\n  }\n  _padFractionalZeros(value) {\n    if (!value) return value;\n    const parts = value.split(this.radix);\n    if (parts.length < 2) parts.push('');\n    parts[1] = parts[1].padEnd(this.scale, '0');\n    return parts.join(this.radix);\n  }\n  doSkipInvalid(ch, flags, checkTail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const dropFractional = this.scale === 0 && ch !== this.thousandsSeparator && (ch === this.radix || ch === MaskedNumber.UNMASKED_RADIX || this.mapToRadix.includes(ch));\n    return super.doSkipInvalid(ch, flags, checkTail) && !dropFractional;\n  }\n  get unmaskedValue() {\n    return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix, MaskedNumber.UNMASKED_RADIX);\n  }\n  set unmaskedValue(unmaskedValue) {\n    super.unmaskedValue = unmaskedValue;\n  }\n  get typedValue() {\n    return this.parse(this.unmaskedValue, this);\n  }\n  set typedValue(n) {\n    this.rawInputValue = this.format(n, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n  }\n\n  /** Parsed Number */\n  get number() {\n    return this.typedValue;\n  }\n  set number(number) {\n    this.typedValue = number;\n  }\n  get allowNegative() {\n    return this.min != null && this.min < 0 || this.max != null && this.max < 0;\n  }\n  get allowPositive() {\n    return this.min != null && this.min > 0 || this.max != null && this.max > 0;\n  }\n  typedValueEquals(value) {\n    // handle  0 -> '' case (typed = 0 even if value = '')\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n    return (super.typedValueEquals(value) || MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)) && !(value === 0 && this.value === '');\n  }\n}\n_MaskedNumber = MaskedNumber;\nMaskedNumber.UNMASKED_RADIX = '.';\nMaskedNumber.EMPTY_VALUES = [...Masked.EMPTY_VALUES, 0];\nMaskedNumber.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  mask: Number,\n  radix: ',',\n  thousandsSeparator: '',\n  mapToRadix: [_MaskedNumber.UNMASKED_RADIX],\n  min: Number.MIN_SAFE_INTEGER,\n  max: Number.MAX_SAFE_INTEGER,\n  scale: 2,\n  normalizeZeros: true,\n  padFractionalZeros: false,\n  parse: Number,\n  format: n => n.toLocaleString('en-US', {\n    useGrouping: false,\n    maximumFractionDigits: 20\n  })\n};\nIMask.MaskedNumber = MaskedNumber;\n\nexport { MaskedNumber as default };\n","import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by custom Function */\nclass MaskedFunction extends Masked {\n  /** */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update({\n      ...opts,\n      validate: opts.mask\n    });\n  }\n}\nIMask.MaskedFunction = MaskedFunction;\n\nexport { MaskedFunction as default };\n","import createMask from './factory.js';\nimport IMask from '../core/holder.js';\nimport '../core/utils.js';\n\n/** Mask pipe source and destination types */\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue'\n};\n/** Creates new pipe function depending on mask type, source and destination options */\nfunction createPipe(arg, from, to) {\n  if (from === void 0) {\n    from = PIPE_TYPE.MASKED;\n  }\n  if (to === void 0) {\n    to = PIPE_TYPE.MASKED;\n  }\n  const masked = createMask(arg);\n  return value => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nfunction pipe(value, mask, from, to) {\n  return createPipe(mask, from, to)(value);\n}\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n\nexport { PIPE_TYPE, createPipe, pipe };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport MaskedPattern from './pattern.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern mask */\nclass RepeatBlock extends MaskedPattern {\n  get repeatFrom() {\n    var _ref;\n    return (_ref = Array.isArray(this.repeat) ? this.repeat[0] : this.repeat === Infinity ? 0 : this.repeat) != null ? _ref : 0;\n  }\n  get repeatTo() {\n    var _ref2;\n    return (_ref2 = Array.isArray(this.repeat) ? this.repeat[1] : this.repeat) != null ? _ref2 : Infinity;\n  }\n  constructor(opts) {\n    super(opts);\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    var _ref3, _ref4, _this$_blocks;\n    const {\n      repeat,\n      ...blockOpts\n    } = normalizeOpts(opts); // TODO type\n    this._blockOpts = Object.assign({}, this._blockOpts, blockOpts);\n    const block = createMask(this._blockOpts);\n    this.repeat = (_ref3 = (_ref4 = repeat != null ? repeat : block.repeat) != null ? _ref4 : this.repeat) != null ? _ref3 : Infinity; // TODO type\n\n    super._update({\n      mask: 'm'.repeat(Math.max(this.repeatTo === Infinity && ((_this$_blocks = this._blocks) == null ? void 0 : _this$_blocks.length) || 0, this.repeatFrom)),\n      blocks: {\n        m: block\n      },\n      eager: block.eager,\n      overwrite: block.overwrite,\n      skipInvalid: block.skipInvalid,\n      lazy: block.lazy,\n      placeholderChar: block.placeholderChar,\n      displayChar: block.displayChar\n    });\n  }\n  _allocateBlock(bi) {\n    if (bi < this._blocks.length) return this._blocks[bi];\n    if (this.repeatTo === Infinity || this._blocks.length < this.repeatTo) {\n      this._blocks.push(createMask(this._blockOpts));\n      this.mask += 'm';\n      return this._blocks[this._blocks.length - 1];\n    }\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = new ChangeDetails();\n    for (let bi = (_this$_mapPosToBlock$ = (_this$_mapPosToBlock = this._mapPosToBlock(this.displayValue.length)) == null ? void 0 : _this$_mapPosToBlock.index) != null ? _this$_mapPosToBlock$ : Math.max(this._blocks.length - 1, 0), block, allocated;\n    // try to get a block or\n    // try to allocate a new block if not allocated already\n    block = (_this$_blocks$bi = this._blocks[bi]) != null ? _this$_blocks$bi : allocated = !allocated && this._allocateBlock(bi); ++bi) {\n      var _this$_mapPosToBlock$, _this$_mapPosToBlock, _this$_blocks$bi, _flags$_beforeTailSta;\n      const blockDetails = block._appendChar(ch, {\n        ...flags,\n        _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) == null || (_flags$_beforeTailSta = _flags$_beforeTailSta._blocks) == null ? void 0 : _flags$_beforeTailSta[bi]\n      });\n      if (blockDetails.skip && allocated) {\n        // remove the last allocated block and break\n        this._blocks.pop();\n        this.mask = this.mask.slice(1);\n        break;\n      }\n      details.aggregate(blockDetails);\n      if (blockDetails.consumed) break; // go next char\n    }\n    return details;\n  }\n  _trimEmptyTail(fromPos, toPos) {\n    var _this$_mapPosToBlock2, _this$_mapPosToBlock3;\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    const firstBlockIndex = Math.max(((_this$_mapPosToBlock2 = this._mapPosToBlock(fromPos)) == null ? void 0 : _this$_mapPosToBlock2.index) || 0, this.repeatFrom, 0);\n    let lastBlockIndex;\n    if (toPos != null) lastBlockIndex = (_this$_mapPosToBlock3 = this._mapPosToBlock(toPos)) == null ? void 0 : _this$_mapPosToBlock3.index;\n    if (lastBlockIndex == null) lastBlockIndex = this._blocks.length - 1;\n    let removeCount = 0;\n    for (let blockIndex = lastBlockIndex; firstBlockIndex <= blockIndex; --blockIndex, ++removeCount) {\n      if (this._blocks[blockIndex].unmaskedValue) break;\n    }\n    if (removeCount) {\n      this._blocks.splice(lastBlockIndex - removeCount + 1, removeCount);\n      this.mask = this.mask.slice(removeCount);\n    }\n  }\n  reset() {\n    super.reset();\n    this._trimEmptyTail();\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const removeDetails = super.remove(fromPos, toPos);\n    this._trimEmptyTail(fromPos, toPos);\n    return removeDetails;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos == null && this.repeatTo === Infinity) return Infinity;\n    return super.totalInputPositions(fromPos, toPos);\n  }\n  get state() {\n    return super.state;\n  }\n  set state(state) {\n    this._blocks.length = state._blocks.length;\n    this.mask = this.mask.slice(0, this._blocks.length);\n    super.state = state;\n  }\n}\nIMask.RepeatBlock = RepeatBlock;\n\nexport { RepeatBlock as default };\n","export { default as InputMask } from './controls/input.js';\nimport IMask from './core/holder.js';\nexport { default as HTMLContenteditableMaskElement } from './controls/html-contenteditable-mask-element.js';\nexport { default as HTMLInputMaskElement } from './controls/html-input-mask-element.js';\nexport { default as HTMLMaskElement } from './controls/html-mask-element.js';\nexport { default as MaskElement } from './controls/mask-element.js';\nexport { default as ChangeDetails } from './core/change-details.js';\nexport { DIRECTION, forceDirection } from './core/utils.js';\nexport { default as Masked } from './masked/base.js';\nexport { default as MaskedDate } from './masked/date.js';\nexport { default as MaskedDynamic } from './masked/dynamic.js';\nexport { default as MaskedEnum } from './masked/enum.js';\nexport { default as createMask, normalizeOpts } from './masked/factory.js';\nexport { default as MaskedFunction } from './masked/function.js';\nexport { default as MaskedNumber } from './masked/number.js';\nexport { default as MaskedPattern } from './masked/pattern.js';\nexport { default as ChunksTailDetails } from './masked/pattern/chunk-tail-details.js';\nexport { default as PatternFixedDefinition } from './masked/pattern/fixed-definition.js';\nexport { default as PatternInputDefinition } from './masked/pattern/input-definition.js';\nexport { PIPE_TYPE, createPipe, pipe } from './masked/pipe.js';\nexport { default as MaskedRange } from './masked/range.js';\nexport { default as MaskedRegExp } from './masked/regexp.js';\nexport { default as RepeatBlock } from './masked/repeat.js';\nimport './core/action-details.js';\nimport './controls/input-history.js';\nimport './core/continuous-tail-details.js';\nimport './masked/pattern/cursor.js';\n\ntry {\n  globalThis.IMask = IMask;\n} catch {}\n\nexport { IMask as default };\n","import IMask from 'imask';\r\n\r\nexport function maskPhone(selector) {\r\n  const elements = document.querySelectorAll(selector);\r\n  if (!elements.length) return; // Убедитесь, что элементы существуют\r\n\r\n  elements.forEach((element) => {\r\n    let mask = null;\r\n\r\n    // Функция для инициализации маски\r\n    function initializeMask() {\r\n      mask = IMask(element, {\r\n        mask: '+7 (000) 000-00-00',\r\n        lazy: true, // Показывать маску только при фокусе\r\n      });\r\n      mask.updateValue(); // Сразу обновляем значение маски\r\n    }\r\n\r\n    // При фокусе на поле ввода, показываем маску\r\n    element.addEventListener('focus', function () {\r\n      if (!mask) {\r\n        initializeMask(); // Инициализируем маску только при первом фокусе\r\n      }\r\n      if (element.value === '') {\r\n        element.value = '+7 '; // Устанавливаем начальное значение\r\n      }\r\n      mask.updateValue(); // Обновляем значение маски\r\n    });\r\n\r\n    // При потере фокуса, если поле пустое, очищаем его\r\n    element.addEventListener('blur', function () {\r\n      if (element.value.trim() === '+7') {\r\n        element.value = ''; // Очищаем поле\r\n        if (mask) {\r\n          mask.updateValue(''); // Очищаем маску\r\n        }\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nexport function shadowScrollHeader() {\r\n  const handleScroll = () => {\r\n    const headerMain = document.querySelector('.header');\r\n    const pageContainer = document.querySelector('.page__main-content');\r\n    const pageContainerTop = pageContainer.getBoundingClientRect().top;\r\n\r\n    if (headerMain) {\r\n      if (pageContainerTop < -50) {\r\n        headerMain.classList.add('with-shadow');\r\n      } else if (pageContainerTop <= 0) {\r\n        headerMain.classList.remove('with-shadow');\r\n      }\r\n    }\r\n  };\r\n\r\n  window.addEventListener('scroll', handleScroll);\r\n  // Очистка слушателя событий при размонтировании компонента\r\n  return () => {\r\n    window.removeEventListener('scroll', handleScroll);\r\n  };\r\n}\r\n\r\n//* - [ Управление переключением меню ] -\r\nexport function sidebarMenuHandle() {\r\n  const burgerButtons = document.querySelectorAll('.burger-button');\r\n  const header = document.querySelector('.header');\r\n  const sidebarMenu = document.querySelector('.sidebar-menu');\r\n\r\n  burgerButtons.forEach((burgerButton) => {\r\n    burgerButton.addEventListener('click', () => {\r\n      burgerButton.classList.toggle('is-active');\r\n\r\n      if (burgerButton.classList.contains('is-active')) {\r\n        // document.body.classList.add('no-scroll');\r\n        toggleSidebarMenu(sidebarMenu);\r\n        header.classList.add('with-shadow');\r\n      } else if (!burgerButton.classList.contains('is-active')) {\r\n        // document.body.classList.remove('no-scroll');\r\n        toggleSidebarMenu(sidebarMenu);\r\n        header.classList.remove('with-shadow');\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nexport function toggleSidebarMenu(sidebarMenu) {\r\n  const asideButton = document.querySelector('.page__aside-button');\r\n  if (sidebarMenu.classList.contains('_open-menu')) {\r\n    ///* Компенсируем исчезновение scroll bar (если нужно)\r\n\r\n    sidebarMenu.style.transition = 'transform 0.3s ease';\r\n    sidebarMenu.classList.remove('_open-menu');\r\n\r\n    resetScrollbarOffset();\r\n    document.body.classList.remove('no-scroll');\r\n    resetTransitionOnce(sidebarMenu);\r\n\r\n    if (asideButton) {\r\n      setTimeout(() => {\r\n        asideButton.style.opacity = '1';\r\n        asideButton.style.transition = 'opacity 0.3s ease';\r\n        asideButton.style.pointerEvents = 'all';\r\n      }, 300);\r\n    }\r\n  } else {\r\n    if (asideButton) {\r\n      asideButton.style.opacity = '0';\r\n      asideButton.style.transition = 'opacity 0.3s ease';\r\n      asideButton.style.pointerEvents = 'none';\r\n    }\r\n\r\n    sidebarMenu.style.transition = 'transform 0.3s ease';\r\n    sidebarMenu.classList.add('_open-menu');\r\n\r\n    handleScrollbarOffset();\r\n    document.body.classList.add('no-scroll');\r\n    resetTransitionOnce(sidebarMenu);\r\n  }\r\n\r\n  function resetTransitionOnce(element) {\r\n    function transitionEndHandler() {\r\n      element.style.transition = '';\r\n      element.removeEventListener('transitionend', transitionEndHandler);\r\n    }\r\n\r\n    element.addEventListener('transitionend', transitionEndHandler);\r\n  }\r\n}\r\n\r\n//* - [ Управление открытием модальных окон ]\r\nexport function toggleModal() {\r\n  const modals = [\r\n    {\r\n      triggerSelector: '.button-request',\r\n      modalSelector: '.request-form',\r\n    },\r\n    {\r\n      triggerSelector: '.ordercall-button',\r\n      modalSelector: '.order-call-form',\r\n    },\r\n    {\r\n      triggerSelector: '.button-question',\r\n      modalSelector: '.questions-form',\r\n    },\r\n  ];\r\n\r\n  modals.forEach(({ triggerSelector, modalSelector }) => {\r\n    const modal = document.querySelector(modalSelector);\r\n    const triggers = document.querySelectorAll(triggerSelector);\r\n    const closeBtn = modal.querySelector('.btn-close');\r\n\r\n    triggers.forEach((btn) => {\r\n      btn.addEventListener('click', () => {\r\n        handleScrollbarOffset(modal);\r\n        document.body.classList.add('no-scroll');\r\n        modal.classList.add('is-open');\r\n\r\n        if (modalSelector === '.questions-form') {\r\n          const { showFieldset } = fieldsetsToggle(); // Получаем showFieldset\r\n          showFieldset(0); // Активируем первый fieldset\r\n        }\r\n      });\r\n    });\r\n\r\n    closeBtn.addEventListener('click', () => {\r\n      resetScrollbarOffset(modal);\r\n      modal.classList.remove('is-open');\r\n      document.body.classList.remove('no-scroll');\r\n\r\n      if (modalSelector === '.questions-form') {\r\n        const active = modal.querySelector(\r\n          '.form-question__fieldset-table.active'\r\n        );\r\n        if (active) {\r\n          active.classList.remove('active');\r\n          console.log('Класс active удалён');\r\n        } else {\r\n          console.log('Нет активного fieldset');\r\n        }\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n//* - [Переклюение полей формы]\r\nexport function fieldsetsToggle() {\r\n  const container = document.querySelector('.form-question__content');\r\n  const fieldsets = document.querySelectorAll(\r\n    '.form-question .form-question__fieldset-table'\r\n  );\r\n  let current = 0;\r\n\r\n  const updateContainerHeight = () => {\r\n    const active = container.querySelector(\r\n      '.form-question__fieldset-table.active'\r\n    );\r\n    if (active) {\r\n      const height = active.offsetHeight;\r\n      container.style.height = `${height}px`;\r\n    }\r\n  };\r\n\r\n  const showFieldset = (index) => {\r\n    fieldsets.forEach((fs) => fs.classList.remove('active'));\r\n    fieldsets[index].classList.add('active');\r\n    updateContainerHeight();\r\n  };\r\n\r\n  document.querySelectorAll('._btn-next').forEach((btn) => {\r\n    btn.addEventListener('click', () => {\r\n      if (current < fieldsets.length - 1) {\r\n        current++;\r\n        showFieldset(current);\r\n      }\r\n    });\r\n  });\r\n\r\n  document.querySelectorAll('._btn-prew').forEach((btn) => {\r\n    btn.addEventListener('click', () => {\r\n      if (current > 0) {\r\n        current--;\r\n        showFieldset(current);\r\n      }\r\n    });\r\n  });\r\n\r\n  return {\r\n    showFieldset, // 👈 экспортируем\r\n  };\r\n}\r\n\r\nfunction handleScrollbarOffset(el) {\r\n  let scrollY = 0;\r\n  //* запомнаем текущее положение прокрутки\r\n  scrollY = window.scrollY || document.documentElement.scrollTop;\r\n  document.documentElement.style.setProperty(\r\n    '--scroll-position',\r\n    `${scrollY}px`\r\n  );\r\n\r\n  //* Компенсируем исчезновение scroll bar (если нужно)\r\n  const scrollbarWidth =\r\n    window.innerWidth - document.documentElement.clientWidth;\r\n\r\n  if (scrollbarWidth > 0) {\r\n    document.body.style.paddingRight = `${scrollbarWidth}px`;\r\n    if (el) {\r\n      el.style.paddingRight = `${scrollbarWidth}px`;\r\n    }\r\n  }\r\n}\r\n\r\n//* - [ Устраняем смещение Content'a  ]\r\nfunction resetScrollbarOffset(el) {\r\n  document.documentElement.style.removeProperty('--scroll-position');\r\n\r\n  if (el) {\r\n    el.style.paddingRight = '';\r\n  }\r\n\r\n  document.body.style.paddingRight = ''; // Убираем компенсацию scroll bar\r\n  window.scrollTo(0, scrollY);\r\n}\r\n\r\n//* - [ Управление оповещением cookies ] -\r\nexport function cookiesAccept(el, trigger) {\r\n  const cookiesAccept = document.querySelector(el);\r\n  const button = document.querySelector(trigger);\r\n\r\n  if (!cookiesAccept) {\r\n    console.log('Элемент cookiesAccept не найден');\r\n    return;\r\n  }\r\n\r\n  if (button) {\r\n    button.addEventListener('click', () => {\r\n      cookiesAccept.style.transform = 'translateY(100%)';\r\n      cookiesAccept.style.transition = 'transform 0.5s ease';\r\n    });\r\n  } else {\r\n    console.log('кнопка не найдена');\r\n  }\r\n\r\n  setTimeout(() => {\r\n    cookiesAccept.style.transform = 'translateY(0)';\r\n    cookiesAccept.style.transition = 'transform 0.5s ease';\r\n  }, 3000);\r\n}\r\n","//* --------------------------------[jScript]-----------------------------------\nexport default function loaded(item) {\n\twindow.onload = function () {\n\t\tdocument.querySelector(item).classList.add('preloader-remove');\n\t\tdocument.documentElement.classList.add('loaded');\n\t};\n}","import loaded from './assets/preloader.js';\nloaded('.preloader');\n// import { smoother } from './animations/animations.jsx';\n\n// const isMobile = /Mobi|Android/i.test(navigator.userAgent);\n// if (!isMobile) {\n//   smoother();\n// }\n\nimport { falidateForm } from './assets/validate-form.js';\nfalidateForm();\nimport {\n  animateHeader,\n  smoothScrollTitle,\n  fadeInItem,\n  fadeInBlock,\n  fadeInColumn,\n} from './animations/anime-js.jsx';\n\nfadeInColumn('.its-col');\nfadeInBlock('.its-block');\nfadeInItem('.its-el');\nanimateHeader();\nsmoothScrollTitle('.el-item');\nimport {\n  maskPhone,\n  cookiesAccept,\n  shadowScrollHeader,\n  sidebarMenuHandle,\n  toggleModal,\n  // fieldsetsToggle,\n} from './layouts/layouts.js';\nimport { dynamicAdaptive } from './assets/dynamic-adaptive.js';\nimport { anchorsSmoothScrolling } from './assets/anchors-smooth-scrolling.js';\ndocument.addEventListener('DOMContentLoaded', () => {\n  cookiesAccept('.cookies-accept', '.cookies-accept__button');\n});\n\n// fieldsetsToggle();\nanchorsSmoothScrolling();\nsidebarMenuHandle();\ndynamicAdaptive();\nshadowScrollHeader();\ntoggleModal();\ndocument.addEventListener('DOMContentLoaded', () => {\n  maskPhone('.phone');\n});\n\n//* ----------------------------------------------------------------------------\nconsole.log(\n  '%c РОССИЯ ',\n  'background: blue; color: yellow; font-size: x-large; ' +\n    'border-left: 5px solid black; border-top: 30px solid white; ' +\n    'border-right: 2px solid black; border-bottom: 30px solid red;'\n);\n//* ----------------------------------------------------------------------------\n\n// const el = element.querySelector('.button-container');\n// console.log(el);\n// el.addEventListener('click', () => {\n//   console.log('yes');\n// });\n","export function falidateForm() {\r\n  document.addEventListener('DOMContentLoaded', () => {\r\n    document.querySelectorAll('.form-order').forEach((form, index) => {\r\n      const name = form.querySelector('.input.name');\r\n      const phone = form.querySelector('.input.phone');\r\n      const checkbox = form.querySelector('.checkbox__input');\r\n      const sendButton = form.querySelector('.send-button');\r\n      const buttonContainer = form\r\n        .querySelector('.send-button')\r\n        .closest('.button-container');\r\n\r\n      if ([name, phone, checkbox, sendButton, buttonContainer].includes(null))\r\n        return;\r\n\r\n      /**\r\n       * @param {HTMLElement} el — элемент или его контейнер для анимации\r\n       * @param {Object} options\r\n       * @param {number} options.maxSpread  — максимальный «размах» тени (px)\r\n       * @param {number} options.duration   — общее время анимации (ms)\r\n       * @param {number} options.pulses     — количество «туда‑обратно» за это время\r\n       */\r\n\r\n      function animateError(\r\n        el,\r\n        { maxSpread = 12, duration = 1000, pulses = 3 } = {}\r\n      ) {\r\n        const container = el.closest('.button-container') || el.parentElement;\r\n        if (!container) return;\r\n\r\n        let startTime = null;\r\n        const totalTime = duration;\r\n\r\n        function frame(ts) {\r\n          if (!startTime) startTime = ts;\r\n          const elapsed = ts - startTime;\r\n          const progress = Math.min(elapsed / totalTime, 1);\r\n          const wave = Math.abs(Math.sin(progress * pulses * Math.PI));\r\n          const spread = maxSpread * wave;\r\n\r\n          container.style.boxShadow = `0 0 ${spread}px ${spread / 2}px rgba(255,0,0,0.6)`;\r\n\r\n          if (elapsed < totalTime) {\r\n            requestAnimationFrame(frame);\r\n          } else {\r\n            container.style.boxShadow = '';\r\n          }\r\n        }\r\n\r\n        requestAnimationFrame(frame);\r\n      }\r\n\r\n      function validateFormFields() {\r\n        const nameVal = name.value.trim();\r\n        const phoneVal = phone.value.trim();\r\n        const isValid =\r\n          nameVal.length >= 3 && phoneVal.length === 18 && checkbox.checked;\r\n\r\n        buttonContainer.classList.toggle('is-disabled', !isValid);\r\n        sendButton.disabled = !checkbox.checked;\r\n        return isValid;\r\n      }\r\n\r\n      function showValidationErrors() {\r\n        if (name.value.trim().length < 3) animateError(name);\r\n        if (phone.value.trim().length !== 18) animateError(phone);\r\n        if (!checkbox.checked) animateError(checkbox);\r\n      }\r\n\r\n      name.addEventListener('input', validateFormFields);\r\n      phone.addEventListener('input', validateFormFields);\r\n      checkbox.addEventListener('change', validateFormFields);\r\n\r\n      validateFormFields();\r\n\r\n      buttonContainer.addEventListener('click', (e) => {\r\n        if (buttonContainer.classList.contains('is-disabled')) {\r\n          e.preventDefault();\r\n          console.warn(`⚠️ [Форма ${index + 1}] Невалидная попытка отправки`);\r\n          showValidationErrors();\r\n        }\r\n      });\r\n\r\n      sendButton.addEventListener('click', () => {\r\n        if (\r\n          !sendButton.disabled &&\r\n          !buttonContainer.classList.contains('is-disabled')\r\n        ) {\r\n          // Получаем название цели для аналитики из кнопки\r\n          let goalName = '';\r\n          if (sendButton) {\r\n            goalName = sendButton.getAttribute('goal-name') || '';\r\n          }\r\n\r\n          // Собираем данные из формы\r\n          const formData = new FormData();\r\n          formData.append('action', 'send_telegram_message');\r\n\r\n          // Получаем номер телефона\r\n          if (phone && phone.value) {\r\n            formData.append('phone', phone.value.trim());\r\n          }\r\n\r\n          // Получаем имя\r\n          if (name && name.value) {\r\n            formData.append('name', name.value.trim());\r\n          }\r\n\r\n          // Добавляем имя цели (если есть)\r\n          formData.append('goalName', goalName);\r\n\r\n          // Отправляем данные через AJAX\r\n          fetch(localizedVars.ajax_url, {\r\n            method: 'POST',\r\n            headers: {\r\n              'X-WP-Nonce': localizedVars.ajax_nonce,\r\n            },\r\n            body: formData,\r\n          })\r\n            .then((response) => response.text())\r\n            .then((responseText) => {\r\n              alert('Ваш запрос отправлен.');\r\n              console.log('Ответ сервера:', responseText);\r\n\r\n              // Очищаем форму\r\n              if (phone) phone.value = '';\r\n              if (name) name.value = '';\r\n              if (checkbox) checkbox.checked = false;\r\n\r\n              // Делаем форму неактивной\r\n              sendButton.classList.toggle('is-disabled', true);\r\n            })\r\n            .catch((error) => {\r\n              console.error('Ошибка при отправке:', error);\r\n              alert('Произошла ошибка при отправке данных.');\r\n            });\r\n        }\r\n      });\r\n    });\r\n  });\r\n}\r\n","import { toggleSidebarMenu } from '../layouts/layouts.js';\r\n\r\nexport function anchorsSmoothScrolling() {\r\n  // Функция плавного скролла к якорю по ID\r\n  function scrollToAnchor(targetId) {\r\n    // Получаем целевой элемент по ID\r\n    const targetElement = document.getElementById(targetId);\r\n    // Если элемент не найден — выходим\r\n    if (!targetElement) return;\r\n\r\n    // Получаем текущую ширину окна\r\n    const screenWidth = window.innerWidth;\r\n\r\n    //* Устанавливаем отступ в зависимости от ширины экрана\r\n    // Базовое значение отступа (например, высота фиксированной шапки)\r\n    let offset = 100;\r\n    if (screenWidth <= 768) {\r\n      offset = 80;\r\n    } else if (screenWidth <= 1440) {\r\n      offset = 71;\r\n    }\r\n\r\n    // Вычисляем положение элемента относительно всего документа\r\n    const targetPosition =\r\n      targetElement.getBoundingClientRect().top + window.scrollY;\r\n\r\n    // Итоговая позиция прокрутки с учётом отступа\r\n    const offsetPosition = targetPosition - offset;\r\n    // Выполняем плавную прокрутку к элементу\r\n    window.scrollTo({\r\n      top: offsetPosition,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  // Обработка кликов по якорным ссылкам\r\n  document.addEventListener('DOMContentLoaded', function () {\r\n    // Находим все ссылки с классом .anchor-link\r\n    const anchorLinks = document.querySelectorAll('.anchor-link');\r\n\r\n    anchorLinks.forEach((link) => {\r\n      link.addEventListener('click', function (e) {\r\n        // Получаем значение href\r\n        const href = this.getAttribute('href');\r\n        // Создаём полноценный URL-объект\r\n        const url = new URL(href, window.location.href);\r\n\r\n        // Если якорь ведёт на другую страницу — ни хрена не делаем,\r\n        // Иначе даем браузеру свободу\r\n        if (url.pathname !== window.location.pathname) {\r\n          return;\r\n        }\r\n        // Отменяем стандартное поведение браузера (прыжок по якорю)\r\n        e.preventDefault();\r\n\r\n        // Извлекаем ID якоря из hash  (#about → about)\r\n        const targetId = url.hash.substring(1);\r\n\r\n        // Проверяем, есть ли открытое боковое меню\r\n        const sidebarMenu = e.target.closest('.sidebar-menu');\r\n        if (sidebarMenu && sidebarMenu.classList.contains('_open-menu')) {\r\n          // Кнопка открытия меню\r\n          const buttonItems = document.querySelector('.burger-button');\r\n\r\n          // Убираем класс открытия с кнопки\r\n          buttonItems?.classList.remove('is-active');\r\n\r\n          // Разрешаем прокрутку страницы\r\n          document.body.classList.remove('no-scroll');\r\n\r\n          //* Закрываем меню, если функция доступна\r\n          if (typeof toggleSidebarMenu === 'function') {\r\n            toggleSidebarMenu(sidebarMenu);\r\n          }\r\n        }\r\n\r\n        // Выполняем прокрутку к нужному якорю\r\n        scrollToAnchor(targetId);\r\n      });\r\n    });\r\n\r\n    // Внутри DOMContentLoaded\r\n    // setTimeout(() => {\r\n    //   if (window.location.hash) {\r\n    //     const targetId = window.location.hash.substring(1);\r\n    //     const targetElement = document.getElementById(targetId);\r\n    //     if (targetElement) {\r\n    //       // Прокручиваем вверх на чуть-чуть, чтобы скрыть «резкий прыжок»\r\n    //       window.scrollTo(0, 0);\r\n    //       // Затем — плавный скролл к нужному месту\r\n    //       setTimeout(() => {\r\n    //         scrollToAnchor(targetId);\r\n    //       }, 50);\r\n    //     }\r\n    //   }\r\n    // }, 0);\r\n  });\r\n}\r\n","export function dynamicAdaptive() {\n\tlet originalPositions = [];\n\tlet daElements = document.querySelectorAll('[data-da]');\n\tlet daElementsArray = [];\n\tlet daMatchMedia = [];\n\t//Заполняем массивы\n\tif (daElements.length > 0) {\n\t\tlet number = 0;\n\t\tfor (let index = 0; index < daElements.length; index++) {\n\t\t\tconst daElement = daElements[index];\n\t\t\tconst daMove = daElement.getAttribute('data-da');\n\t\t\tconst daPlace = daElement.hasAttribute('data-da-position') ? daElement.getAttribute('data-da-position') : 'last';\n\t\t\tconst daResolutionBreakpoint = daElement.hasAttribute('data-da-resolution') ? daElement.getAttribute('data-da-resolution') : 768;\n\t\t\t// noinspection JSCheckFunctionSignatures\n\t\t\tdaElement.setAttribute('data-da-index', number);\n\t\t\t//Заполняем массив первоначальных позиций\n\t\t\toriginalPositions[number] = {\n\t\t\t\t'parent': daElement.parentNode,\n\t\t\t\t'index': indexInParent(daElement)\n\t\t\t};\n\t\t\t//Заполняем массив элементов\n\t\t\tdaElementsArray[number] = {\n\t\t\t\t'element': daElement,\n\t\t\t\t'destination': document.querySelector('.' + daMove),\n\t\t\t\t'place': daPlace,\n\t\t\t\t'breakpoint': daResolutionBreakpoint\n\t\t\t};\n\t\t\tnumber++;\n\t\t}\n\t\tdynamicAdaptSort(daElementsArray);\n\n\t\t//Создаем события в точке брейкпоинта\n\t\tfor (let index = 0; index < daElementsArray.length; index++) {\n\t\t\tconst el = daElementsArray[index];\n\t\t\tconst daBreakpoint = el.breakpoint;\n\t\t\tconst daType = 'max'; // Для MobileFirst поменять на min\n\n\t\t\tconst mediaQuery = window.matchMedia(`(${daType}-width: ${daBreakpoint}px)`);\n\t\t\tdaMatchMedia.push(mediaQuery);\n\n\t\t\t// Заменяем addListener на addEventListener\n\t\t\tmediaQuery.addEventListener('change', dynamicAdapt);\n\t\t}\n\n\t}\n\n\t//Основная функция\n\tfunction dynamicAdapt() {\n\t\tfor (let index = 0; index < daElementsArray.length; index++) {\n\t\t\tconst el = daElementsArray[index];\n\t\t\tconst daElement = el.element;\n\t\t\tconst daDestination = el.destination;\n\t\t\tconst daPlace = el.place;\n\t\t\tconst daBreakpoint = el.breakpoint;\n\t\t\tconst daClassname = '_dynamic_adapt_' + daBreakpoint;\n\n\t\t\tif (daMatchMedia[index].matches) {\n\t\t\t\t//Перебрасываем элементы\n\t\t\t\tif (!daElement.classList.contains(daClassname)) {\n\t\t\t\t\tlet actualIndex = indexOfElements(daDestination)[daPlace];\n\t\t\t\t\tif (daPlace === 'first') {\n\t\t\t\t\t\tactualIndex = indexOfElements(daDestination)[0];\n\t\t\t\t\t} else if (daPlace === 'last') {\n\t\t\t\t\t\tactualIndex = indexOfElements(daDestination)[indexOfElements(daDestination).length];\n\t\t\t\t\t}\n\t\t\t\t\tdaDestination.insertBefore(daElement, daDestination.children[actualIndex]);\n\t\t\t\t\tdaElement.classList.add(daClassname);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//Возвращаем на место\n\t\t\t\tif (daElement.classList.contains(daClassname)) {\n\t\t\t\t\tdynamicAdaptBack(daElement);\n\t\t\t\t\tdaElement.classList.remove(daClassname);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// customAdapt();\n\t}\n\n\t//Вызов основной функции\n\tdynamicAdapt();\n\n\t//Функция возврата на место\n\tfunction dynamicAdaptBack(el) {\n\t\tconst daIndex = el.getAttribute('data-da-index');\n\t\tconst originalPlace = originalPositions[daIndex];\n\t\tconst parentPlace = originalPlace['parent'];\n\t\tconst indexPlace = originalPlace['index'];\n\t\tconst actualIndex = indexOfElements(parentPlace, true)[indexPlace];\n\t\tparentPlace.insertBefore(el, parentPlace.children[actualIndex]);\n\t}\n\n\t//Функция получения индекса внутри родителя\n\tfunction indexInParent(el) {\n\t\tconst children = Array.prototype.slice.call(el.parentNode.children);\n\t\treturn children.indexOf(el);\n\t}\n\n\t//Функция получения массива индексов элементов внутри родителя\n\tfunction indexOfElements(parent, back) {\n\t\tconst children = parent.children;\n\t\tconst childrenArray = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst childrenElement = children[i];\n\t\t\tif (back) {\n\t\t\t\tchildrenArray.push(i);\n\t\t\t} else {\n\t\t\t\t//Исключая перенесенный элемент\n\t\t\t\tif (childrenElement.getAttribute('data-da') == null) {\n\t\t\t\t\tchildrenArray.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn childrenArray;\n\t}\n\n\t//Сортировка объекта\n\tfunction dynamicAdaptSort(arr) {\n\t\tarr.sort(function (a, b) {\n\t\t\tif (a.breakpoint > b.breakpoint) {\n\t\t\t\treturn -1;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t} //Для MobileFirst поменять\n\t\t});\n\t\tarr.sort(function (a, b) {\n\t\t\tif (a.place > b.place) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t});\n\t}\n\n\t//Дополнительные сценарии адаптации\n\t// function customAdapt() {\n\t// \tconst viewport_width = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n\t// } \n};\n/*  \n(data-da=\"top-header__menu\" data-da-position=\"last\" data-da-resolution=\"490\")\n*/"],"names":["isBrowser","window","win","doc","document","tweenTypes","valueTypes","tickModes","compositionTypes","replace","none","blend","isRegisteredTargetSymbol","Symbol","isDomSymbol","isSvgSymbol","transformsSymbol","proxyTargetSymbol","minValue","maxValue","K","emptyString","shortTransforms","map","Map","set","validTransforms","transformsFragmentStrings","reduce","a","v","noop","hexTestRgx","rgbExecRgx","rgbaExecRgx","hslExecRgx","hslaExecRgx","digitWithExponentRgx","unitsExecRgx","lowerCaseRgx","transformsExecRgx","relativeValuesExecRgx","defaults","id","keyframes","playbackEase","playbackRate","frameRate","loop","reversed","alternate","autoplay","duration","delay","loopDelay","ease","composition","modifier","onBegin","onBeforeUpdate","onUpdate","onLoop","onPause","onComplete","onRender","scope","current","root","globals","precision","timeScale","tickThreshold","globalVersions","version","engine","AnimeJS","push","toLowerCase","str","stringStartsWith","sub","indexOf","now","Date","isArr","Array","isArray","isObj","constructor","Object","isNum","isNaN","isStr","isFnc","isUnd","isNil","isSvg","SVGElement","isHex","test","isRgb","isHsl","isKey","hasOwnProperty","parseNumber","parseFloat","pow","Math","sqrt","sin","cos","abs","ceil","exp","floor","asin","max","PI","atan2","_round","round","clamp","min","powCache","decimalLength","p","snap","increment","closest","cv","interpolate","start","end","progress","random","m","shuffle","items","t","i","length","clampInfinity","Infinity","normalizeTime","cloneArray","mergeObjects","o1","o2","merged","o1p","forEachChildren","parent","callback","reverse","prevProp","nextProp","next","_head","adjustedNextProp","_tail","currentNext","removeChild","child","prev","addChild","sortMethod","createRefreshable","tracked","args","currentIteration","currentIterationProgress","iterationProgress","_alternate","revert","cleanup","Clock","initTime","this","deltaTime","_currentTime","_elapsedTime","_startTime","_lastTime","_scheduledTime","_frameDuration","_fps","_speed","_hasChildren","fps","previousFrameDuration","fr","frameDuration","speed","pbr","requestTick","time","scheduledTime","elapsedTime","frameDelta","computeDeltaTime","delta","render","tickable","muteCallbacks","internalRender","tickMode","completed","iterationDuration","iterationCount","_currentIteration","_loopDelay","_reversed","tickableDelay","_delay","tickablePrevAbsoluteTime","tickableEndTime","tickableAbsoluteTime","tickablePrevTime","tickableCurrentTime","isCurrentTimeAboveZero","isCurrentTimeEqualOrAboveDuration","isSetter","forcedTick","isOdd","iterationElapsedTime","hasRendered","isReversed","_ease","iterationTime","isRunningBackwards","backwards","_iterationTime","began","forcedRender","absoluteTime","_offset","tweenTarget","tweenStyle","tweenTargetTransforms","tweenTargetTransformsProperties","tween","tweenTransformsNeedUpdate","tweenComposition","_composition","tweenCurrentTime","tweenChangeDuration","_changeDuration","tweenAbsEndTime","_absoluteStartTime","tweenNextRep","_nextRep","tweenPrevRep","_prevRep","tweenHasComposition","_isOverridden","_isOverlapped","tweenNewTime","tweenProgress","_updateDuration","tweenModifier","_modifier","tweenValueType","_valueType","tweenType","_tweenType","tweenIsObject","tweenIsNumber","tweenPrecision","value","number","_fromNumber","_toNumber","_unit","fn","_fromNumbers","tn","_toNumbers","r","g","b","ns","_numbers","_strings","j","l","n","s","_number","_value","tweenProperty","property","target","setAttribute","style","setProperty","_renderTransforms","key","transform","_next","paused","_resolve","tick","tl","tlIsRunningBackwards","tlChildrenTime","tlCildrenTickTime","tlChildrenHasRendered","tlChildrenHaveCompleted","tlIterationDuration","childDuration","childStartTime","childTime","childTickMode","additive","animation","update","engineTickMethod","requestAnimationFrame","setImmediate","engineCancelMethod","cancelAnimationFrame","clearImmediate","Engine","super","useDefaultMainLoop","pauseOnDocumentHidden","hidden","reqId","engineSpeed","engineFps","activeTickable","nextTickable","_running","_cancelled","cancel","wake","tickEngine","pause","killEngine","resume","resetTime","timeUnit","unit","isSecond","newScale","scaleFactor","addEventListener","getNodeList","querySelectorAll","NodeList","HTMLCollection","parseTargets","targets","flattened","flat","parsed","item","nodeList","jl","subItem","isDuplicate","k","kl","from","registerTargets","parsedTargetsArray","parsedTargetsLength","isSvgType","nodeType","cssReservedProperties","hue2rgb","q","convertColorStringValuesToRgbaArray","colorString","rgbValue","rgba","exec","rgbToRgba","hexValue","hexLength","isShort","toFixed","hexToRgba","hslValue","hsla","h","hslToRgba","setValue","targetValue","defaultValue","getFunctionValue","index","total","store","func","computed","getTweenType","prop","el","propertyName","includes","getAttribute","elParentNode","tagName","isValidSVGAttribute","get","getCSSValue","propName","animationInlineStyles","inlineStyles","getComputedStyle","getPropertyValue","getOriginalAnimatableValue","type","inlineTransforms","inlinedStylesPropertyValue","cachedTransforms","inlinePropertyName","inlinePropertyValue","slice","parseInlineTransforms","trimStart","getRelativeValue","x","y","operator","createDecomposedValueTargetObject","u","o","d","decomposeRawValue","rawValue","targetObject","num","unitMatch","matchedNumbers","match","Number","split","decomposeTweenValue","decomposedOriginalValue","lookups","_rep","WeakMap","_add","getTweenSiblings","lookup","lookupMap","targetLookup","addTweenSortMethod","c","overrideTween","composeTween","siblings","tweenCompositionType","tweenAbsStartTime","prevSibling","prevParent","prevAbsEndTime","prevPrevSibling","absoluteUpdateStartTime","prevChangeStartTime","prevTLOffset","pausePrevParentAnimation","prevParentTL","pausePrevParentTL","additiveTweenSiblings","additiveAnimation","forEach","propertyAnimation","tweens","lookupTween","valueType","additiveValues","additiveValue","_prevAdd","addAdditiveAnimation","_prev","toNumber","toNumbers","removeTweenSliblings","tweenReplaceSiblings","addTweensLookup","addTargetProps","shouldClean","delete","resetTimerProperties","timer","reviveTimer","timerId","Timer","parameters","parentPosition","register","timerInitTime","timerDefaults","timerDelay","timerDuration","timerLoop","timerLoopDelay","timerIterationCount","offsetPosition","startTime","_autoplay","_reverse","cancelled","reset","play","currentTime","seek","iterationCurrentTime","init","linked","link","restart","isPaused","count","iterations","stretch","newDuration","currentDuration","normlizedDuration","ap","complete","then","onResolve","Promise","calcBezier","aT","aA1","aA2","cubicBezier","mX1","mY1","mX2","mY2","aX","currentX","currentT","aA","aB","binarySubdivide","steps","fromStart","roundMethod","linear","argsLength","totalPoints","firstArg","lastArg","xPoints","yPoints","arg","splitValue","trim","percent","easeLinear","prevX","prevY","irregular","randomness","values","previousValue","spacing","randomValue","halfPI","doublePI","easeInPower","easeInFunctions","Quad","Cubic","Quart","Quint","Sine","Circ","Expo","Bounce","pow2","Back","overshoot","Elastic","amplitude","period","e","easeTypes","in","easeIn","out","inOut","outIn","parseEaseString","string","easesFunctions","easesLookups","parsedFn","eases","list","name","easeType","JSEasesLookups","parseEasings","propertyNamesCache","sanitizePropertyName","cachedPropertyName","lowerCaseName","angleUnitsMap","convertedValuesCache","convertValueUnit","decomposedValue","force","currentUnit","currentNumber","cachedKey","cached","convertedValue","baseline","tempEl","cloneNode","parentNode","parentEl","body","appendChild","elStyle","width","currentUnitWidth","offsetWidth","factor","cleanInlineStyles","renderable","targetStyle","originalInlinedValue","_inlineStyles","keys","removeProperty","removeAttribute","fromTargetObject","toTargetObject","toFunctionStore","keyframesTargetArray","fastSetValuesArray","keyObjectTarget","to","tweenId","JSAnimation","fastSet","parsedTargets","targetsLength","kfParams","params","properties","propertyNames","concat","filter","propArray","newKey","keyValue","totalDuration","sort","offset","prevKey","keyObj","durProgress","prevEase","currentEase","undefined","shift","generateKeyframes","animDefaults","animaPlaybackEase","animEase","hasSpring","tEasing","tDuration","tDelay","tModifier","tComposition","animInlineStyles","absoluteOffsetTime","NaN","iterationDelay","animationAnimationLength","shouldTriggerRender","targetIndex","ti","lastTransformGroupIndex","lastTransformGroupLength","propValue","isPropValueArray","arrayLength","isNotObjectValue","prevTween","firstTweenChangeStartTime","lastTweenChangeEndTime","tweenIndex","keyframe","computedToValue","tweenToValue","tweenFromValue","keyEasing","tweenEasing","tweenDuration","tweenDelay","computedComposition","hasFromvalue","hasToValue","isFromToArray","isFromToValue","tweenStartTime","absoluteStartTime","nextSibling","complexValue","notComplexValue","unitValue","notUnitValue","colorValue","notColorValue","valueToConvert","longestValue","shortestValue","_","tweenUpdateDuration","_func","_nextAdd","additiveTween","console","warn","refresh","tweenFunc","ogValue","animate","transformsShorthands","WAAPIAnimationsLookups","removeWAAPIAnimation","$el","nextLookup","matchTarget","matchProperty","matchParent","anim","commitStyles","lookupParent","_completed","animations","sync","getTargetValue","targetSelector","normalizePropName","originalValue","setTargetValues","removeTargetsFromAnimation","targetsArray","tweensMatchesTargets","tweenName","remove","waapiAnimation","controlAnimation","removeMatches","childDur","mapRange","inLow","inHigh","outLow","outHigh","lerp","amount","dt","ticker","chain","result","Proxy","apply","__","nextArgs","nextResult","utils","makeChainable","right","last","curry","$","randomPick","keepTime","wrap","roundPad","padStart","totalLength","padString","padEnd","degToRad","degrees","radToDeg","radians","parseTimelinePosition","timeline","timePosition","tlDuration","timePosStr","tlLabels","labels","hasLabels","prevOffset","goToPrevAnimationOffset","prevAnimation","getPrevChildOffset","hasSibling","matchedRelativeOperator","fullOperator","labelOffset","parsedOffset","parsedNumericalOffset","addTlChild","childParams","adjustedPosition","tlChild","getTimelineTotalDuration","Timeline","defaultsParams","globalDefaults","tlPlaybackEase","add","a1","a2","a3","isAnim","isTimer","staggeredPosition","parsedLength","staggeredChildParams","synced","position","effect","getTiming","call","label","labelName","createTimeline","Scope","rootParam","nativeElement","scopeDefaults","globalDefault","mediaQueries","constructors","revertConstructors","revertibles","constructorsOnce","revertConstructorsOnce","revertiblesOnce","once","onceIndex","methods","matches","mediaQueryLists","data","mq","_mq","matchMedia","revertible","execute","cb","activeScope","activeRoot","activeDefaults","mqs","returned","revertConstructor","addOnce","scopeConstructorCallback","currentIndex","trackedTickable","handleEvent","removeEventListener","parseScrollObserverFunctionParameter","scroller","scrollContainers","ScrollContainer","element","useWin","winWidth","winHeight","height","left","top","zIndex","scrollX","scrollY","prevScrollX","prevScrollY","scrollWidth","scrollHeight","velocity","backwardX","backwardY","scrollTicker","dataTimer","handleScroll","self","px","py","nx","ny","dx","dy","resizeTicker","updateWindowBounds","refreshScrollObservers","wakeTicker","updateScrollCoords","updateBounds","resizeObserver","ResizeObserver","observe","scrollLeft","scrollTop","innerWidth","createElement","offsetHeight","getMaxViewHeight","marginLeft","marginRight","marginTop","marginBottom","elRect","getBoundingClientRect","_debug","removeDebug","debug","unobserve","convertValueToPx","size","under","over","clampMin","clampMax","parseBoundValue","matchedOperator","splitter","splitted","valueAPx","valueBPx","getAnimationDomTarget","$linkedTarget","linkedTargets","scrollerIndex","debugColors$1","ScrollObserver","syncMode","isLinear","isEase","isSmooth","isMethods","syncMethods","biDirSync","container","scrollContainer","registerAndGetScrollContainer","repeat","horizontal","enter","leave","syncEase","syncSmooth","onSyncEnter","onSyncLeave","onSyncEnterForward","onSyncLeaveForward","onSyncEnterBackward","onSyncLeaveBackward","onEnter","onLeave","onEnterForward","onLeaveForward","onEnterBackward","onLeaveBackward","onSyncComplete","reverted","isInView","forceEnter","hasEntered","offsets","offsetStart","offsetEnd","distance","prevProgress","thresholds","coords","debugStyles","$debug","_params","backward","scroll","axis","isHori","$existingDebug","querySelector","$thresholds","$triggers","color","containerWidth","containerHeight","offLeft","offTop","half","labelHeight","labelWidth","labelSize","gradientOffset","lineCSS","baseCSS","w","cssText","isView","isTail","isFirst","isOver","isFlip","$label","$text","dirProp","flipOffset","innerHTML","classList","stickys","$target","linkedTime","offsetX","offsetY","$offsetParent","isContainerStatic","isSticky","offsetLeft","offsetTop","offsetParent","targetSize","containerSize","maxScroll","enterTarget","leaveTarget","enterContainer","leaveContainer","parsedEnterTarget","parsedLeaveTarget","parsedEnterContainer","parsedLeaveContainer","scrollDelta","sticky","shouldSeek","isBefore","isAfter","isOnTheEdge","hasUpdated","syncCompleted","lp","onScroll","segmenter","Intl","Segmenter","valueRgx","indexRgx","whiteSpaceGroupRgx","whiteSpaceRgx","lineType","wordType","charType","dataLine","wordSegmenter","graphemeSegmenter","$splitTemplate","isSegmentWordLike","seg","isWordLike","segment","setAriaHidden","getAllTopLevelElements","debugColors","line","word","char","filterEmptyElements","childElementCount","textContent","$parent","parentElement","filterLineElements","lineIndex","bin","dataLineAttr","children","generateTemplate","template","classString","class","cloneType","clone","wrapType","overflow","processHTMLTemplate","htmlTemplate","node","$parentFragment","wordIndex","charIndex","isLine","isChar","className","displayStyle","$content","content","$highestParent","$split","$replacables","replacablesLength","display","$replace","$closestParent","replaceChild","outline","TextSplitter","granularity","text","segments","words","chars","lines","accessible","includeSpaces","lineParams","wordParams","charParams","linesOnly","lineTemplate","wordTemplate","charTemplate","html","effects","effectsCleanups","cache","ready","resizeTimeout","handleSplit","clearTimeout","setTimeout","currentWidth","fonts","addEffect","refreshableEffect","disconnect","splitNode","nodeText","nodeValue","tempWords","wordSegments","$wordsFragment","createDocumentFragment","prevSeg","wordSegment","lastWordIndex","nextWord","hasWordFollowingSpace","wordToProcess","charSegments","$charsFragment","createTextNode","charSegmentsArray","charSegment","charText","$charNode","childNodes","clearCache","isCached","fontsReady","status","canSplitLines","elementsArray","linesCount","nested","linesFragment","parents","Set","clones","$clone","cloneIndex","clonesLength","$word","replaceWith","$accessible","insertBefore","firstChild","isMobile","navigator","userAgent","isString","String","isObject","obj","_obj$constructor","pick","entries","acc","_ref","DIRECTION","escapeRegExp","objectIncludes","arrA","arrB","dateA","dateB","getTime","regexpA","RegExp","regexpB","toString","prototype","ActionDetails","opts","assign","startChangePos","oldValue","oldSelection","insertedCount","cursorPos","inserted","substr","removedCount","removed","head","substring","tail","removeDirection","IMask","InputMask","maskedClass","mask","Error","MaskedRegExp","MaskedPattern","MaskedDate","MaskedNumber","MaskedDynamic","Masked","Function","MaskedFunction","normalizeOpts","instanceOpts","_mask","startsWith","createMask","nOpts","MaskedClass","MaskElement","selectionStart","_unsafeSelectionStart","selectionEnd","_unsafeSelectionEnd","select","_unsafeSelect","isActive","HTMLMaskElement","input","_onKeydown","bind","_onInput","_onBeforeinput","_onCompositionEnd","rootElement","_this$input$getRootNo","_this$input$getRootNo2","_this$input","getRootNode","activeElement","bindEvents","handlers","drop","click","focus","commit","_handlers","redo","keyCode","shiftKey","metaKey","ctrlKey","preventDefault","undo","isComposing","selectionChange","inputType","unbindEvents","HTMLInputMaskElement","setSelectionRange","HTMLContenteditableMaskElement","selection","getSelection","anchorOffset","focusOffset","createRange","range","setStart","setEnd","lastChild","removeAllRanges","addRange","InputHistory","states","currentState","isEmpty","state","MAX_LENGTH","go","clear","isContentEditable","masked","_listeners","_unmaskedValue","_rawInputValue","history","_saveSelection","_onChange","_onDrop","_onFocus","_onClick","_onUndo","_onRedo","alignCursor","alignCursorFriendly","_bindEvents","updateValue","maskEquals","_this$masked","updateOptions","unmaskedValue","updateControl","rawInputValue","typedValue","val","typedValueEquals","displayValue","_unbindEvents","_fireEvent","ev","listeners","_cursorChanging","_changingCursorPos","pos","_selection","newUnmaskedValue","newValue","newRawInputValue","newDisplayValue","isChanged","_fireChangeEvents","_historyChanging","restOpts","updateMask","updateOpts","optionsIsChanged","updateCursor","_delayUpdateCursor","_abortUpdateCursor","_inputEvent","isComplete","nearestInputPos","on","handler","off","hIndex","splice","details","oldRawValue","raw","doCommit","stopPropagation","_applyHistoryState","destroy","ChangeDetails","normalize","prep","rawInserted","tailShift","skip","aggregate","consumed","Boolean","equals","ContinuousTailDetails","stop","extend","appendTo","append","_appendPlaceholder","unshift","beforePos","shiftChar","_update","DEFAULTS","_initialized","withValueRefresh","resolve","flags","parse","format","extractInput","isFilled","direction","totalInputPositions","fromPos","toPos","extractTail","appendTail","_appendCharRaw","ch","_appendChar","checkTail","consistentState","doPrepareChar","autofix","noFixState","fixDetails","pad","chDetails","consistentTail","appended","doValidate","beforeTailState","overwrite","tailDetails","_appendEager","_beforeTailState","doPrepare","ci","doSkipInvalid","eager","_refreshing","rawInput","ret","runIsolated","_isolated","skipInvalid","prepare","prepareChar","validate","deleteCount","tailPos","eagerRemove","forceDirection","valLength","tval","EMPTY_VALUES","ChunksTailDetails","chunks","join","tailChunk","lastChunk","extendLast","firstTailChunk","blockIndex","chunk","lastBlockIter","_mapPosToBlock","chunkBlock","_stops","_blocks","remainChars","props","cstate","chunkShiftPos","PatternCursor","_log","ok","block","_blockStartPos","pushState","popState","pop","bindBlock","_pushLeft","_this$block","_pushRight","pushLeftBeforeFilled","isFixed","pushLeftBeforeInput","pushLeftBeforeRequired","isOptional","pushRightBeforeFilled","pushRightBeforeInput","pushRightBeforeRequired","PatternFixedDefinition","isUnmasking","_isRawInput","maxPos","appendEager","isResolved","PatternInputDefinition","placeholderChar","displayChar","lazy","maskOpts","currentMaskFlags","boundPos","_flags$_beforeTailSta","DEFAULT_DEFINITIONS","search","definitions","_rebuildMask","defs","exposeBlock","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","blocks","bNames","bName","expose","bOpts","blockOpts","maskedBlock","RepeatBlock","isInput","STOP_CHAR","ESCAPE_CHAR","def","maskedState","bi","every","_this$_mapPosToBlock","startBlockIndex","blockIter","blockDetails","chunkTail","_forEachBlocksInRange","bFromPos","bToPos","blockChunk","_findStopBefore","stopBefore","si","toBlockIndex","startBlockIter","endBlockIndex","_blocks2","accVal","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","fromBlockStartPos","fromBlockEndPos","removeDetails","cursor","maskedBlocks","indices","gi","InputDefinition","FixedDefinition","MaskedRange","_matchFrom","maxLength","patternOpts","fromStr","toStr","sameCharsCount","boundaries","minstr","maxstr","placeholder","padLength","extractPatternOptions","patternBlocks","GET_DEFAULT_BLOCKS","Y","getFullYear","getMonth","getDate","date","isDateExist","day","month","year","currentMask","exposeMask","compiledMasks","_overwrite","_eager","_skipInvalid","_applyDispatch","prevValueBeforeTail","inputValue","insertValue","tailValue","prevMask","prevMaskState","doDispatch","_flags$_beforeTailSta2","currentMaskRef","dispatch","currentDetails","_this$currentMask","_this$currentMask2","_this$currentMask3","_this$currentMask4","mi","_autofix","oldMask","_this$currentMask5","inputs","isCurrent","startInputPos","weight","i1","i2","MaskedEnum","enum","enum_","eopts","lengths","requiredLength","optionalLength","matchFrom","matchValue","mch","estr","istr","_MaskedNumber","_updateRegExps","allowNegative","scale","radix","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","_removeThousandsSeparators","_insertThousandsSeparators","parts","prepCh","allowPositive","_separatorsCount","extendOnSeparators","_separatorsCountFromSlice","_adjustRangeWithSeparators","prevBeforeTailValue","prevBeforeTailSeparatorsCount","appendDetails","accepted","fixedNum","UNMASKED_RADIX","beforeTailValue","beforeTailSeparatorsCount","_findSeparatorAround","searchFrom","separatorPos","separatorAroundFromPos","separatorAroundToPos","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","dropFractional","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","toLocaleString","useGrouping","maximumFractionDigits","PIPE_TYPE","MASKED","UNMASKED","TYPED","createPipe","pipe","repeatFrom","repeatTo","_ref2","_ref3","_ref4","_this$_blocks","_blockOpts","_allocateBlock","allocated","_this$_mapPosToBlock$","_this$_blocks$bi","_trimEmptyTail","_this$_mapPosToBlock2","_this$_mapPosToBlock3","firstBlockIndex","lastBlockIndex","removeCount","globalThis","maskPhone","selector","elements","initializeMask","toggleSidebarMenu","sidebarMenu","asideButton","resetTransitionOnce","transitionEndHandler","transition","contains","resetScrollbarOffset","opacity","pointerEvents","handleScrollbarOffset","documentElement","scrollbarWidth","clientWidth","paddingRight","scrollTo","loaded","onload","falidateForm","form","phone","checkbox","sendButton","buttonContainer","animateError","arguments","_ref$maxSpread","maxSpread","_ref$duration","_ref$pulses","pulses","totalTime","frame","ts","elapsed","wave","spread","boxShadow","validateFormFields","nameVal","phoneVal","isValid","checked","toggle","disabled","showValidationErrors","goalName","formData","FormData","fetch","localizedVars","ajax_url","method","headers","ajax_nonce","response","responseText","alert","log","error","fadeInColumn","fadeInBlock","fadeInItem","animateHeader","loopAnimation","easing","rotateAnim","hasEasing","staggerEase","grid","customTotal","fromFirst","fromCenter","fromLast","fromRandom","isRange","useProp","use","val1","val2","fromIndex","registeredTarget","customIndex","staggerIndex","fromX","fromY","distanceX","distanceY","output","stagger","smoothScrollTitle","cookiesAccept","trigger","button","anchorsSmoothScrolling","href","url","URL","location","pathname","targetId","hash","buttonItems","scrollToAnchor","targetElement","getElementById","screenWidth","behavior","sidebarMenuHandle","burgerButtons","header","burgerButton","dynamicAdaptive","originalPositions","daElements","daElementsArray","daMatchMedia","daElement","daMove","daPlace","hasAttribute","daResolutionBreakpoint","indexInParent","dynamicAdaptSort","arr","breakpoint","place","daBreakpoint","mediaQuery","dynamicAdapt","daDestination","destination","daClassname","actualIndex","indexOfElements","dynamicAdaptBack","daIndex","originalPlace","parentPlace","indexPlace","back","childrenArray","childrenElement","shadowScrollHeader","headerMain","pageContainerTop","toggleModal","triggerSelector","modalSelector","modal","triggers","closeBtn","btn","_fieldsetsToggle","fieldsetsToggle","fieldsets","updateContainerHeight","active","showFieldset","fs"],"sourceRoot":""}